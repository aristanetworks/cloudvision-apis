[{"uri":"https://aristanetworks.github.io/cloudvision-apis/clients/existing/","title":"Existing Clients","tags":[],"description":"","content":"Arista provides and maintains the following clients:\n   Language Repository     Go https://github.com/aristanetworks/cloudvision-go   Python https://github.com/aristanetworks/cloudvision-python    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/modeling/","title":"Modeling","tags":[],"description":"","content":"Resources are modeled in Protobuf and accessed over gRPC with a standardized set of RPCs (discussed in later sections). These models are divided into two types:\n config: models which allow user-modification, exposing modifiable/tunable options. state: models which expose read-only operational and/or derived state based on config data.  Config Models Config models describe the user\u0026rsquo;s interaction with the system. Fields in these models are populated by the user (or by defaults).\nConfig models are read-writeable, meaning their APIs expose both read and write methods. The Protobuf message extension fmp.model = \u0026quot;rw\u0026quot; denotes that a given model is used as config and the generated RPCs will expose both read and write method sets.\nState Models State models describe the operational state of the system. Fields in these models are populated by the system and are not modifiable (except through the relevant config model).\nState models only have read methods defined and are denoted with the Protobuf message extension fmp.model = \u0026quot;ro\u0026quot;.\nWhile not required, state models are allowed to \u0026ldquo;echo\u0026rdquo; the associated config model for convenience of the user. You should check the relevant model(s) before expecting this behaviour, however.\nHigh Level Config-State Flow Below is a diagram explaining the data flow from writing a Config to the system creating/updating State. Typically, this process is asynchronous and the client will receive a response to the Set request before the state is readable. Verification and durably storing the config are the only gating requirements to responding to the Config write-request.\nWhile the config request is an input to deriving the state, there are other (possible) inputs into state:\n non-configurable on-device settings or data (ex: device boot time) CloudVision configuration (ex: default user permissions) related config/state models (if noted in documentation) etc  Subscribing to State (ideally, with a filter) allows the client to wait for any asynchronous processing.\nAll responses from RPCs include a timestamp. This timestamp should be viewed as the time at which the system durably stored an action (whether config or state). Thus, all state requests will return a timestamp \u0026gt;= than that of the config that initiated the action.\nNullable Types To make partial updates (both by users into the system as well as updates from the system) possible all primitive fields, maps, and repeated fields are wrapped in nullable messages. This nullability allows both the user and the system to differentiate between unset and zero-valued fields.\nFor example:\nmessage Nullability { // This value will contain \u0026#34;\u0026#34; when not set by the user/system.  // It is not possible to know whether \u0026#34;\u0026#34; is the intended value, or simply omitted.  string unwrapped_string = 1; // This value will contain null when not set by the user/system.  // When the wrapper message is non-null, an empty string (\u0026#34;\u0026#34;) has  // the context of being intentionally set.  google.protobuf.StringValue wrapped_string = 2;}A list of the available wrapper types can be seen here, though models may define their own for maps or repeated (array) fields.\nKeys All models (whether config or state) contain a key message.\nThis key contains the minimal set of data needed to uniquely identify a given model entity. Model keys may be as simple as a single string (say, a name) or as complex as containing references to a datacenter, device, interface, or any combination of them. The complexity of the key depends entirely on the model at hand.\nMessages used for keys are denoted in protobuf with the extension: fmp.model_key = true.\n"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/clients/creating/","title":"Creating a Client","tags":[],"description":"","content":"A major advantage to Protobuf (and gRPC) is the ability to generate language bindings reliably and dependably.\nThe main gRPC site has tutorials for generating clients in many languages:\n Java Node Ruby C#/.Net \u0026hellip; and more  There is also an expansive ecosystem, so plenty of languages are supported.\nTooling In general, there are two main components to generating a language binding:\n protoc: The protobuf compiler which call the language-specific generator  typically installed via a package manager (apt, yum, brew, etc)   protoc-gen-{language}: The language-specific generator  typically installed with the language\u0026rsquo;s dependency manager, build tool, etc    Generating Regardless of language, client generation generally follows a pattern of:\n$ protoc {includes} {lang-opts} {output-opts} {inputs} We are primarily concerned with the {includes} and {inputs} bits. The rest of the options are up to you.\nThe .proto files used as inputs can be found in: cloudvision-apis repo. You should first clone (or download) that repository. Once you have it, generating a client is as simple as:\n$ export CVAPIS=/some/path/to/cloudvision-apis $ git clone https://github.com/aristanetworks/cloudvision-apis $CVAPIS $ protoc -I $CVAPIS \\  {language-specific options go here} \\  $CVAPIS/arista/example.v1/example.proto $CVAPIS/arista/example.v1/services.gen.proto In the above examples we generate the protobuf bindings (example.proto) as well as the gRPC services (services.gen.go) in the same command. You are free to do them separately, however, different language generators handle this differently.\n"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/errors/","title":"Error Handling","tags":[],"description":"","content":"Errors returned by the API follow the gRPC status code guidelines. This provides many niceties:\n Language-native idioms (exceptions, return codes, etc.) Easily mappable to HTTP error codes (used for HTTP access to RPCs) Uses metadata rather than a global schema for more detailed errors  Example: Go Unary RPCs resp, err := example.GetOne(ExampleConfigRequest{Key: key}) if err != nil { log.Printf(\u0026#34;failed to get %+v: %s\\n\u0026#34;, key, err) return err } Streaming RPCs stream, err := example.GetAll(ExampleConfigStreamRequest{...}) if err != nil { log.Fatalf(\u0026#34;failed to initialize GetAll stream: %s\u0026#34;, err) } for { value, err := stream.Recv() if err == io.EOF { // all done  break } else if err != nil { // stream was broken due to error  log.Fatalf(\u0026#34;stream was interrupted: %s\u0026#34;, err) } log.Printf(\u0026#34;%+v\\n\u0026#34;, value) } Example: Python Unary RPCs try: response = example_stub.Set(ExampleConfigSetRequest(...)) except grpc.RpcError as e: print(\u0026#39;Set failed: {0}: {1}\u0026#39;.format(e.code(), e.details())) raise e Streaming RPCs try: for resource in example_stub.GetAll(ExampleConfigStreamRequest(...)): # process resource except grpc.RpcError as e: print(\u0026#39;GetAll failed: {0}: {1}\u0026#39;.format(e.code(), e.details())) raise e "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/","title":"Uniform RPCs","tags":[],"description":"","content":"As stated previously, APIs are accesible over gRPC with a standardized set of RPCs.\nThese methods will behave consistently across models.\nRead Methods All readable models have the following RPC signatures:\nservice ExampleConfigService { rpc GetOne (ExampleConfigRequest) returns (ExampleConfigResponse); rpc GetAll (ExampleConfigStreamRequest) returns (stream ExampleConfigStreamResponse); rpc Subscribe (ExampleConfigStreamRequest) returns (stream ExampleConfigStreamResponse);}The ExampleConfigRequest, ExampleConfigResponse, ExampleConfigStreamRequest, and ExampleConfigStreamResponse are generated wrappers for a given model (ExampleConfig, in this example). By generating these wrappers we provide further consistency in request parameters.\nWrite Methods All wriable models have the following RPC signatures:\nservice ExampleConfigService { rpc Set (ExampleConfigSetRequest) returns (ExampleConfigSetResponse); rpc Delete (ExampleConfigDeleteRequest) returns (ExampleConfigDeleteResponse);}The ExampleConfigSetRequest, ExampleConfigSetResponse, ExampleConfigDeleteRequest, and ExampleConfigDeleteResponse are generated wrappers for a given model (ExampleConfig, in this example). By generating these wrappers we provide further consistency in request parameters.\n"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/connecting/","title":"Connecting","tags":[],"description":"","content":"The port used to connect to CVP is 443 for both on-prem and cloud deployments.\nAuthentication Our APIs currently support token based authentication.\nIn future releases we intend to support mutual TLS authentication which does not require tokens or login credentials to be stored along with the application.\nFor more details on gRPC authentication, see: authentication.\nToken Based Authentication This style of authentication uses the token received from the HTTP login API.\nThe following examples use python but Go, Java, or any other language capable of HTTP requests will work almost identically. To make the HTTP request, we will use the requests library which is available through pip:\npython -m pip install requests Example: token from login import requests import json import grpc CV_HOST = \u0026#34;your_cvp_hostname_or_ip\u0026#34; CV_API_PORT = \u0026#34;443\u0026#34; USERNAME = \u0026#34;your_cvp_username\u0026#34; PASSWORD = \u0026#34;your_cvp_password\u0026#34; r = requests.post(\u0026#39;https://\u0026#39; + CV_HOST + \u0026#39;/cvpservice/login/authenticate.do\u0026#39;, auth=(USERNAME, PASSWORD)) channel_credentials = grpc.ssl_channel_credentials() call_credentials = grpc.access_token_call_credentials(r.json()[\u0026#39;sessionId\u0026#39;]) combined_credentials = grpc.composite_channel_credentials(channel_credentials, call_credentials) channel = grpc.secure_channel(CV_HOST + \u0026#39;:\u0026#39; + CV_API_PORT, combined_credentials) Example: token with loading custom SSL/TLS root certificates If CVP is using a certificate signed by a certificate authority that is not installed as a root certificate, specify it like so:\nimport requests import json import grpc CV_HOST = \u0026#34;your_cvp_hostname_or_ip\u0026#34; CV_API_PORT = \u0026#34;443\u0026#34; USERNAME = \u0026#34;your_cvp_username\u0026#34; PASSWORD = \u0026#34;your_cvp_password\u0026#34; # The certificate authority that signed the CVP certificate. # If the CVP certificate is self-signed, this is just the certificate itself. # The default location of CVP\u0026#39;s self-signed certificate on a node is /etc/nginx/cvp.crt CA_PUB_CERT_PATH = \u0026#34;/path/to/ca.pem\u0026#34; r = requests.post(\u0026#39;https://\u0026#39; + CV_HOST + \u0026#39;/cvpservice/login/authenticate.do\u0026#39;, auth=(USERNAME, PASSWORD), verify=CA_PUB_CERT_PATH) call_credentials = grpc.access_token_call_credentials(r.json()[\u0026#39;sessionId\u0026#39;]) with open(CA_PUB_CERT_PATH, \u0026#39;rb\u0026#39;) as cert_file: channel_credentials = grpc.ssl_channel_credentials(cert_file.read()) combined_credentials = grpc.composite_channel_credentials(channel_credentials, call_credentials) channel = grpc.secure_channel(CV_HOST + \u0026#39;:\u0026#39; + CV_API_PORT, combined_credentials) Or download the certificate used by the server. Note that this is insecure.\nimport requests import json import ssl import tempfile import grpc CV_HOST = \u0026#34;your_cvp_hostname_or_ip\u0026#34; CV_API_PORT = \u0026#34;443\u0026#34; USERNAME = \u0026#34;your_cvp_username\u0026#34; PASSWORD = \u0026#34;your_cvp_password\u0026#34; cert = bytes(ssl.get_server_certificate((CV_HOST, int(CV_API_PORT)))) r = requests.post(\u0026#39;https://\u0026#39; + CV_HOST + \u0026#39;/cvpservice/login/authenticate.do\u0026#39;, auth=(USERNAME, PASSWORD), verify=False) call_credentials = grpc.access_token_call_credentials(r.json()[\u0026#39;sessionId\u0026#39;]) channel_credentials = grpc.ssl_channel_credentials(cert) combined_credentials = grpc.composite_channel_credentials(channel_credentials, call_credentials) channel = grpc.secure_channel(CV_HOST + \u0026#39;:\u0026#39; + CV_API_PORT, combined_credentials) Example: token from file import grpc CV_HOST = \u0026#34;your_cvp_hostname_or_ip\u0026#34; CV_API_PORT = \u0026#34;443\u0026#34; # The certificate authority that signed the CVP certificate. # If the CVP certificate is self-signed, this is just the certificate itself. # The default location of CVP\u0026#39;s self-signed certificate on a node is /etc/nginx/cvp.crt CA_PUB_CERT_PATH = \u0026#34;/path/to/ca.pem\u0026#34; with open(\u0026#39;cloudvision_access_token.txt\u0026#39;, \u0026#39;r\u0026#39;) as f: call_credentials = grpc.access_token_call_credentials(f.read().strip()) with open(CA_PUB_CERT_PATH, \u0026#39;rb\u0026#39;) as cert_file: channel_credentials = grpc.ssl_channel_credentials(cert_file.read()) combined_credentials = grpc.composite_channel_credentials(channel_credentials, call_credentials) channel = grpc.secure_channel(CV_HOST + \u0026#39;:\u0026#39; + CV_API_PORT, combined_credentials) Example: token from environment variable import grpc CV_HOST = \u0026#34;your_cvp_hostname_or_ip\u0026#34; CV_API_PORT = \u0026#34;443\u0026#34; # The certificate authority that signed the CVP certificate. # If the CVP certificate is self-signed, this is just the certificate itself. # The default location of CVP\u0026#39;s self-signed certificate on a node is /etc/nginx/cvp.crt CA_PUB_CERT_PATH = \u0026#34;/path/to/ca.pem\u0026#34; call_credentials = grpc.access_token_call_credentials(os.environ[\u0026#39;CLOUDVISION_ACCESS_TOKEN\u0026#39;]) with open(CA_PUB_CERT_PATH, \u0026#39;rb\u0026#39;) as cert_file: channel_credentials = grpc.ssl_channel_credentials(cert_file.read()) combined_credentials = grpc.composite_channel_credentials(channel_credentials, call_credentials) channel = grpc.secure_channel(CV_HOST + \u0026#39;:\u0026#39; + CV_API_PORT, combined_credentails) "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/filtering/","title":"Filtering","tags":[],"description":"","content":"Filtering is provided through a default and an (optional) additional model-specific mechanism. By default, all models support \u0026ldquo;partial equality filtering\u0026rdquo;. Models that provide a custom filtering method will document this filter-message in its model documentation.\nPartial-Equality Filters Unless intentionally disabled (and sufficiently documented), services provide a default filtering mechanism. The input type is the same as the model you are filtering, and if you wish to filter on a given field you set that field to non-nil.\nGiven:\n response: the model that may or may not be sent to the client filter: a single filter model (request allows giving multiple)  For every response in the stream, we iterate the filter list. If the filter has a field set to non-null we compare it to the response\u0026rsquo;s field value. If the values are equal we continue to the next field in the filter. If the field values do not match we \u0026ldquo;fail\u0026rdquo; the filter and move on to the next filter in the list.\nIf a response fails all filters, it is not sent to the client.\nIf a response succeeds any filter, it is sent to the client.\nService-Specific Filtering Models are allowed to also contain an \u0026ldquo;implementation specific\u0026rdquo; filter which can be more targeted, featureful, or otherwise helpful.\nThis filter type will be defined in the protobuf definition. This type should be well documented in the protobuf as well as generated documentation.\nmessage CustomFilteredStreamRequest { ... // -- documentation from the filter message type -- CustomFilter filter = 2; ... "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/clients/","title":"Clients","tags":[],"description":"","content":"Clients are generated from the base .proto files shipped in this repository using the protobuf compiler.\nWhile Arista maintains clients for some languages, creating a client for your language of choice is also possible.\n Existing Clients   Creating a Client   "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/getone/","title":"GetOne","tags":[],"description":"","content":"GetOne returns a single instance of a resource.\nThe Key field is required to be fully-specified because GetOne needs to identify exactly-one resource to fetch.\n RPC Definition The protobuf definition of GetOne is defined as such (for ExampleConfig):\nrpc GetOne (ExampleConfigRequest) returns (ExampleConfigResponse);Request Type The generated request for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigRequest { // Key uniquely identifies a ExampleConfig instance to retrieve.  // This value must be populated (non-null) and all fields set.  ExampleKey key = 1; // Time indicates the time for which you are interested in the data.  // If no time is given, the server will use the time at which it makes the request.  //  // This time is used as an upper-bound. The returned value may have been set at  // an earlier time, however, it was the value as of the supplied time.  google.protobuf.Timestamp time = 2;}Response Type The generated response for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigResponse { // Value is the value requested.  // This structure will be fully-populated as it exists in the datastore. If  // optional fields were not given at creation, these fields will be empty or  // set to default values.  ExampleConfig value = 1; // Time carries the (UTC) timestamp of the last-modification of the  // ExampleConfig instance in this response.  //  // As stated in the request above, this time will likely not match the request  // exactly. But it will be before-or-equal to the requested time.  google.protobuf.Timestamp time = 2;};"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/getall/","title":"GetAll","tags":[],"description":"","content":"GetAll fetches (and optionally filters) all resource instances.\nFor the filtering options available, see the Filtering section. These filtering options are the same for Subscribe.\nThis RPC is effectively a full-table-scan so the time to complete depends on the amount of data the resource reflects. However, being a streaming API, this RPC will return the first message as soon as it is available without any buffering.\nRPC Definition The protobuf definition of GetAll is defined as such (for ExampleConfig):\nrpc GetAll (ExampleConfigStreamRequest) returns (stream ExampleConfigStreamResponse);Request Type The generated request for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigStreamRequest { // PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.  // This requires all provided fields to be equal to the response.  //  // While transparent to users, this field also allows services to optimize internal  // subscriptions if filter(s) are sufficiently specific.  repeated ExampleConfig partial_eq_filter = 1; //  // NOTE: Models are allowed to also contain a \u0026#34;implementation specific\u0026#34; filter  // which is more targetted, simple, or otherwise helpful.  // This filter type will be defined in the protobuf definition.  //  // TimeRange allows limiting response data to within a specified time window.  // If this field is populated, at least one of the two time fields are required.  //  // This field is not allowed in the Subscribe RPC.  arista.time.TimeBounds time = 3;};Time bounds GetAll allows retrieving the history of one or many instances of a resource. These options are passed through the TimeBounds message:\nmessage TimeBounds { google.protobuf.Timestamp start = 1; google.protobuf.Timestamp end = 2;}The fields start and end can be used in the following combinations:\n end: returns the state of resources at end.  responds with only fully-specified models   start: returns the state of resources at start and updates until now.  returns all fully-specified models as of the start time, and then all subsequent changes/partials/diffs   start and end: returns the state of resources at start as well as any changes until end.  same semantics as start alone, but only changes up to the end time    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/subscribe/","title":"Subscribe","tags":[],"description":"","content":"Subscribe first returns the initial state (fully-specified messages) and then any received updates.\nThe first messages received are effectively the result of a GetAll). Once existing state has been sent to the client, any changes to resource entities are streamed back to the client. The update messages will represent what was updated and can either be a diff/partial or a fully-specified model.\nAny filters apply both to the initial state and updates.\n Clients can determine whether a given message is part of the initial GetAll or an update via the arista.subscriptions.Operation enum field on the StreamResponse type for the given resource. This enum can be found here.\nThe flow of messages follows these steps:\n N messages with arista.subscriptions.Operation::INITIAL One message with arista.subscriptions.Operation::INITIAL_SYNC_COMPLETE  this signifies the transition from initial data to udpates prevents the client from needing to hold the last operation to find transition point   N messages with either:  arista.subscriptions.Operation::UPDATED arista.subscriptions.Operation::DELETED these can happen in any order or frequency until the subscription/connection is closed    RPC Definition The protobuf definition of GetAll is defined as such (for ExampleConfig):\nrpc Subscribe (ExampleConfigStreamRequest) returns (stream ExampleConfigStreamResponse);"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/set/","title":"Set","tags":[],"description":"","content":"Set updates a resource. Updates can be whole or partial (see: nullable fields) using only fields populated in the request.\nThe Key field is required to be fully-specified because Set needs to identify exactly-one resource to delete.\n The endpoint returns the time the Set becomes effective internally and the service\u0026rsquo;s known-state of the resource.\n A *SetResponse will contain an \u0026ldquo;echo\u0026rdquo; of the resource. This echo will be the original update-request at a minimum, and may include more data.This allows services to do fast, write-only, updates to internal storage. If the service needs to query existing state first then more data can be provided to the client. If you need a full model after a Set operation, you can issue a GetOne with the returned time.\nrpc Set (ExampleConfigSetRequest) returns (ExampleSetResponse);Request Type The generated request for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigSetRequest { // ExampleConfig carries the value to set into the datastore.  ExampleConfig value = 1;};Response Type The generated response for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigSetResponse { ExampleConfig value = 1; // Time indicates the (UTC) timestamp at which the system recognizes the  // creation. The only guarantees made about this timestamp are:  //  // - it is after the time the request was received  // - a time-ranged query with StartTime==CreatedAt will include this instance.  //  google.protobuf.Timestamp time = 2;};Updating maps Set maps are merged with the existing map.\nTo delete all of the values in a map, set the wrapper message of the map but leave the map itself empty.\nUpdating repeated fields Set repeated fields replace the existing array. For example:\nt0: existing state: ['a', 'b', 'c'] t1: existing state: ['a', 'b', 'c'] set request: ['a', 'q', 'z'] t2: existing state: ['a', 'q', 'z'] To delete all of the values in a repeated field, set the wrapper message of the repeated and leave the repeated empty.\nUpdating subresources Subresources are resources that are a child of another resource. A collection of subresources with compound keys is represented by a repeated field, though this collection should be treated as unordered and uses the same update semantics as maps (tuple keys are not allowed in protobuf maps). If multiple subresources with the same key are specified, the last one in the repeated ordering is assumed to be value.\nExample: Update Given an example proto:\nsyntax = \u0026#34;proto3\u0026#34;;import \u0026#34;google/protobuf/wrappers.proto\u0026#34;;message MapValue { google.protobuf.StringValue string_val = 1; google.protobuf.Int64Value int_val = 2;}message MapWrapper { map\u0026lt;string, MapValue\u0026gt; map = 1;}message RepeatedWrapper { repeated string repeated = 1;}message ExampleModel { google.protobuf.StringValue string_val = 1; google.protobuf.Int64Value int_val = 2; RepeatedWrapper repeated = 3; MapWrapper map = 4;}And a model:\nstring_val { value: \u0026#34;one\u0026#34; } int_val { value: 2 } repeated { repeated: \u0026#34;five\u0026#34; repeated: \u0026#34;six\u0026#34; } map { map { key: \u0026#34;four\u0026#34; value { string_val { value: \u0026#34;red\u0026#34; } int_val { value: 45 } } } map { key: \u0026#34;three\u0026#34; value { string_val { value: \u0026#34;blue\u0026#34; } int_val { value: 42 } } } map { key: \u0026#34;two\u0026#34; value { string_val { value: \u0026#34;purple\u0026#34; } int_val { value: 32 } } } } Applying the following update:\nstring_val { value: \u0026#34;two\u0026#34; } repeated { repeated: \u0026#34;eight\u0026#34; repeated: \u0026#34;nine\u0026#34; } map { map { key: \u0026#34;five\u0026#34; value { string_val { value: \u0026#34;orange\u0026#34; } int_val { value: 100 } } } map { key: \u0026#34;four\u0026#34; value { string_val { value: \u0026#34;green\u0026#34; } } } map { key: \u0026#34;three\u0026#34; value { string_val { value: \u0026#34;yellow\u0026#34; } int_val { value: 12 } } } } results in the updated model:\nstring_val { value: \u0026#34;two\u0026#34; } int_val { value: 2 } repeated { repeated: \u0026#34;eight\u0026#34; repeated: \u0026#34;nine\u0026#34; } map { map { key: \u0026#34;five\u0026#34; value { string_val { value: \u0026#34;orange\u0026#34; } int_val { value: 100 } } } map { key: \u0026#34;four\u0026#34; value { string_val { value: \u0026#34;green\u0026#34; } int_val { value: 45 } } } map { key: \u0026#34;three\u0026#34; value { string_val { value: \u0026#34;yellow\u0026#34; } int_val { value: 12 } } } map { key: \u0026#34;two\u0026#34; value { string_val { value: \u0026#34;purple\u0026#34; } int_val { value: 32 } } } } "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/rpcs/delete/","title":"Delete","tags":[],"description":"","content":"Delete deletes a resource and returns the time the delete became effective.\nThe Key field is required to be fully-specified because Delete needs to identify exactly-one resource to delete.\n RPC Definition The protobuf definition of GetOne is defined as such (for ExampleConfig):\nrpc Delete (ExampleConfigDeleteRequest) returns (ExampleConfigDeleteResponse);Request Type The generated request for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigDeleteRequest { // Key indicates which ExampleConfig instance to remove.  // This field must always be set.  ExampleKey key = 1;};Response Type The generated response for a model (ExampleConfig, here) looks like so:\nmessage ExampleConfigDeleteResponse { // Key echoes back the key of the deleted ExampleConfig instance.  ExampleKey key = 1; // Time indicates the (UTC) timestamp at which the system recognizes the  // deletion. The only guarantees made about this timestamp are:  //  // - it is after the time the request was received  // - a time-ranged query with StartTime==DeletedAt will not include this instance.  //  google.protobuf.Timestamp time = 2;};"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/rest/events/","title":"Events","tags":[],"description":"","content":" Events  Get all active events  curl cvprac python requests   Get a specific event  curl cvprac python requests   Get events between two dates  curl cvprac python requests   Get all INFO severity events  curl cvprac python requests   Get specific event types  curl cvprac python requests   Get all Low device disk space events with ERROR severity  curl       jq can be used to easily format and parse the outputs.\n Events Get all active events curl curl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all\u0026#39; -b access_token=`cat token.tok` cvprac event_url = \u0026#39;/api/resources/event/v1/Event/all\u0026#39; response = client.get(event_url) python requests def get_events_all(): event_url = \u0026#39;/api/resources/event/v1/Event/all\u0026#39; url = cvp_url + event_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.get(url, headers=head, verify=False) print(response.text) get_events_all() Get a specific event curl curl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/event/v1/Event?key.key=6152f6160fc38f55\u0026amp;key.timestamp=2021-03-23T13:38:59.295341290Z\u0026#39; Result:\n{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;key\u0026#34;:\u0026#34;6152f6160fc38f55\u0026#34;, \u0026#34;timestamp\u0026#34;:\u0026#34;2021-03-23T13:38:59.295341290Z\u0026#34; }, \u0026#34;severity\u0026#34;:\u0026#34;EVENT_SEVERITY_ERROR\u0026#34;, \u0026#34;title\u0026#34;:\u0026#34;Low Disk Volume Space Available\u0026#34;, \u0026#34;description\u0026#34;:\u0026#34;Detected low disk space on volume /mnt/flash, 93.46756% of space used\u0026#34;, \u0026#34;eventType\u0026#34;:\u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34;, \u0026#34;data\u0026#34;:{ \u0026#34;data\u0026#34;:{ \u0026#34;deviceId\u0026#34;:\u0026#34;JPE15233329\u0026#34;, \u0026#34;threshold\u0026#34;:\u0026#34;90\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;93.46756\u0026#34;, \u0026#34;volume\u0026#34;:\u0026#34;/mnt/flash\u0026#34; } }, \u0026#34;components\u0026#34;:{ \u0026#34;components\u0026#34;:[ { \u0026#34;type\u0026#34;:\u0026#34;COMPONENT_TYPE_DEVICE\u0026#34;, \u0026#34;components\u0026#34;:{ \u0026#34;deviceId\u0026#34;:\u0026#34;JPE15233329\u0026#34; } } ] } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-25T14:37:00Z\u0026#34; }  The time key here shows the state of the resource at a given time, key.timestmap is part of the key for that an event.\n cvprac event_url = \u0026#39;/api/resources/event/v1/Event?\u0026#39; url = event_url + \u0026#39;key.key=\u0026#39; + key + \u0026#34;\u0026amp;key.timestamp=\u0026#34; + ts response = client.get(url) python requests def get_event(key, ts): event_url = \u0026#39;/api/resources/event/v1/Event?\u0026#39; url = cvp_url + event_url + \u0026#39;key.key=\u0026#39; + key + \u0026#34;\u0026amp;key.timestamp=\u0026#34; + ts head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.get(url, headers=head, verify=False) print(response.text) get_event(\u0026#34;bf931ff01f5c5a2\u0026#34;,\u0026#34;2021-04-01T18:14:53Z\u0026#34;) Get events between two dates curl curl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all?time.start=2021-03-24T09:00:00Z\u0026amp;time.end=2021-03-24T10:00:00Z\u0026#39; Result:\n{ \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;key\u0026#34;: \u0026#34;6a5eea29e5599b0\u0026#34;, \u0026#34;timestamp\u0026#34;: \u0026#34;2021-02-04T23:19:22.809962243Z\u0026#34; }, \u0026#34;severity\u0026#34;: \u0026#34;EVENT_SEVERITY_WARNING\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Interface went down unexpectedly\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Interface Ethernet1 on JPE19332824 is no longer operationally active\u0026#34;, \u0026#34;eventType\u0026#34;: \u0026#34;DEVICE_INTF_ERR_SMART\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE19332824\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet1\u0026#34; } }, \u0026#34;components\u0026#34;: { \u0026#34;components\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;COMPONENT_TYPE_INTERFACE\u0026#34;, \u0026#34;components\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE19332824\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet1\u0026#34; } } ] } }, \u0026#34;time\u0026#34;: \u0026#34;2021-02-04T23:19:22.809962243Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INITIAL\u0026#34; } } { \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;key\u0026#34;: \u0026#34;6acbaa29e5b6002\u0026#34;, \u0026#34;timestamp\u0026#34;: \u0026#34;2021-02-04T23:19:22.819264873Z\u0026#34; }, \u0026#34;severity\u0026#34;: \u0026#34;EVENT_SEVERITY_WARNING\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Interface went down unexpectedly\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Interface Ethernet3 on JPE19332824 is no longer operationally active\u0026#34;, \u0026#34;eventType\u0026#34;: \u0026#34;DEVICE_INTF_ERR_SMART\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE19332824\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet3\u0026#34; } }, \u0026#34;components\u0026#34;: { \u0026#34;components\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;COMPONENT_TYPE_INTERFACE\u0026#34;, \u0026#34;components\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE19332824\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet3\u0026#34; } } ] } } cvprac event_url = \u0026#39;/api/resources/event/v1/Event/all?\u0026#39; url = event_url + \u0026#39;time.start=\u0026#39; + t1 + \u0026#34;\u0026amp;time.end=\u0026#34; + t2 response = client.get(url) python requests def get_events_t1_t2(t1, t2): event_url = \u0026#39;/api/resources/event/v1/Event/all?\u0026#39; url = cvp_url + event_url + \u0026#39;time.start=\u0026#39; + t1 + \u0026#34;\u0026amp;time.end=\u0026#34; + t2 head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.get(url, headers=head, verify=False) print(response.text) get_events_t1_t2(\u0026#34;2021-03-24T09:00:00Z\u0026#34;, \u0026#34;2021-03-24T10:00:00Z\u0026#34;) Get all INFO severity events To apply filters on events, the POST method has to be used.\n curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;severity\u0026#34;: 1}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all\u0026#39; Result:\n{ \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;key\u0026#34;: \u0026#34;571d021ba26bbb96\u0026#34;, \u0026#34;timestamp\u0026#34;: \u0026#34;2020-12-11T10:35:00Z\u0026#34; }, \u0026#34;severity\u0026#34;: \u0026#34;EVENT_SEVERITY_INFO\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;High PTP skew\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Detected high PTP skew (0)\u0026#34;, \u0026#34;eventType\u0026#34;: \u0026#34;HIGH_PTP_SKEW\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE15233329\u0026#34;, \u0026#34;discovered\u0026#34;: \u0026#34;true\u0026#34;, \u0026#34;threshold\u0026#34;: \u0026#34;0.9\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;0\u0026#34; } }, \u0026#34;components\u0026#34;: { \u0026#34;components\u0026#34;: [ { \u0026#34;components\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE15233329\u0026#34; } } ] } }, \u0026#34;time\u0026#34;: \u0026#34;2020-12-11T10:35:00Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INITIAL\u0026#34; } } curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;severity\u0026#34;: \u0026#34;EVENT_SEVERITY_INFO\u0026#34;}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partial_eq_filter\u0026#34;: [{\u0026#34;severity\u0026#34;: 1}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all\u0026#39; cvprac severity = 1 ## Severity INFO payload = {\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;severity\u0026#34;: severity }]} event_url = \u0026#39;/api/resources/event/v1/Event/all\u0026#39; response = client.post(event_url, data=payload) python requests def get_events_by_severity(severity): payload = {\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;severity\u0026#34;: severity }]} event_url = \u0026#39;/api/resources/event/v1/Event/all\u0026#39; url = cvp_url + event_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) print(response.text) # Get with string value get_events_by_severity(\u0026#34;EVENT_SEVERITY_INFO\u0026#34;) # Get with enum value get_events_by_severity(1) Get specific event types curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;eventType\u0026#34;:\u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34;}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all\u0026#39; Result:\n{ \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;key\u0026#34;: \u0026#34;6152f6160fc38f55\u0026#34;, \u0026#34;timestamp\u0026#34;: \u0026#34;2021-03-23T13:38:59.295341290Z\u0026#34; }, \u0026#34;severity\u0026#34;: \u0026#34;EVENT_SEVERITY_ERROR\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Low Disk Volume Space Available\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Detected low disk space on volume /mnt/flash, 93.46756% of space used\u0026#34;, \u0026#34;eventType\u0026#34;: \u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE15233329\u0026#34;, \u0026#34;threshold\u0026#34;: \u0026#34;90\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;93.46756\u0026#34;, \u0026#34;volume\u0026#34;: \u0026#34;/mnt/flash\u0026#34; } }, \u0026#34;components\u0026#34;: { \u0026#34;components\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;COMPONENT_TYPE_DEVICE\u0026#34;, \u0026#34;components\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE15233329\u0026#34; } } ] } }, \u0026#34;time\u0026#34;: \u0026#34;2021-03-23T13:38:59.295341290Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INITIAL\u0026#34; } } cvprac etype = \u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34; payload = {\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;eventType\u0026#34;: etype }]} get_events_by_type = clnt.post(event_url, data=payload) print(get_events_by_type) python requests def get_events_by_type(etype): payload = {\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;eventType\u0026#34;: etype }]} event_url = \u0026#39;/api/resources/event/v1/Event/all\u0026#39; url = cvp_url + event_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) print(response.text) get_events_by_type(\u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34;) Get all Low device disk space events with ERROR severity The Low Disk Volume Space Available events have two default rules (custom rules can be added):\n generate a WARNING event if a partition on EOS goes above 80% generate an ERROR event if a partition on EOS goes above 90%  To get only the ERROR events we can add the severity key to our filter.\ncurl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;eventType\u0026#34;:\u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34;,\u0026#34;severity\u0026#34;:\u0026#34;EVENT_SEVERITY_ERROR\u0026#34;}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/event/v1/Event/all\u0026#39; Result:\n{ \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;key\u0026#34;: \u0026#34;6152f6160fc38f55\u0026#34;, \u0026#34;timestamp\u0026#34;: \u0026#34;2021-04-06T19:39:29.307757986Z\u0026#34; }, \u0026#34;severity\u0026#34;: \u0026#34;EVENT_SEVERITY_ERROR\u0026#34;, \u0026#34;title\u0026#34;: \u0026#34;Low Disk Volume Space Available\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Detected low disk space on volume /mnt/flash, 93.46767% of space used\u0026#34;, \u0026#34;eventType\u0026#34;: \u0026#34;LOW_DEVICE_DISK_SPACE\u0026#34;, \u0026#34;data\u0026#34;: { \u0026#34;data\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE15233329\u0026#34;, \u0026#34;threshold\u0026#34;: \u0026#34;90\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;93.46767\u0026#34;, \u0026#34;volume\u0026#34;: \u0026#34;/mnt/flash\u0026#34; } }, \u0026#34;components\u0026#34;: { \u0026#34;components\u0026#34;: [ { \u0026#34;type\u0026#34;: \u0026#34;COMPONENT_TYPE_DEVICE\u0026#34;, \u0026#34;components\u0026#34;: { \u0026#34;deviceId\u0026#34;: \u0026#34;JPE15233329\u0026#34; } } ] } }, \u0026#34;time\u0026#34;: \u0026#34;2021-04-06T19:39:29.307757986Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INITIAL\u0026#34; } }  If the partialEqFilter would\u0026rsquo;ve had two dictionaries inside the list, e.g.: [{\u0026quot;eventType\u0026quot;:\u0026quot;LOW_DEVICE_DISK_SPACE\u0026quot;},{\u0026quot;severity\u0026quot;:\u0026quot;EVENT_SEVERITY_ERROR\u0026quot;}]}' the filtering would\u0026rsquo;ve used an OR operation instead of AND, meaning that all events that have eventType=\u0026quot;LOW_DEVICE_DISK_SPACE\u0026quot; and all events that have ERROR severity would\u0026rsquo;ve been printed.\n "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/","title":"Examples","tags":[],"description":"","content":"  gRPC   REST API Examples   "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/grpc/","title":"gRPC","tags":[],"description":"","content":"gRPC API examples gRPC APIs for both Resource APIs and cloudvision.Connector can be found at:\n https://github.com/aristanetworks/cloudvision-python https://github.com/aristanetworks/cloudvision-go  "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/rest/inventory/","title":"Inventory","tags":[],"description":"","content":" Device  Get all devices from inventory  curl cvprac python requests       jq can be used to easily format and parse the outputs.\n Device Get all devices from inventory curl curl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/inventory/v1/Device/all\u0026#39; | jq \u0026#39;.result.value | with_entries(select(.[])) | select(.streamingStatus==\u0026#34;STREAMING_STATUS_ACTIVE\u0026#34;) | .hostname\u0026#39; \u0026#34;cd263\u0026#34; \u0026#34;sn413\u0026#34; \u0026#34;fm422\u0026#34; \u0026#34;sn503\u0026#34; \u0026#34;psp301\u0026#34; \u0026#34;wl504\u0026#34; \u0026#34;cloudEOS1\u0026#34; cvprac def get_active_devices(client): \u0026#39;\u0026#39;\u0026#39; Get active devices \u0026#39;\u0026#39;\u0026#39; dev_url = \u0026#39;/api/resources/inventory/v1/Device/all\u0026#39; devices_data = client.get(dev_url) devices = [] for device in devices_data[\u0026#39;data\u0026#39;]: try: if device[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;streamingStatus\u0026#39;] == \u0026#34;STREAMING_STATUS_ACTIVE\u0026#34;: devices.append(device[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;hostname\u0026#39;]) # pass on archived datasets except KeyError as e: continue return devices print(get_active_devices(clnt)) python requests from json import JSONDecoder, JSONDecodeError def json_decoder(data): decoder = JSONDecoder() pos = 0 result = [] while True: try: o, pos = decoder.raw_decode(data, pos) result.append(o) pos +=1 except JSONDecodeError: break return result def get_active_devices(): dev_url = \u0026#39;/api/resources/inventory/v1/Device/all\u0026#39; url = cvp_url + dev_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.get(url, headers=head, verify=False) devices_data = json_decoder(response.text) devices = [] for device in devices_data: try: if device[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;streamingStatus\u0026#39;] == \u0026#34;STREAMING_STATUS_ACTIVE\u0026#34;: devices.append(device[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;hostname\u0026#39;]) # pass on archived datasets except KeyError as e: continue return devices print(get_active_devices()) Sample output python3 resource_native.py [\u0026#39;cd263\u0026#39;, \u0026#39;sn413\u0026#39;, \u0026#39;fm422\u0026#39;, \u0026#39;sn503\u0026#39;, \u0026#39;psp301\u0026#39;, \u0026#39;wl504\u0026#39;, \u0026#39;cloudEOS1\u0026#39;] "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/","title":"Models","tags":[],"description":"","content":"  changecontrol.v1   configstatus.v1   endpointlocation.v1   event.v1   inventory.v1   studio.v1   tag.v1   tag.v2   workspace.v1   "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/rest/","title":"REST API Examples","tags":[],"description":"","content":"  Events   Inventory   Studios and Workspaces   Tags   Examples scripts: examples_cvprac.py, examples_python_rest.py\n REST bindings for Resource APIs were introduced in CVP 2021.1.0\n "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/rest/studios-and-workspaces/","title":"Studios and Workspaces","tags":[],"description":"","content":" Introduction Get Studio and Workspace info  Get all workspace configs Get a single workspace config Get all workspaces’ state Get a single workspace state Get a workspace build status and output Get all studio configs Get all studios’ state Get a single studio config in a workspace Get a single studio config in mainline Get a single studio state in a workspace Get a single studio state in mainline   Use an existing studio  Create a workspace Set inputs for the studio Assign the studio to devices Build the workspace Submit the workspace   Create a new Studio  Create a workspace Create a studio Build the workspace Submit the workspace   Delete a Studio  Delete a workspace     jq can be used to easily format and parse the outputs.\n Introduction This document describes how to use Studio APIs to interact with Cloudvision Studios. They follow the Resource API semantics that are documented at https://aristanetworks.github.io/cloudvision-apis/. In this document, we illustrate the APIs using HTTP endpoints with JSON requests and responses. Using protobuf bindings, these operations can be done in a supported programming language (Go and Python) as well. See the above link for further details on how to use those bindings.\nAll changes that impact device configuration must be made in a workspace and submitted. The typical sequence of operations is 1.Create a workspace 2.Add objects that you want to modify into the workspace (either brand new objects, or copies of existing objects from mainline, or content that’s already submitted via a previous workspace); 3.Build the workspace 4.Submit.\nBelow are example APIs to use an existing studio, and also to create a brand new studio that generates timezone configuration. Given are the HTTP URL for each API and the body to POST to that URL.\nYou can use the below curl command to POST the body. “$token” is obtained from the access_token cookie returned by authenticating to CVP.\ncurl -sS -k -X POST $URL --cookie \u0026#34;access_token=$token\u0026#34; -d “$BODY” e.g.\ncurl -sS -k -X POST \u0026#34;https://cvp139/api/resources/workspace/v1/WorkspaceConfig\u0026#34; --cookie \u0026#34;access_token=$token\u0026#34; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;ws-change-timezone\u0026#34;}, \u0026#34;display_name\u0026#34;: \u0026#34;Set timezone to EST\u0026#34;}\u0026#39;  Note that for the field names in the POST body, both snake case (such as studio_id) and camel case (such as studioId) are accepted. Responses are always in camel case.\n Get Studio and Workspace info Get all workspace configs curl -sS -k -X GET https://$CVP/api/resources/workspace/v1/WorkspaceConfig/all -b access_token=`cat token.tok` Get a single workspace config curl -sS -k -X GET https://$CVP/api/resources/workspace/v1/WorkspaceConfig?key.workspaceId=ws-timezone -b access_token=`cat token.tok` Get all workspaces’ state curl -sS -k -X GET https://$CVP/api/resources/workspace/v1/Workspace/all -b access_token=`cat token.tok` Get a single workspace state curl -sS -k -X GET https://$CVP/api/resources/workspace/v1/Workspace?key.workspaceId=ws-timezone -b access_token=`cat token.tok` Get a workspace build status and output curl -sS -k -X GET https://$CVP/api/resources/workspace/v1/WorkspaceBuild?key.workspaceId=ws-timezone\u0026amp;key.buildId=b1 -b access_token=`cat token.tok` Get all studio configs curl -sS -k -X GET https://$CVP/api/resources/studio/v1/StudioConfig/all -b access_token=`cat token.tok` grpcurl -H \u0026#34;Authorization: Bearer `cat token.tok`\u0026#34; -import-path $GOPATH/src/arista/resources -proto $GOPATH/src/arista/resources/arista/studio.v1/services.gen.proto -cacert cvp.crt 10.83.12.174:8443 arista.studio.v1.StudioConfigService/GetAll Get all studios’ state curl -sS -k -X GET https://$CVP/api/resources/studio/v1/Studio/all -b access_token=`cat token.tok` Get a single studio config in a workspace curl -sS -k -X GET https://$CVP/api/resources/studio/v1/StudioConfig?key.studioId=studio-timezone\u0026amp;key.workspaceId=ws-timezone -b access_token=`cat token.tok` Get a single studio config in mainline curl -sS -k -X GET https://$CVP/api/resources/studio/v1/StudioConfig?key.studioId=studio-timezone\u0026amp;key.workspaceId= -b access_token=`cat token.tok` Get a single studio state in a workspace curl -sS -k -X GET https://$CVP/api/resources/studio/v1/Studio?key.studioId=studio-timezone\u0026amp;key.workspaceId=ws-timezone -b access_token=`cat token.tok` Get a single studio state in mainline curl -sS -k -X GET https://$CVP/api/resources/studio/v1/Studio?key.studioId=studio-timezone\u0026amp;key.workspaceId= -b access_token=`cat token.tok` Output:\n{ \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;studioId\u0026#34;: \u0026#34;studio-timezone\u0026#34;, \u0026#34;workspaceId\u0026#34;: \u0026#34;\u0026#34; }, \u0026#34;displayName\u0026#34;: \u0026#34;Set timezone\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This studio generates timezone configuration\u0026#34;, \u0026#34;template\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TEMPLATE_TYPE_MAKO\u0026#34;, \u0026#34;body\u0026#34;: \u0026#34;%if timezoneAssignment[\\\u0026#34;timezone\\\u0026#34;]:\\nclock timezone ${timezoneAssignment[\\\u0026#34;timezone\\\u0026#34;]}\\n%endif\\n\u0026#34; }, \u0026#34;inputSchema\u0026#34;: { ... ... } } Use an existing studio Create a workspace URL: https://$CVP_INSTANCE/api/resources/workspace/v1/WorkspaceConfig \nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-change-timezone\u0026#34; } \u0026#34;display_name\u0026#34;:\u0026#34;Configure timezone\u0026#34;, \u0026#34;description\u0026#34;:\u0026#34;Configure timezone on all devices\u0026#34;, } Set inputs for the studio URL: https://$CVP/api/resources/studio/v1/InputsConfig \nPOST BODY:\n Note the embedded JSON string.\n { \u0026#34;key\u0026#34;: { \u0026#34;studio_id\u0026#34;: \u0026#34;studio-timezone\u0026#34;, \u0026#34;workspace_id\u0026#34;: \u0026#34;ws-change-timezone\u0026#34; }, \u0026#34;inputs\u0026#34;: \u0026#34;{\\n \\\u0026#34;timezoneAssignment\\\u0026#34;: [\\n {\\n \\\u0026#34;inputs\\\u0026#34;: {\\n \\\u0026#34;timezone\\\u0026#34;: \\\u0026#34;IST\\\u0026#34;\\n },\\n \\\u0026#34;tags\\\u0026#34;: {\\n \\\u0026#34;query\\\u0026#34;: \\\u0026#34;eos:4.20\\\u0026#34;\\n }\\n },\\n {\\n \\\u0026#34;inputs\\\u0026#34;: {\\n \\\u0026#34;timezone\\\u0026#34;: \\\u0026#34;AST\\\u0026#34;\\n },\\n \\\u0026#34;tags\\\u0026#34;: {}\\n }\\n ]\\n }\\n\u0026#34; } Assign the studio to devices URL: https://$CVP/api/resources/studio/v1/AssignedTagsConfig \nPOST BODY:\n{ \u0026#34;key\u0026#34;: { \u0026#34;studio_id\u0026#34;: \u0026#34;studio-timezone\u0026#34;, \u0026#34;workspace_id\u0026#34;: \u0026#34;ws-change-timezone\u0026#34; }, \u0026#34;query\u0026#34;: \u0026#34;datacenter:NY\u0026#34; } Build the workspace URL: https://$CVP/api/resources/workspace/v1/WorkspaceConfig \nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-change-timezone\u0026#34; }, \u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;, \u0026#34;request_params\u0026#34;:{ \u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34; } } Submit the workspace URL: https://$CVP/api/resources/workspace/v1/WorkspaceConfig \nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-change-timezone\u0026#34; }, \u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;, \u0026#34;request_params\u0026#34;:{ \u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34; } } Create a new Studio Create a workspace URL: https://$CVP_INSTANCE/api/resources/workspace/v1/WorkspaceConfig\nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-timezone\u0026#34; } \u0026#34;display_name\u0026#34;:\u0026#34;Configure timezone\u0026#34;, \u0026#34;description\u0026#34;:\u0026#34;Configure timezone on all devices\u0026#34;, } Create a studio URL: https://$CVP_INSTANCE/api/resources/studio/v1/StudioConfig\nPOST BODY:\n{ \u0026#34;key\u0026#34;: { \u0026#34;studio_id\u0026#34;: \u0026#34;studio-timezone\u0026#34;, \u0026#34;workspace_id\u0026#34;: \u0026#34;ws-change-timezone\u0026#34; }, \u0026#34;display_name\u0026#34;: \u0026#34;Set timezone\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;This configlet generates timezone configuration\u0026#34;, \u0026#34;template\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;TEMPLATE_TYPE_MAKO\u0026#34;, \u0026#34;body\u0026#34;: \u0026#34;% if timezone:\\n clock timezone ${timezone}\\n% endif\\n\u0026#34; }, \u0026#34;input_schema\u0026#34;: { \u0026#34;fields\u0026#34;: { \u0026#34;values\u0026#34;: { \u0026#34;root\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;root\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INPUT_FIELD_TYPE_GROUP\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;\u0026#34;, \u0026#34;group_props\u0026#34;: { \u0026#34;members\u0026#34;: { \u0026#34;values\u0026#34;: [ \u0026#34;inputfield_timezoneAssignment\u0026#34; ] } } }, \u0026#34;inputfield_timezoneAssignment\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;inputfield_timezoneAssignment\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INPUT_FIELD_TYPE_RESOLVER\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;timezoneAssignment\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;Timezone Assignment\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Timezone resolver input\u0026#34;, \u0026#34;required\u0026#34;: false, \u0026#34;resolver_props\u0026#34;: { \u0026#34;base_field_id\u0026#34;: \u0026#34;inputfield_timezone\u0026#34;, \u0026#34;display_mode\u0026#34;: \u0026#34;RESOLVER_FIELD_DISPLAY_MODE_SPARSE\u0026#34;, \u0026#34;input_mode\u0026#34;: \u0026#34;RESOLVER_FIELD_INPUT_MODE_MULTI_DEVICE_TAG\u0026#34; } }, \u0026#34;inputfield_timezone\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;inputfield_timezone\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INPUT_FIELD_TYPE_STRING\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;timezone\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;Timezone\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Timezone value configured on the device\u0026#34;, \u0026#34;string_props\u0026#34;: { \u0026#34;default_value\u0026#34;: \u0026#34;GMT\u0026#34;, \u0026#34;static_options\u0026#34;: { \u0026#34;values\u0026#34;: [ \u0026#34;CST\u0026#34;, \u0026#34;EST\u0026#34;, \u0026#34;GMT\u0026#34;, \u0026#34;PST\u0026#34; ] } } } } } } } Build the workspace URL: https://$CVP/api/resources/workspace/v1/WorkspaceConfig\nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-timezone\u0026#34; }, \u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;, \u0026#34;request_params\u0026#34;:{ \u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34; } } Submit the workspace URL: https://$CVP/api/resources/workspace/v1/WorkspaceConfig \nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-timezone\u0026#34; }, \u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;, \u0026#34;request_params\u0026#34;:{ \u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34; } } Delete a Studio Delete a workspace URL: https://$CVP_INSTANCE/api/resources/workspace/v1/WorkspaceConfig\nPOST BODY:\n{ \u0026#34;key\u0026#34;:{ \u0026#34;workspace_id\u0026#34;:\u0026#34;ws-timezone\u0026#34; } } grpcurl example:\ngrpcurl -H \u0026#34;Authorization: Bearer `cat token.tok`\u0026#34; -import-path $GOPATH/src/arista/resources -proto $GOPATH/src/arista/resources/arista/workspace.v1/services.gen.proto -cacert cvp.crt -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;: \u0026#34;builtin-studios-V0-l3ls\u0026#34;}}\u0026#39; 10.83.12.174:8443 arista.workspace.v1.WorkspaceConfigService/Delete Result:\n{ \u0026#34;key\u0026#34;: { \u0026#34;workspaceId\u0026#34;: \u0026#34;builtin-studios-V0-l3ls\u0026#34; }, \u0026#34;time\u0026#34;: \u0026#34;2021-07-22T17:09:51.788962287Z\u0026#34; } curl example\ncurl -sS -kX DELETE --header \u0026#39;Accept: application/json\u0026#39; -H \u0026#34;Authorization: Bearer `cat token.tok`\u0026#34; \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig?key.workspaceId=builtin-studios-V0-l3ls\u0026#39; Result:\n{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;builtin-studios-V0-l3ls\u0026#34;}, \u0026#34;time\u0026#34;:\u0026#34;2021-07-22T17:39:28.789768498Z\u0026#34;}% "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/examples/rest/tag/","title":"Tags","tags":[],"description":"","content":" Tags  Tag.v1  Get all device tags Get all assigned interface tags Get all tags for a device Get all tags for an interface of a device Get all interfaces that have a specific tag assigned Get all interfaces that have a tag with a specific value on a device Create interface tag Assign interface tag Create device tag Assign device tag   Tag.v2  Get all tags Get all interface tags Get all device tags Create and assign device tag Create and assign interface tag Unassign a device or interface tag Remove an existing device/interface tag Show all tags edits in a workspace Show all tag assignment edits in a workspace Leaf-spine topology tagging example       jq can be used to easily format and parse the outputs.\n Tags ================================\nTag.v1 Get all device tags curl curl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/tag/v1/DeviceTag/all\u0026#39; | jq \u0026#39;.result.value.key | .label + \u0026#34; \u0026#34; + .value\u0026#39; Result:\n\u0026lt;snippet\u0026gt; topology_datacenter Shannon\u0026#34; \u0026#34;topology_datacenter vDC1R\u0026#34; \u0026#34;topology_hint_pod Vantage\u0026#34; \u0026#34;topology_hint_pod vPod1R\u0026#34; \u0026#34;topology_hint_pod vPod3R\u0026#34; \u0026#34;topology_hint_pod tac-ire-pod1\u0026#34; \u0026#34;topology_hint_pod tac-ire-pod3\u0026#34; \u0026#34;topology_hint_pod tac-ire-pod2\u0026#34; \u0026#34;topology_hint_rack Rack17\u0026#34; \u0026#34;topology_hint_rack Rack15\u0026#34; \u0026#34;topology_hint_rack Rack27\u0026#34; \u0026#34;topology_hint_rack vRack2R\u0026#34; \u0026#34;topology_hint_rack vRack1R\u0026#34; \u0026#34;topology_hint_rack vRack4R\u0026#34; \u0026#34;topology_hint_rack vRack3R\u0026#34; \u0026#34;topology_hint_type edge\u0026#34; \u0026#34;topology_hint_type leaf\u0026#34; \u0026#34;topology_hint_type spine\u0026#34; \u0026#34;topology_hint_type server\u0026#34; \u0026#34;topology_hint_type endpoint\u0026#34; \u0026#34;topology_hint_type management\u0026#34; \u0026#34;topology_hint_datacenter vDC1R\u0026#34; \u0026#34;topology_hint_datacenter Shannon\u0026#34; \u0026lt;snippet\u0026gt; cvprac def get_all_device_tags(client): tag_url = \u0026#39;/api/resources/tag/v1/DeviceTag/all\u0026#39; tag_data = client.get(tag_url) tags = [] for tag in tag_data[\u0026#39;data\u0026#39;]: tags.append({tag[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;key\u0026#39;][\u0026#39;label\u0026#39;]:tag[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;key\u0026#39;][\u0026#39;value\u0026#39;]}) return tags for tag in get_all_device_tags(clnt): print (tag) python requests def get_all_device_tags(): tag_url = \u0026#39;/api/resources/tag/v1/DeviceTag/all\u0026#39; url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.get(url, headers=head, verify=False) tag_data = json_decoder(response.text) tags = [] for tag in tag_data: tags.append({tag[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;key\u0026#39;][\u0026#39;label\u0026#39;]:tag[\u0026#39;result\u0026#39;][\u0026#39;value\u0026#39;][\u0026#39;key\u0026#39;][\u0026#39;value\u0026#39;]}) return tags pp(get_all_device_tags()) Get all assigned interface tags curl curl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; cvprac def get_all_interface_tags(client): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; tags = client.get(tag_url) return tags[\u0026#39;data\u0026#39;] print(get_all_interface_tags(clnt)) python requests def get_all_interface_tags(): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.get(url, headers=head, verify=False) tags = json_decoder(response.text) return tags pp(get_all_interface_tags()) Get all tags for a device curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;}}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; Result:\n{ \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed1Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet1\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-30T18:33:18.639842067Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } } { \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;Ethernet1\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet1\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.945746826Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } } { \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed10Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet2\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.906241108Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } } { \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;Ethernet2\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet2\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.906241108Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } } Using jq to only print the list of 40Gbps interfaces:\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed40Gbps\u0026#34; }}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; | jq \u0026#39;.result.value.key.interfaceId\u0026#39; \u0026#34;Ethernet97\u0026#34; \u0026#34;Ethernet98\u0026#34; \u0026#34;Ethernet99\u0026#34; \u0026#34;Ethernet100\u0026#34; \u0026#34;Ethernet101\u0026#34; \u0026#34;Ethernet102\u0026#34; \u0026#34;Ethernet103\u0026#34; \u0026#34;Ethernet104\u0026#34; cvprac def filter_interface_tag(client, dId=None, ifId=None, label=None, value=None): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; payload = { \u0026#34;partialEqFilter\u0026#34;: [ {\u0026#34;key\u0026#34;: {\u0026#34;deviceId\u0026#34;: dId, \u0026#34;interfaceId\u0026#34;: ifId, \u0026#34;label\u0026#34;: label, \u0026#34;value\u0026#34;: value}} ] } response = client.post(tag_url, data=payload) return response print(filter_interface_tag(clnt, dId=\u0026#34;JPE14070534\u0026#34;, value=\u0026#34;speed40Gbps\u0026#34;)) python requests def filter_interface_tag(dId=None, ifId=None, label=None, value=None): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; payload = { \u0026#34;partialEqFilter\u0026#34;: [ {\u0026#34;key\u0026#34;: {\u0026#34;deviceId\u0026#34;: dId, \u0026#34;interfaceId\u0026#34;: ifId, \u0026#34;label\u0026#34;: label, \u0026#34;value\u0026#34;: value}} ] } url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) return response.text print(filter_interface_tag(dId=\u0026#34;JPE14070534\u0026#34;, value=\u0026#34;speed40Gbps\u0026#34;)) Get all tags for an interface of a device curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet1\u0026#34;}}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; Result:\n{ \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;name\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;Ethernet1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet1\u0026#34; } }, \u0026#34;time\u0026#34;: \u0026#34;2021-03-27T00:38:41.945746826Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INITIAL\u0026#34; } } { \u0026#34;result\u0026#34;: { \u0026#34;value\u0026#34;: { \u0026#34;key\u0026#34;: { \u0026#34;label\u0026#34;: \u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;speed1Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet1\u0026#34; } }, \u0026#34;time\u0026#34;: \u0026#34;2021-03-30T18:33:18.639842067Z\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;INITIAL\u0026#34; } } cvprac print(filter_interface_tag(clnt, dId=\u0026#34;JPE14070534\u0026#34;, ifId=\u0026#34;Ethernet1\u0026#34;)) python requests print(filter_interface_tag(dId=\u0026#34;JPE14070534\u0026#34;, ifId=\u0026#34;Ethernet1\u0026#34;)) Get all interfaces that have a specific tag assigned curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;lldp_hostname\u0026#34; }}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; | jq \u0026#39;.result.value.key.interfaceId\u0026#39; \u0026#34;Ethernet2\u0026#34; cvprac print(filter_interface_tag(clnt, dId=\u0026#34;JPE14070534\u0026#34;, label=\u0026#34;lldp_hostname\u0026#34;)) python requests print(filter_interface_tag(dId=\u0026#34;JPE14070534\u0026#34;, label=\u0026#34;lldp_hostname\u0026#34;)) Get all interfaces that have a tag with a specific value on a device curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;deviceId\u0026#34;: \u0026#34;JPE14070534\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed40Gbps\u0026#34; }}]}\u0026#39; \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig/all\u0026#39; Result:\n\u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.886763089Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } }{ \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed40Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet101\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.901936362Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } }{ \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed40Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet102\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.935420476Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } }{ \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed40Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet103\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.970652360Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } }{ \u0026#34;result\u0026#34;:{ \u0026#34;value\u0026#34;:{ \u0026#34;key\u0026#34;:{ \u0026#34;label\u0026#34;:\u0026#34;speed\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;speed40Gbps\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet104\u0026#34; } }, \u0026#34;time\u0026#34;:\u0026#34;2021-03-27T00:38:41.968041519Z\u0026#34;, \u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34; } } cvprac print(filter_interface_tag(clnt, dId=\u0026#34;JPE14070534\u0026#34;, value=\u0026#34;speed40Gbps\u0026#34;)) python requests print(filter_interface_tag(dId=\u0026#34;JPE14070534\u0026#34;, value=\u0026#34;speed40Gbps\u0026#34;)) Create interface tag curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;lldp_chassis\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;50:08:00:0d:00:08\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;lldp_chassis\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;50:08:00:0d:00:08\u0026#34;}}, \u0026#34;time\u0026#34;:\u0026#34;2021-04-02T21:58:29.100209908Z\u0026#34;}% cvprac def create_itag(client, label, value): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label,\u0026#34;value\u0026#34;:value}} response = client.post(tag_url, data=payload) return response create_itag(clnt, \u0026#34;lldp_chassis\u0026#34;, \u0026#34;50:08:00:0d:00:38\u0026#34;) python requests def create_itag(label, value): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label,\u0026#34;value\u0026#34;:value}} url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) return response create_itag(\u0026#34;lldp_chassis\u0026#34;, \u0026#34;50:08:00:0d:00:18\u0026#34;) Assign interface tag curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/tag/v1/InterfaceTagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;lldp_chassis\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;50:08:00:0d:00:08\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;: \u0026#34;Ethernet2\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;lldp_chassis\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;50:08:00:0d:00:08\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet2\u0026#34;}}, \u0026#34;time\u0026#34;:\u0026#34;2021-04-02T22:00:29.492449919Z\u0026#34;}% cvprac def assign_itag(client, dId, ifId, label, value): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagAssignmentConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label, \u0026#34;value\u0026#34;:value, \u0026#34;deviceId\u0026#34;: dId, \u0026#34;interfaceId\u0026#34;: ifId}} response = client.post(tag_url, data=payload) return response assign_itag(clnt, \u0026#34;JPE14070534\u0026#34;, \u0026#34;Ethernet4\u0026#34;, \u0026#34;lldp_chassis\u0026#34;, \u0026#34;50:08:00:0d:00:38\u0026#34;) python requests def assign_itag(dId, ifId, label, value): tag_url = \u0026#39;/api/resources/tag/v1/InterfaceTagAssignmentConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label, \u0026#34;value\u0026#34;:value, \u0026#34;deviceId\u0026#34;: dId, \u0026#34;interfaceId\u0026#34;: ifId}} url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) return response assign_itag(\u0026#34;JPE14070534\u0026#34;, \u0026#34;Ethernet3\u0026#34;, \u0026#34;lldp_chassis\u0026#34;, \u0026#34;50:08:00:0d:00:48\u0026#34;) Create device tag curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/tag/v1/DeviceTagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;ire-pod10\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;ire-pod10\u0026#34;}}, \u0026#34;time\u0026#34;:\u0026#34;2021-04-02T21:55:03.147265316Z\u0026#34;}% cvprac def create_dtag(client, label, value): tag_url = \u0026#39;/api/resources/tag/v1/DeviceTagConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label,\u0026#34;value\u0026#34;:value}} response = client.post(tag_url, data=payload) return response create_dtag(clnt, \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;ire-pod11\u0026#34;) python requests def create_dtag(label, value): tag_url = \u0026#39;/api/resources/tag/v1/DeviceTagConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label, \u0026#34;value\u0026#34;:value}} url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) return response create_dtag(\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;ire-pod11\u0026#34;) Assign device tag curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.13.33/api/resources/tag/v1/DeviceTagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;ire-pod10\u0026#34;,\u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;ire-pod10\u0026#34;, \u0026#34;deviceId\u0026#34;:\u0026#34;JPE14070534\u0026#34;}}, \u0026#34;time\u0026#34;:\u0026#34;2021-04-02T21:56:24.575813791Z\u0026#34;}% cvprac def assign_dtag(client, dId, label, value): tag_url = \u0026#39;/api/resources/tag/v1/DeviceTagAssignmentConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label, \u0026#34;value\u0026#34;:value, \u0026#34;deviceId\u0026#34;: dId}} response = client.post(tag_url, data=payload) return response assign_dtag(clnt, \u0026#34;JPE14070534\u0026#34;, \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;ire-pod11\u0026#34; ) python requests def assign_dtag(dId, label, value): tag_url = \u0026#39;/api/resources/tag/v1/DeviceTagAssignmentConfig\u0026#39; payload = {\u0026#34;key\u0026#34;:{\u0026#34;label\u0026#34;:label, \u0026#34;value\u0026#34;:value, \u0026#34;deviceId\u0026#34;: dId}} url = cvp_url + tag_url head = {\u0026#39;Authorization\u0026#39;: \u0026#39;Bearer {}\u0026#39;.format(token)} response = requests.post(url, headers=head, data=json.dumps(payload), verify=False) return response assign_dtag(\u0026#34;JPE14070534\u0026#34;, \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;ire-pod11\u0026#34;) Tag.v2 The Tag.v2 API is a workspace-aware resource APIs, meaning all changes must be done within a workspace. Changes only get commited upon submitting the workspace. The following examples will walk through device and interface tag creation and assignment workflow.\nGet all tags curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/Tag/all\u0026#39; -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;\u0026#34;}}]}\u0026#39; Result:\n{\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;bgp\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;disabled\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-31T12:13:02.196521931Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;bgp\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;enabled\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-14T07:26:29.341574116Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.23.3M\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-07-28T02:59:00.766193431Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.23.5M\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-14T07:26:27.413625640Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.25.0F\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-01T17:15:37.885129346Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.21.6F\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-07-29T13:42:04.760294195Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.23.4M\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-02T09:43:47.909750932Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.24.2F\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-07-16T12:58:30.560542937Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.23.4.3M\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-30T10:37:35.606467220Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;eos\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;4.25.3.1M\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-07T02:01:36.654997065Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan7\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-06-25T18:22:54.280867585Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan100\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-07-28T02:59:01.286803486Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan111\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-08-30T17:00:00.078489504Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan78\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-06-25T21:24:48.360777488Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan1\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-01T16:22:31.232251875Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan55\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-07-28T02:59:06.877353719Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;name\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Vlan19\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-01T17:15:38.668776675Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} Get all interface tags curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/Tag/all\u0026#39; -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;}}]}\u0026#39; Result:\n{\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;7de7c055-826c-4390-9dba-361afcb87536\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;topology_role\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;uplink\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-08-31T01:07:29.839897276Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;a79b211e-83f5-430e-b1e2-b404c5aa1075\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;interface_role\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;downlinks\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-09-01T13:29:21.111654547Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} Get all device tags curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/Tag/all\u0026#39; -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;}}]}\u0026#39; Result:\n{\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testTag\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;ire-pod10\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T17:55:04.750886803Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;12b90dee-b4a0-4882-b02b-3636ec7e3c4a\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;DC\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;DC1\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-08-27T11:44:44.607449628Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;12b90dee-b4a0-4882-b02b-3636ec7e3c4a\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;Role\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Leaf\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-08-27T11:44:31.028093497Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testTag\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;ire-pod111\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T17:55:14.319537170Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;26ad35cb-23e5-459c-8ef2-f1adac43406c\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;DC\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;DC@\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-07-29T13:21:27.229646717Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;26ad35cb-23e5-459c-8ef2-f1adac43406c\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;DC\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;DC1\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-07-29T13:22:34.405718999Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;0fa846aa-7830-402e-a33f-0fa20ad1ccf7\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;Role\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;Leaf\u0026#34;},\u0026#34;creatorType\u0026#34;:\u0026#34;CREATOR_TYPE_USER\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-08-30T14:27:58.547155198Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} Create and assign device tag curl 1. Create workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;testTag\u0026#34;},\u0026#34;display_name\u0026#34;:\u0026#34;testTag\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Test tag resource APIv2\u0026#34;}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testTag\u0026#34;},\u0026#34;displayName\u0026#34;:\u0026#34;testTag\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Test tag resource APIv2\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T17:54:54.274Z\u0026#34;}% 2. Create the tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;testTag\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;avd-pod10\u0026#34;}}\u0026#39; {\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testTag\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;avd-pod10\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T17:55:14.319537170Z\u0026#34;}% 3. Assign the tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;testTag\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod10\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;4B0C688DBE67D1AC9572445DCDB552F9\u0026#34;, }, \u0026#34;remove\u0026#34;: false}\u0026#39; 4. Start the build\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;testTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;requestParams\u0026#34;:{\u0026#34;requestId\u0026#34;:\u0026#34;b1\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T17:57:18.683Z\u0026#34;}% 5. Verify the build status\ncurl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceBuild?key.workspaceId=testTag\u0026amp;key.buildId=b1\u0026#39; Result:\n{\u0026#39;value\u0026#39;: {\u0026#39;key\u0026#39;: {\u0026#39;workspaceId\u0026#39;: \u0026#39;testTag\u0026#39;, \u0026#39;buildId\u0026#39;: \u0026#39;b1\u0026#39;}, \u0026#39;state\u0026#39;: \u0026#39;BUILD_STATE_SUCCESS\u0026#39;, \u0026#39;buildResults\u0026#39;: {\u0026#39;values\u0026#39;: {}}}, \u0026#39;time\u0026#39;: \u0026#39;2021-09-02T17:59:24.116Z\u0026#39;} 6. Submit the workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;testTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;requestParams\u0026#34;:{\u0026#34;requestId\u0026#34;:\u0026#34;s1\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T18:00:13.680Z\u0026#34;}%  Tag creation and assignment can be done in separate workspaces.\n Create and assign interface tag curl 1. Create workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;testIntfTag\u0026#34;},\u0026#34;display_name\u0026#34;:\u0026#34;testIntfTag\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Test interface tag resource APIv2\u0026#34;}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testIntfTag\u0026#34;},\u0026#34;displayName\u0026#34;:\u0026#34;testIntfTag\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Test interface tag resource APIv2\u0026#34;},\u0026#34;time\u0026#34;:\u0026#34;2021-09-03T00:42:58.736Z\u0026#34;}% 2. Create the tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;testIntfTag\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;intfType\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;uplink}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testIntfTag\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;intfType\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;uplink\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-03T00:44:18.369201627Z\u0026#34;}% 3. Assign the tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;testIntfTag\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;intfType\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;uplink\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;4B0C688DBE67D1AC9572445DCDB552F9\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet1\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; 4. Start the build\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;testIntfTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testIntfTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;requestParams\u0026#34;:{\u0026#34;requestId\u0026#34;:\u0026#34;b1\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-03T01:36:15.683Z\u0026#34;}% 5. Verify the build status\ncurl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceBuild?key.workspaceId=testIntfTag\u0026amp;key.buildId=b1\u0026#39; Result:\n{\u0026#39;value\u0026#39;: {\u0026#39;key\u0026#39;: {\u0026#39;workspaceId\u0026#39;: \u0026#39;testIntfTag\u0026#39;, \u0026#39;buildId\u0026#39;: \u0026#39;b1\u0026#39;}, \u0026#39;state\u0026#39;: \u0026#39;BUILD_STATE_SUCCESS\u0026#39;, \u0026#39;buildResults\u0026#39;: {\u0026#39;values\u0026#39;: {}}}, \u0026#39;time\u0026#39;: \u0026#39;2021-09-03T01:36:24.116Z\u0026#39;} 6. Submit the workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;testIntfTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34;}}\u0026#39; Result:\n{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;testIntfTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;requestParams\u0026#34;:{\u0026#34;requestId\u0026#34;:\u0026#34;s1\u0026#34;}},\u0026#34;time\u0026#34;:\u0026#34;2021-09-02T18:00:13.680Z\u0026#34;}%  Tag creation and assignment can be done in separate workspaces.\n Unassign a device or interface tag curl 1. Create workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;deleteTag\u0026#34;},\u0026#34;display_name\u0026#34;:\u0026#34;deleteTag\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Test interface tag deletion resource APIv2\u0026#34;}\u0026#39; 2.2. Unassign an interface tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;deleteTag\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;intfType\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;uplink\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;4B0C688DBE67D1AC9572445DCDB552F9\u0026#34;, \u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet1\u0026#34;},\u0026#34;remove\u0026#34;: true}\u0026#39; 2.2. Unassign a device tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;deleteTag\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;location\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;Dublin\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;4B0C688DBE67D1AC9572445DCDB552F9\u0026#34;},\u0026#34;remove\u0026#34;: true}\u0026#39; 3. Start the build\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;deleteTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34;}}\u0026#39; 4. Verify the build status\ncurl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceBuild?key.workspaceId=deleteTag\u0026amp;key.buildId=b1\u0026#39; 5. Submit the workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;deleteTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34;}}\u0026#39; Remove an existing device/interface tag curl 1. Create workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;deleteTag\u0026#34;},\u0026#34;display_name\u0026#34;:\u0026#34;deleteTag\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Test tag deletion\u0026#34;}\u0026#39; 2.1. Delete an interface tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;deleteTag\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;intfType\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;downlink\u0026#34;}, \u0026#34;remove\u0026#34;: true}\u0026#39; 2.2. Delete a device tag\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;deleteTag\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;location\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;Dublin\u0026#34;}, \u0026#34;remove\u0026#34;: true}\u0026#39; 3. Start the build\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;deleteTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34;}}\u0026#39; 4. Verify the build status\ncurl -sS -kX GET --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceBuild?key.workspaceId=deleteTag\u0026amp;key.buildId=b1\u0026#39; 5. Submit the workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;deleteTag\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34;}}\u0026#39; Show all tags edits in a workspace curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig/all\u0026#39; -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;test1337\u0026#34;}}]}\u0026#39; Result:\n{\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;test1337\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;intfType\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;servers\u0026#34;},\u0026#34;remove\u0026#34;:false},\u0026#34;time\u0026#34;:\u0026#34;2021-09-03T22:21:08.546104408Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} Show all tag assignment edits in a workspace curl curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig/all\u0026#39; -d \u0026#39;{\u0026#34;partialEqFilter\u0026#34;: [{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;test1337\u0026#34;}}]}\u0026#39; Result:\n{\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;test1337\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;intfType\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;uplink\u0026#34;,\u0026#34;deviceId\u0026#34;:\u0026#34;4B0C688DBE67D1AC9572445DCDB552F9\u0026#34;,\u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet1\u0026#34;},\u0026#34;remove\u0026#34;:false},\u0026#34;time\u0026#34;:\u0026#34;2021-09-03T21:50:06.187034368Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} {\u0026#34;result\u0026#34;:{\u0026#34;value\u0026#34;:{\u0026#34;key\u0026#34;:{\u0026#34;workspaceId\u0026#34;:\u0026#34;test1337\u0026#34;,\u0026#34;elementType\u0026#34;:\u0026#34;ELEMENT_TYPE_INTERFACE\u0026#34;,\u0026#34;label\u0026#34;:\u0026#34;intfType\u0026#34;,\u0026#34;value\u0026#34;:\u0026#34;uplink\u0026#34;,\u0026#34;deviceId\u0026#34;:\u0026#34;4B0C688DBE67D1AC9572445DCDB552F9\u0026#34;,\u0026#34;interfaceId\u0026#34;:\u0026#34;Ethernet2\u0026#34;},\u0026#34;remove\u0026#34;:false},\u0026#34;time\u0026#34;:\u0026#34;2021-09-03T21:50:06.315113790Z\u0026#34;,\u0026#34;type\u0026#34;:\u0026#34;INITIAL\u0026#34;}} Leaf-spine topology tagging example 1. Create Workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;AVD-lab\u0026#34;},\u0026#34;display_name\u0026#34;:\u0026#34;AVD-lab\u0026#34;,\u0026#34;description\u0026#34;:\u0026#34;Set up topology tags\u0026#34;}\u0026#39; 2. Create tags\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;avd-pod1\u0026#34;}}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;avd-dc1\u0026#34;}}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;avd-leafs1\u0026#34;}}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;avd-leafs2\u0026#34;}}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;element_type\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;:\u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;avd-spines\u0026#34;}}\u0026#39; 3. Assign tags\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-dc1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;BAD032986065E8DC14CBB6472EC314A6\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-dc1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;0123F2E4462997EB155B7C50EC148767\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-dc1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;8520AF39790A4EC959550166DC5DEADE\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-dc1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;6323DA7D2B542B5D09630F87351BEA41\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-dc1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;CD0EADBEEA126915EA78E0FB4DC776CA\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_datacenter\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-dc1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;2568DB4A33177968A78C4FD5A8232159\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;BAD032986065E8DC14CBB6472EC314A6\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;0123F2E4462997EB155B7C50EC148767\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;8520AF39790A4EC959550166DC5DEADE\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;6323DA7D2B542B5D09630F87351BEA41\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;CD0EADBEEA126915EA78E0FB4DC776CA\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_pod\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-pod1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;2568DB4A33177968A78C4FD5A8232159\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-leafs1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;BAD032986065E8DC14CBB6472EC314A6\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-leafs1\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;0123F2E4462997EB155B7C50EC148767\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-leafs2\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;8520AF39790A4EC959550166DC5DEADE\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-leafs2\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;6323DA7D2B542B5D09630F87351BEA41\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-spines\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;CD0EADBEEA126915EA78E0FB4DC776CA\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_rack\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;avd-spines\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;2568DB4A33177968A78C4FD5A8232159\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_type\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;leaf\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;BAD032986065E8DC14CBB6472EC314A6\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_type\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;leaf\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;0123F2E4462997EB155B7C50EC148767\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_type\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;leaf\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;8520AF39790A4EC959550166DC5DEADE\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_type\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;leaf\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;6323DA7D2B542B5D09630F87351BEA41\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_type\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;spine\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;CD0EADBEEA126915EA78E0FB4DC776CA\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; curl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/tag/v2/TagAssignmentConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;: {\u0026#34;workspaceId\u0026#34;: \u0026#34;AVD-lab\u0026#34;, \u0026#34;elementType\u0026#34;: \u0026#34;ELEMENT_TYPE_DEVICE\u0026#34;, \u0026#34;label\u0026#34;: \u0026#34;topology_hint_type\u0026#34;, \u0026#34;value\u0026#34;: \u0026#34;spine\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;2568DB4A33177968A78C4FD5A8232159\u0026#34;},\u0026#34;remove\u0026#34;: false}\u0026#39; 4. Start Build\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;AVD-lab\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_START_BUILD\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;b1\u0026#34;}}\u0026#39; 5. Submit workspace\ncurl -sS -kX POST --header \u0026#39;Accept: application/json\u0026#39; -b access_token=`cat token.tok` \u0026#39;https://10.83.12.174/api/resources/workspace/v1/WorkspaceConfig\u0026#39; -d \u0026#39;{\u0026#34;key\u0026#34;:{\u0026#34;workspace_id\u0026#34;:\u0026#34;AVD-lab\u0026#34;},\u0026#34;request\u0026#34;:\u0026#34;REQUEST_SUBMIT\u0026#34;,\u0026#34;request_params\u0026#34;:{\u0026#34;request_id\u0026#34;:\u0026#34;s1\u0026#34;}}\u0026#39; Result:\n"},{"uri":"https://aristanetworks.github.io/cloudvision-apis/","title":"","tags":[],"description":"","content":"CloudVision APIs Cloudvision APIs are state based, resource-oriented APIs modeled in Protobuf and accessed over gRPC using a standardized set of RPC verbs.\nCloudVision is a powerful platform that processes and stores tremendous amounts of network data. It knows the topology of the network, device configuration, interface activity and other network events. These APIs allow access to fleet-wide data access and control, forming a management-plane with consistent usage.\nData Driven Functionality is defined in a data-oriented (rather than action-oriented) form. Designing the APIs to use state-synchronization confers some desirable traits:\nFor more information on modelling, see the Modeling page.\n Uniform APIs Adding a new API simply means creating a new model. Once a model is made, a set of consistent API verbs can then be generated for it. These verbs are named and behave the same across all models. For clients this makes it near trivial to adapt usage of one API to another.\nErgonomic Asynchronous APIs Synchronous APIs, while simple, have some classic problems. Take for example a DoReboot operation. This operation has numerous failure modes:\n Request Timeouts: perhaps the operation took longer than the client expected Network Interruption: similar to (1), but it\u0026rsquo;s entirely possible for a connection to break Device Bootlooping: perhaps rebooting is constantly failing. You must wait for a timeout to see that error. Service Interruption: perhaps the reboot service (or host machine) has unrelated issues during the request  In each of these cases, the client is now responsible of determining which failure mode occurred and how to proceed.\nIn a state-sharing paradigm a reboot request might be performed by setting a reboot request attribute to the current time. The service can return from this request almost immediately (only durably writing the request). Then the client can subscribe to a last-reboot attribute and knows the device has been rebooted successfully when that attribute’s timestamp exceeds that of the reboot request. State sharing allows the various components involved in an action not to need to care about each other; they just need to synchronize state when they come up, and then they’ll do the right thing.\nPortable By modelling in protobuf and exposing gRPC RPCs, this data and management is accessible from nearly any environment in nearly any language.\nFor Arista-supported clients, see the Existing Clients page. Alternatively, a basic guide on creating your own.\n In addition to pure-gRPC clients, HTTP REST mappings are easily generated through the great gRPC ecosystem. Thus, APIs can be utilized from nearly anywhere.\ngRPC Ecosystem Another benefit of using protobuf and gRPC is the vast ecosystem surrounding them. While portable client-generation is useful a well-supported ecosystem provides even more tooling.\nThis list is not extensive, nor an endorsement of any project. Many more tools can be found on the awesome-grpc page.\n  GUIs  BloomRPC Milkman   CLI Tools  GRPCurl evans   Talks and Tutorials  gRPC Overview: Talk at Slack by Varun Talwar gRPC: Google\u0026rsquo;s high-performance, open-source RPC framework by Sameer Ajmani gRPC: The Story of Microservices at Square \u0026hellip; and many more!    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/changecontrol.v1/","title":"changecontrol.v1","tags":[],"description":"","content":"  arista/changecontrol.v1/changecontrol.proto\n  Action\n  ApproveConfig\n  Change\n  ChangeConfig\n  ChangeControl\n  ChangeControlConfig\n  ChangeControlKey\n  Flag\n  FlagConfig\n  RepeatedRepeatedString\n  Stage\n  StageConfig\n  StageConfigMap\n  StageConfigMap.ValuesEntry\n  StageMap\n  StageMap.ValuesEntry\n  TimestampFlag\n  TimestampFlagConfig\n  ChangeControlStatus\n  StageStatus\n    arista/changecontrol.v1/services.gen.proto\n  ApproveConfigDeleteRequest\n  ApproveConfigDeleteResponse\n  ApproveConfigRequest\n  ApproveConfigResponse\n  ApproveConfigSetRequest\n  ApproveConfigSetResponse\n  ApproveConfigStreamRequest\n  ApproveConfigStreamResponse\n  ChangeControlConfigDeleteRequest\n  ChangeControlConfigDeleteResponse\n  ChangeControlConfigRequest\n  ChangeControlConfigResponse\n  ChangeControlConfigSetRequest\n  ChangeControlConfigSetResponse\n  ChangeControlConfigStreamRequest\n  ChangeControlConfigStreamResponse\n  ChangeControlRequest\n  ChangeControlResponse\n  ChangeControlStreamRequest\n  ChangeControlStreamResponse\n  ApproveConfigService\n  ChangeControlConfigService\n  ChangeControlService\n    \nTop\narista/changecontrol.v1/changecontrol.proto \nAction Action is an action to perform during the execution of a stage of a change control. Available actions can be fetched using the \u0026ldquo;action\u0026rdquo; services.\n   Field Name Type Description     name google.protobuf.StringValue name is the name of an action.\n   timeout google.protobuf.UInt32Value timeout (optional) is the maximum duration\nin seconds that the action can execute before\ntiming out. If this is not set, then this is\ninterpreted to mean there is no timeout.\n   args fmp.MapStringString args are the arguments of the action.\n    \nApproveConfig ApproveConfig is used to configure the approval of a change control.\n   Field Name Type Description     key ChangeControlKey key uniquely identifies a change control.\n   approve FlagConfig approve is the flag to approve (approve.value set to true) or\nunapprove (approve.value set to false) the change control.\n   version google.protobuf.Timestamp version (optional) is the timestamp of the change of the\nchange control. This field must be set when approve.value\nis set to true.\n    \nChange Change holds the configuration and status of the change of a change control.\n   Field Name Type Description     name google.protobuf.StringValue name is the name of the change.\n   root_stage_id google.protobuf.StringValue root_stage_id is the ID of the root stage or the stage that\nshould execute first.\n   stages StageMap stages holds a configuration of stages and their statuses.\n   notes google.protobuf.StringValue notes are any notes associated with the change.\n   time google.protobuf.Timestamp time is the time at which the change was last updated.\n   user google.protobuf.StringValue user is the user by which the change was last updated.\n    \nChangeConfig ChangeConfig holds a configuration for the change of a change control which is essentially a named configuration of stages.\n   Field Name Type Description     name google.protobuf.StringValue name is the name of the change.\n   root_stage_id google.protobuf.StringValue root_stage_id is the ID of the root stage or the stage that\nshould execute first.\n   stages StageConfigMap stages holds a configuration of stages. See StageConfigMap\ndescription for more information.\n   notes google.protobuf.StringValue notes (optional) are any notes associated with the change.\n    \nChangeControl ChangeControl holds the configuration and status of a change control.\n   Field Name Type Description     key ChangeControlKey key uniquely identifies a change control.\n   change Change change holds the configuration and status of the change of\nthe change control.\n   approve Flag approve indicates whether the change control was flagged\nas approved (approve.value set to true) or unapproved\n(approve.value set to false).\n   start Flag start indicates whether the change control was flagged to\nstart (start.value set to true) or stop (start.value set\nto false) execution.\n   status ChangeControlStatus status is the execution status of the change control.\n   error google.protobuf.StringValue error is any error that occurred during the execution of the\nchange control.\n   schedule TimestampFlag schedule indicates whether the change control was flagged\nto be scheduled (schedule.value set to some timestamp) or\nunscheduled (schedule.value set to nil) for execution.\n    \nChangeControlConfig ChangeControlConfig holds the configuration of a change control.\n   Field Name Type Description     key ChangeControlKey key uniquely identifies the change control.\n   change ChangeConfig change is the change subject to execution.\n   start FlagConfig start (optional) is the flag to start (start.value set to\ntrue) or stop (start.value set to false) execution of the\nchange control.\n   schedule TimestampFlagConfig schedule (optional) is the flag to schedule (schedule.value\nset to some timestamp) or unschedule (schedule.value set to\nnil) the change control for execution.\n    \nChangeControlKey ChangeControlKey uniquely identifies a change control.\n   Field Name Type Description     id google.protobuf.StringValue id is the ID of a change control.\n    \nFlag Flag holds the configuration of a boolean flag plus some information about when and by whom it was set.\n   Field Name Type Description     value google.protobuf.BoolValue value is the value of the flag (true or false).\n   notes google.protobuf.StringValue notes are any notes associated with the setting of the flag.\n   time google.protobuf.Timestamp time is the time at which the flag was last updated.\n   user google.protobuf.StringValue user is the user by which the flag was last updated.\n    \nFlagConfig FlagConfig is used to set a flag on a change control that takes a boolean value (e.g. start/stop, approve/unapprove).\n   Field Name Type Description     value google.protobuf.BoolValue value is the value of the flag (true or false).\n   notes google.protobuf.StringValue notes (optional) are any notes associated with the flag value.\n    \nRepeatedRepeatedString RepeatedRepeatedString wraps a repeated fmp.RepeatedString to define a string matrix which is used to represent stage rows (see StageConfig).\n   Field Name Type Description     values fmp.RepeatedString[\u0026hellip;] values is the underlying string matrix.\n    \nStage Stage holds the configuration and status of a stage.\n   Field Name Type Description     name google.protobuf.StringValue name is the name of the stage.\n   action Action action is the action to perform during the stage.\n   rows RepeatedRepeatedString rows is a series of rows of parallel stages referenced\nby ID. See StageConfig.rows for more details.\n   status StageStatus status is the execution status of the stage.\n   error google.protobuf.StringValue error is any error that occured during the execution\nof the stage.\n    \nStageConfig StageConfig holds a configuration for a stage in a change control. Each stage generally defines either an action or a series of sub-stages.\n   Field Name Type Description     name google.protobuf.StringValue name is the name of the stage.\n   action Action action (optional) is the action to perform on stage\nexecution.\n   rows RepeatedRepeatedString rows (optional) is a series of rows of parallel stages\nreferenced by ID. Each row is run one after the other\nand the stages within each row are run in parallel.\nFor example:\n[[\u0026ldquo;stage-1a\u0026rdquo;, \u0026ldquo;stage-1b\u0026rdquo;], [\u0026ldquo;stage-2\u0026rdquo;]]\nThis configures stage-1a and stage-1b to run at the\nsame time, and then stage-2 once both of them have\ncompleted.\n    \nStageConfigMap StageConfigMap wraps a map from stage ID to StageConfig. This defines the configuration and order of execution for the stages in a change control.\nFor example:\n{ \u0026ldquo;root\u0026rdquo;: { name: \u0026ldquo;root\u0026rdquo;, rows: [[\u0026ldquo;1-2\u0026rdquo;], [\u0026ldquo;3\u0026rdquo;]] }, \u0026ldquo;1-2\u0026rdquo;: { name: \u0026ldquo;stages 1-2\u0026rdquo;, rows: [[\u0026ldquo;1a\u0026rdquo;, \u0026ldquo;1b\u0026rdquo;], [\u0026ldquo;2\u0026rdquo;]] }, \u0026ldquo;1a\u0026rdquo;: { name: \u0026ldquo;stage 1a\u0026rdquo;, action: { name: \u0026ldquo;task\u0026rdquo;, args: { \u0026ldquo;TaskID\u0026rdquo;: \u0026ldquo;101\u0026rdquo; } }, \u0026ldquo;1b\u0026rdquo;: { name: \u0026ldquo;stage 1b\u0026rdquo;, action: { name: \u0026ldquo;task\u0026rdquo;, args: { \u0026ldquo;TaskID\u0026rdquo;: \u0026ldquo;102\u0026rdquo; } }, \u0026ldquo;2\u0026rdquo;: { name: \u0026ldquo;stage 2\u0026rdquo;, action: { name: \u0026ldquo;task\u0026rdquo;, args: { \u0026ldquo;TaskID\u0026rdquo;: \u0026ldquo;103\u0026rdquo; } }, \u0026ldquo;3\u0026rdquo;: { name: \u0026ldquo;stage 3\u0026rdquo;, action: { name: \u0026ldquo;task\u0026rdquo;, args: { \u0026ldquo;TaskID\u0026rdquo;: \u0026ldquo;104\u0026rdquo; } } }\nAssuming the root stage ID of the enclosing change control is \u0026ldquo;root\u0026rdquo;, this would mean to do the following in sequence:\nroot |- stages 1-2 | |- stage 1a, stage 1b (parallel) | |- stage 2 |- stage 3\nThat is, execute tasks 101 and 102 in parallel, then task 103, then task 104.\n   Field Name Type Description     values StageConfigMap.ValuesEntry[\u0026hellip;] values is the underlying map from stage ID to StageConfig.\n    \nStageConfigMap.ValuesEntry    Field Name Type Description     key string \n   value StageConfig \n    \nStageMap StageMap is a map from stage ID to stage. This has essentially the same structure as StageMapConfig, but with each ID mapping to a Stage instead of StageConfig.\n   Field Name Type Description     values StageMap.ValuesEntry[\u0026hellip;] values is the underlying map from stage ID to Stage.\n    \nStageMap.ValuesEntry    Field Name Type Description     key string \n   value Stage \n    \nTimestampFlag TimestampFlag holds the configuration of a timestamp flag plus some information about when and by whom is was set.\n   Field Name Type Description     value google.protobuf.Timestamp value is the value of the flag (some timestamp).\n   notes google.protobuf.StringValue notes are any notes associated with the setting of the flag.\n   time google.protobuf.Timestamp time is the time at which the flag was last updated.\n   user google.protobuf.StringValue user is the user by which the flag was last updated.\n    \nTimestampFlagConfig TimestampFlagConfig is used to set a flag on a change control that takes a timestamp value (e.g. schedule/unschedule).\n   Field Name Type Description     value google.protobuf.Timestamp value is the value of the flag (some timestamp).\n   notes google.protobuf.StringValue notes (optional) are the notes associated with the flag value.\n    \nChangeControlStatus ChangeControlStatus defines the possible execution statuses of a change control.\n   Name Number Description     CHANGE_CONTROL_STATUS_UNSPECIFIED 0 \n   CHANGE_CONTROL_STATUS_RUNNING 1 CHANGE_CONTROL_STATUS_RUNNING means the change control has begun\nexecution.\n   CHANGE_CONTROL_STATUS_COMPLETED 2 CHANGE_CONTROL_STATUS_COMPLETED means the change control has ceased\nexecution. Success/failure of a change control cannot be inferred\nfrom this status alone but rather this status plus the change control\nerror. That is, no error implies success and some error implies failure.\n   CHANGE_CONTROL_STATUS_SCHEDULED 3 CHANGE_CONTROL_STATUS_SCHEDULED means the change control has been\nscheduled for execution at some time. Any failure that occurs during\nthis process will cause a transition back to the unspecified status,\na reset of the schedule flag by the system, and an error on the change\ncontrol reporting the details of the failure.\n    \nStageStatus StageStatus defines the possible execution statuses of a stage.\n   Name Number Description     STAGE_STATUS_UNSPECIFIED 0 \n   STAGE_STATUS_RUNNING 1 STAGE_STATUS_RUNNING means the stage has begun execution.\n   STAGE_STATUS_COMPLETED 2 STAGE_STATUS_COMPLETED means the stage has ceased execution.\nSuccess/failure of a stage cannot be inferred from this status\nalone but rather this status plus the stage error. That is, no\nerror implies success and some error implies failure.\n    \nTop\narista/changecontrol.v1/services.gen.proto \nApproveConfigDeleteRequest    Field Name Type Description     key ChangeControlKey Key indicates which ApproveConfig instance to remove.\nThis field must always be set.\n    \nApproveConfigDeleteResponse    Field Name Type Description     key ChangeControlKey Key echoes back the key of the deleted ApproveConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nApproveConfigRequest    Field Name Type Description     key ChangeControlKey Key uniquely identifies a ApproveConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nApproveConfigResponse    Field Name Type Description     value ApproveConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nApproveConfig instance in this response.\n    \nApproveConfigSetRequest    Field Name Type Description     value ApproveConfig ApproveConfig carries the value to set into the datastore.\nSee the documentation on the ApproveConfig struct for which fields are required.\n    \nApproveConfigSetResponse    Field Name Type Description     value ApproveConfig Value carries all the values given in the ApproveConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nApproveConfigStreamRequest    Field Name Type Description     partial_eq_filter ApproveConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nApproveConfigStreamResponse    Field Name Type Description     value ApproveConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this ApproveConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the ApproveConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nChangeControlConfigDeleteRequest    Field Name Type Description     key ChangeControlKey Key indicates which ChangeControlConfig instance to remove.\nThis field must always be set.\n    \nChangeControlConfigDeleteResponse    Field Name Type Description     key ChangeControlKey Key echoes back the key of the deleted ChangeControlConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nChangeControlConfigRequest    Field Name Type Description     key ChangeControlKey Key uniquely identifies a ChangeControlConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nChangeControlConfigResponse    Field Name Type Description     value ChangeControlConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nChangeControlConfig instance in this response.\n    \nChangeControlConfigSetRequest    Field Name Type Description     value ChangeControlConfig ChangeControlConfig carries the value to set into the datastore.\nSee the documentation on the ChangeControlConfig struct for which fields are required.\n    \nChangeControlConfigSetResponse    Field Name Type Description     value ChangeControlConfig Value carries all the values given in the ChangeControlConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nChangeControlConfigStreamRequest    Field Name Type Description     partial_eq_filter ChangeControlConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nChangeControlConfigStreamResponse    Field Name Type Description     value ChangeControlConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this ChangeControlConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the ChangeControlConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nChangeControlRequest    Field Name Type Description     key ChangeControlKey Key uniquely identifies a ChangeControl instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nChangeControlResponse    Field Name Type Description     value ChangeControl Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nChangeControl instance in this response.\n    \nChangeControlStreamRequest    Field Name Type Description     partial_eq_filter ChangeControl[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nChangeControlStreamResponse    Field Name Type Description     value ChangeControl Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this ChangeControl\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the ChangeControl value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nApproveConfigService    Method Name Request Type Response Type Description     GetOne ApproveConfigRequest ApproveConfigResponse \n   GetAll ApproveConfigStreamRequest ApproveConfigStreamResponse stream \n   Subscribe ApproveConfigStreamRequest ApproveConfigStreamResponse stream \n   Set ApproveConfigSetRequest ApproveConfigSetResponse \n   Delete ApproveConfigDeleteRequest ApproveConfigDeleteResponse \n    \nChangeControlConfigService    Method Name Request Type Response Type Description     GetOne ChangeControlConfigRequest ChangeControlConfigResponse \n   GetAll ChangeControlConfigStreamRequest ChangeControlConfigStreamResponse stream \n   Subscribe ChangeControlConfigStreamRequest ChangeControlConfigStreamResponse stream \n   Set ChangeControlConfigSetRequest ChangeControlConfigSetResponse \n   Delete ChangeControlConfigDeleteRequest ChangeControlConfigDeleteResponse \n    \nChangeControlService    Method Name Request Type Response Type Description     GetOne ChangeControlRequest ChangeControlResponse \n   GetAll ChangeControlStreamRequest ChangeControlStreamResponse stream \n   Subscribe ChangeControlStreamRequest ChangeControlStreamResponse stream \n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/configstatus.v1/","title":"configstatus.v1","tags":[],"description":"","content":"  arista/configstatus.v1/configstatus.proto\n  ConfigDiff\n  ConfigDiffKey\n  ConfigError\n  ConfigErrors\n  ConfigKey\n  ConfigSummary\n  Configuration\n  DiffEntries\n  DiffEntry\n  Summary\n  SummaryKey\n  ConfigFilterCode\n  ConfigSyncCode\n  ConfigType\n  DiffOp\n  ErrorCode\n    arista/configstatus.v1/services.gen.proto\n  ConfigDiffRequest\n  ConfigDiffResponse\n  ConfigDiffStreamRequest\n  ConfigDiffStreamResponse\n  ConfigurationRequest\n  ConfigurationResponse\n  ConfigurationStreamRequest\n  ConfigurationStreamResponse\n  SummaryRequest\n  SummaryResponse\n  SummaryStreamRequest\n  SummaryStreamResponse\n  ConfigDiffService\n  ConfigurationService\n  SummaryService\n    \nTop\narista/configstatus.v1/configstatus.proto \nConfigDiff    Field Name Type Description     key ConfigDiffKey Key represents config diff key\n   uri google.protobuf.StringValue Uri represents the HTTP URI client can use to GET config diff and associated errors\n   error ConfigError \n    \nConfigDiffKey ConfigDiffKey uniquely identifies a configuration diff request\n   Field Name Type Description     a_device_id google.protobuf.StringValue A_device_id is the serial number of the device on A side (left hand side)\n   a_type ConfigType A_type is the config type on A side (left hand side)\n   a_time google.protobuf.Timestamp A_time is the time at which to fetch config on A side (left hand side)\n   b_device_id google.protobuf.StringValue B_device_id is the serial number of the device on B side (right hand side)\n   b_type ConfigType B_type is the config type on B side (right hand side)\n   b_time google.protobuf.Timestamp B_time is the time at which to fetch config on B side (right hand side)\n    \nConfigError ConfigError represents errors reported by CVP when handling device configuration\n   Field Name Type Description     error_code ErrorCode \n   error_msg google.protobuf.StringValue \n   line_num google.protobuf.Int32Value Line_num represents line number, if any\n   configlet_name google.protobuf.StringValue Configlet_name represents the originating configlet name. Configlet_name\nand line_num point to the line where config warning or config error originate.\n    \nConfigErrors    Field Name Type Description     values ConfigError[\u0026hellip;] \n    \nConfigKey ConfigKey uniquely identifies a config request.\n   Field Name Type Description     device_id google.protobuf.StringValue Device_id is the serial number of the device\n   type ConfigType Type describes the config type\n    \nConfigSummary ConfigSummary represents device configuration summary.\n   Field Name Type Description     sync ConfigSyncCode \n   nop_lines google.protobuf.Int32Value Number of lines with code no-operation\n   ignored_lines google.protobuf.Int32Value Number of lines with code IGNORE\n   added_lines google.protobuf.Int32Value Number of lines with code ADD\n   deleted_lines google.protobuf.Int32Value Number of lines with code DELETE\n   changed_lines google.protobuf.Int32Value Number of lines with code CHANGE\n   designed_config_errors google.protobuf.Int32Value Number of designed config errors\n   designed_config_warnings google.protobuf.Int32Value Number of designed config warnings\n   running_config_update_time google.protobuf.Timestamp Timestamp at which running config is updated\n   designed_config_update_time google.protobuf.Timestamp Timestamp at which designed config is updated\n   running_config_uri google.protobuf.StringValue The HTTP URI client can use to GET running config and associated errors\n   designed_config_uri google.protobuf.StringValue The HTTP URI client can use to GET designed config and associated errors\n   diff_uri google.protobuf.StringValue The HTTP URI client can use to GET config diff and associated errors\n   digest google.protobuf.StringValue Digest of the config diff. For example, it can be SHA-256 hash of the config diff\n    \nConfiguration Configuration represents device\u0026rsquo;s CLI configuration\n   Field Name Type Description     key ConfigKey \n   uri google.protobuf.StringValue Uri represents the HTTP URI client can use to GET config body and associated errors\n   error ConfigError \n    \nDiffEntries DiffEntries indicates potential multiple lines of config diff\n   Field Name Type Description     values DiffEntry[\u0026hellip;] \n    \nDiffEntry DiffEntry represents one entry in a Diff\n   Field Name Type Description     op DiffOp \n   a_line_num google.protobuf.Int32Value line number in A this diff applies to\n   b_line_num google.protobuf.Int32Value line number in B this diff applies to\n   b_parent_line_num google.protobuf.Int32Value line number in B of the leading command of the containing block\n   a_line google.protobuf.StringValue content of config line in A\n   b_line google.protobuf.StringValue content of config line in B\n   a_filter_code ConfigFilterCode Config filter code of the line in A\n   b_filter_code ConfigFilterCode Config filter code of the line in B\n    \nSummary    Field Name Type Description     key SummaryKey \n   summary ConfigSummary \n   error ConfigError \n    \nSummaryKey SummaryKey uniquely identifies a device summary request\n   Field Name Type Description     device_id google.protobuf.StringValue Device_id is the serial number of the device\n    \nConfigFilterCode ConfigFilterCode indicates if a config line matches PCM filter(s)\n   Name Number Description     CONFIG_FILTER_CODE_UNSPECIFIED 0 UNSPECIFIED indicates config line did not match any partial config management (PCM) filter\n   CONFIG_FILTER_CODE_MANAGED_LINE 1 MANAGED_LINE indicates config line matches managed PCM filter hence is managed\n   CONFIG_FILTER_CODE_UNMANAGED_LINE 2 UNMANAGED_LINE indicates config line matches unmanaged PCM filter hence is not managed\n    \nConfigSyncCode ConfigSyncCode indicates config synchronization status\n   Name Number Description     CONFIG_SYNC_CODE_UNSPECIFIED 0 \n   CONFIG_SYNC_CODE_IN_SYNC 1 IN_SYNC indicates designed config and running config are identical\n   CONFIG_SYNC_CODE_OUT_OF_SYNC 2 OUT_OF_SYNC indicates designed config and running config are not identical\n    \nConfigType    Name Number Description     CONFIG_TYPE_UNSPECIFIED 0 \n   CONFIG_TYPE_RUNNING_CONFIG 1 \n   CONFIG_TYPE_DESIGNED_CONFIG 2 \n    \nDiffOp DiffOp is the operation to a line from one side of diff to get to another\n   Name Number Description     DIFF_OP_UNSPECIFIED 0 \n   DIFF_OP_NOP 1 NOP indicates no change. A and B are identical at this line\n   DIFF_OP_IGNORE 2 IGNORE indicates a line that\u0026rsquo;s ignored in either A or B.\nOne of a_line_num or b_line_num will be -1\n   DIFF_OP_ADD 3 ADD is an addition of a line from A\n   DIFF_OP_DELETE 4 DELETE is deletion of a line from B\n   DIFF_OP_CHANGE 5 CHANGE is a modification to a line in A\n    \nErrorCode ErrorCode indicates warnings and errors produced during computing config\n   Name Number Description     ERROR_CODE_UNSPECIFIED 0 \n   ERROR_CODE_DEVICE_WARNING 1 DEVICE_WARNING indicates device warning\n   ERROR_CODE_DEVICE_ERROR 2 DEVICE_ERROR indicates device error\n   ERROR_CODE_UNREACHABLE_DEVICE 3 UNREACHABLE_DEVICE indicates the device cannot be reached\n   ERROR_CODE_CONFIG_FILTER_ERROR 4 CONFIG_FILTER_ERROR indicates error from partial config management filters\n   ERROR_CODE_INTERNAL 5 INTERNAL indicates internal errors\n    \nTop\narista/configstatus.v1/services.gen.proto \nConfigDiffRequest    Field Name Type Description     key ConfigDiffKey Key uniquely identifies a ConfigDiff instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nConfigDiffResponse    Field Name Type Description     value ConfigDiff Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nConfigDiff instance in this response.\n    \nConfigDiffStreamRequest    Field Name Type Description     partial_eq_filter ConfigDiff[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nConfigDiffStreamResponse    Field Name Type Description     value ConfigDiff Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this ConfigDiff\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the ConfigDiff value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nConfigurationRequest    Field Name Type Description     key ConfigKey Key uniquely identifies a Configuration instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nConfigurationResponse    Field Name Type Description     value Configuration Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nConfiguration instance in this response.\n    \nConfigurationStreamRequest    Field Name Type Description     partial_eq_filter Configuration[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nConfigurationStreamResponse    Field Name Type Description     value Configuration Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Configuration\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Configuration value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nSummaryRequest    Field Name Type Description     key SummaryKey Key uniquely identifies a Summary instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nSummaryResponse    Field Name Type Description     value Summary Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nSummary instance in this response.\n    \nSummaryStreamRequest    Field Name Type Description     partial_eq_filter Summary[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nSummaryStreamResponse    Field Name Type Description     value Summary Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Summary\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Summary value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nConfigDiffService    Method Name Request Type Response Type Description     GetOne ConfigDiffRequest ConfigDiffResponse \n   GetAll ConfigDiffStreamRequest ConfigDiffStreamResponse stream \n   Subscribe ConfigDiffStreamRequest ConfigDiffStreamResponse stream \n    \nConfigurationService    Method Name Request Type Response Type Description     GetOne ConfigurationRequest ConfigurationResponse \n   GetAll ConfigurationStreamRequest ConfigurationStreamResponse stream \n   Subscribe ConfigurationStreamRequest ConfigurationStreamResponse stream \n    \nSummaryService    Method Name Request Type Response Type Description     GetOne SummaryRequest SummaryResponse \n   GetAll SummaryStreamRequest SummaryStreamResponse stream \n   Subscribe SummaryStreamRequest SummaryStreamResponse stream \n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/endpointlocation.v1/","title":"endpointlocation.v1","tags":[],"description":"","content":"  arista/endpointlocation.v1/endpointlocation.proto\n  Device\n  DeviceInfo\n  DeviceMap\n  DeviceMap.ValuesEntry\n  EndpointLocation\n  EndpointLocationKey\n  ExplanationList\n  Identifier\n  IdentifierList\n  IdentifierSourceList\n  Location\n  LocationList\n  DeviceStatus\n  DeviceType\n  Explanation\n  IdentifierSource\n  IdentifierType\n  Likelihood\n  MacType\n    arista/endpointlocation.v1/services.gen.proto\n  EndpointLocationRequest\n  EndpointLocationResponse\n  EndpointLocationStreamRequest\n  EndpointLocationStreamResponse\n  EndpointLocationService\n    \nTop\narista/endpointlocation.v1/endpointlocation.proto \nDevice    Field Name Type Description     identifier_list IdentifierList \n   device_type DeviceType \n   location_list LocationList The list of possible locations, in order from most likely to least likely\n   device_status DeviceStatus \n   device_info DeviceInfo \n    \nDeviceInfo    Field Name Type Description     device_name google.protobuf.StringValue \n   mobile google.protobuf.BoolValue \n   tablet google.protobuf.BoolValue \n   score google.protobuf.UInt32Value \n   version google.protobuf.StringValue \n   mac_vendor google.protobuf.StringValue \n   classification google.protobuf.StringValue \n   hierarchy fmp.RepeatedString \n    \nDeviceMap    Field Name Type Description     values DeviceMap.ValuesEntry[\u0026hellip;] \n    \nDeviceMap.ValuesEntry    Field Name Type Description     key string \n   value Device \n    \nEndpointLocation    Field Name Type Description     key EndpointLocationKey \n   device_map DeviceMap \n    \nEndpointLocationKey    Field Name Type Description     search_term google.protobuf.StringValue \n    \nExplanationList    Field Name Type Description     values Explanation[\u0026hellip;] \n    \nIdentifier    Field Name Type Description     type IdentifierType \n   value google.protobuf.StringValue \n   source_list IdentifierSourceList \n    \nIdentifierList    Field Name Type Description     values Identifier[\u0026hellip;] \n    \nIdentifierSourceList    Field Name Type Description     values IdentifierSource[\u0026hellip;] \n    \nLocation    Field Name Type Description     device_id google.protobuf.StringValue \n   device_status DeviceStatus \n   interface google.protobuf.StringValue \n   vlan_id google.protobuf.UInt32Value \n   learned_time google.protobuf.Timestamp \n   mac_type MacType \n   likelihood Likelihood \n   explanation_list ExplanationList \n   identifier_list IdentifierList \n    \nLocationList    Field Name Type Description     values Location[\u0026hellip;] \n    \nDeviceStatus    Name Number Description     DEVICE_STATUS_UNSPECIFIED 0 \n   DEVICE_STATUS_ACTIVE 1 \n   DEVICE_STATUS_INACTIVE 2 \n    \nDeviceType    Name Number Description     DEVICE_TYPE_UNSPECIFIED 0 \n   DEVICE_TYPE_INVENTORY 1 \n   DEVICE_TYPE_ENDPOINT 2 \n   DEVICE_TYPE_WIFI_ENDPOINT 3 \n    \nExplanation    Name Number Description     EXPLANATION_UNSPECIFIED 0 Explanation for ports that have unspecified likelihood\n   EXPLANATION_DIRECT_CONNECTION 1 Explanation for ports directly connected to the queried endpoint device in LLDP\n   EXPLANATION_NON_INVENTORY_CONNECTION 2 Explanation for ports directly connected to at least one non-inventory device in LLDP\n   EXPLANATION_NO_CONNECTION 3 Explanation for ports not directly connected to any device in LLDP\n   EXPLANATION_INVENTORY_CONNECTION 4 Explanation for ports only connected to inventory devices in LLDP\n   EXPLANATION_OWN_PORT_INVENTORY_DEVICE 5 Explanation for ports that are on the inventory device itself\n   EXPLANATION_DIRECT_CONNECTION_INVENTORY_DEVICE 6 Explanation for ports directly connected to the queried device in LLDP (for inventory devices)\n   EXPLANATION_NO_CONNECTION_INVENTORY_DEVICE 7 Explanation for ports not directly connected to any device in LLDP (for inventory devices)\n   EXPLANATION_OTHER_CONNECTION_INVENTORY_DEVICE 8 Explanation for ports connected to only other devices besides queried inventory device\n   EXPLANATION_VIRTUAL 9 Explanation for ports containing a virtual interface\n   EXPLANATION_WIRELESS_CONNECTION 10 Explanation for wireless clients that are directly connected to a wireless access point\n    \nIdentifierSource    Name Number Description     IDENTIFIER_SOURCE_UNSPECIFIED 0 \n   IDENTIFIER_SOURCE_FDB 1 \n   IDENTIFIER_SOURCE_ARP 2 \n   IDENTIFIER_SOURCE_NEIGHBOR 3 \n   IDENTIFIER_SOURCE_DEVICE_INVENTORY 4 Onboarded or inventory devices\n   IDENTIFIER_SOURCE_LLDP 5 \n   IDENTIFIER_SOURCE_DHCP 6 \n   IDENTIFIER_SOURCE_WIFI 7 \n    \nIdentifierType    Name Number Description     IDENTIFIER_TYPE_UNSPECIFIED 0 \n   IDENTIFIER_TYPE_MAC_ADDR 1 \n   IDENTIFIER_TYPE_IPV4_ADDR 2 \n   IDENTIFIER_TYPE_IPV6_ADDR 3 \n   IDENTIFIER_TYPE_INVENTORY_DEVICE_ID 4 \n   IDENTIFIER_TYPE_PRIMARY_MANAGEMENT_IP 5 \n   IDENTIFIER_TYPE_HOSTNAME 6 \n   IDENTIFIER_TYPE_USERNAME 7 \n   IDENTIFIER_TYPE_OTHER 99999 May be used for some unknown LLDP chassis id type\n    \nLikelihood    Name Number Description     LIKELIHOOD_UNSPECIFIED 0 These ports have unspecified likelihood\n   LIKELIHOOD_VERY_LIKELY 1 These ports are very likely to be physically connected to the queried device\n   LIKELIHOOD_LIKELY 2 These ports are likely to be physically connected to the queried device\n   LIKELIHOOD_SOMEWHAT_LIKELY 3 These ports are somewhat likely to be physically connected to the queried device\n   LIKELIHOOD_LESS_LIKELY 4 These ports are less likely to be physically connected to the queried device\n    \nMacType    Name Number Description     MAC_TYPE_UNSPECIFIED 0 \n   MAC_TYPE_LEARNED_DYNAMIC 1 \n   MAC_TYPE_LEARNED_SECURE 2 \n   MAC_TYPE_CONFIGURED_DYNAMIC 3 \n   MAC_TYPE_CONFIGURED_SECURE 4 \n   MAC_TYPE_CONFIGURED_STATIC 5 \n   MAC_TYPE_PEER_DYNAMIC 6 \n   MAC_TYPE_PEER_STATIC 7 \n   MAC_TYPE_PEER_SECURE 8 \n   MAC_TYPE_LEARNED_REMOTE 9 \n   MAC_TYPE_CONFIGURED_REMOTE 10 \n   MAC_TYPE_RECEIVED_REMOTE 11 \n   MAC_TYPE_PEER_LEARNED_REMOTE 12 \n   MAC_TYPE_PEER_CONFIGURED_REMOTE 13 \n   MAC_TYPE_PEER_RECEIVED_REMOTE 14 \n   MAC_TYPE_EVPN_DYNAMIC_REMOTE 15 \n   MAC_TYPE_EVPN_CONFIGURED_REMOTE 16 \n   MAC_TYPE_PEER_EVPN_REMOTE 17 \n   MAC_TYPE_CONFIGURED_ROUTER 18 \n   MAC_TYPE_PEER_ROUTER 19 \n   MAC_TYPE_EVPN_INTF_DYNAMIC 20 \n   MAC_TYPE_EVPN_INTF_STATIC 21 \n   MAC_TYPE_AUTHENTICATED 22 \n   MAC_TYPE_PEER_AUTHENTICATED 23 \n   MAC_TYPE_PENDING_SECURE 24 \n   MAC_TYPE_OTHER 99999 This is used for capturing future MAC types\n    \nTop\narista/endpointlocation.v1/services.gen.proto \nEndpointLocationRequest    Field Name Type Description     key EndpointLocationKey Key uniquely identifies a EndpointLocation instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nEndpointLocationResponse    Field Name Type Description     value EndpointLocation Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nEndpointLocation instance in this response.\n    \nEndpointLocationStreamRequest    Field Name Type Description     partial_eq_filter EndpointLocation[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nEndpointLocationStreamResponse    Field Name Type Description     value EndpointLocation Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this EndpointLocation\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the EndpointLocation value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nEndpointLocationService    Method Name Request Type Response Type Description     GetOne EndpointLocationRequest EndpointLocationResponse \n   GetAll EndpointLocationStreamRequest EndpointLocationStreamResponse stream \n   Subscribe EndpointLocationStreamRequest EndpointLocationStreamResponse stream \n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/event.v1/","title":"event.v1","tags":[],"description":"","content":"  arista/event.v1/event.proto\n  Event\n  EventAck\n  EventAnnotationConfig\n  EventComponent\n  EventComponent.ComponentsEntry\n  EventComponents\n  EventData\n  EventData.DataEntry\n  EventKey\n  EventNote\n  EventNoteConfig\n  EventNotes\n  EventNotes.NotesEntry\n  EventNotesConfig\n  EventNotesConfig.NotesEntry\n  ComponentType\n  EventSeverity\n    arista/event.v1/services.gen.proto\n  EventAnnotationConfigDeleteRequest\n  EventAnnotationConfigDeleteResponse\n  EventAnnotationConfigRequest\n  EventAnnotationConfigResponse\n  EventAnnotationConfigSetRequest\n  EventAnnotationConfigSetResponse\n  EventAnnotationConfigStreamRequest\n  EventAnnotationConfigStreamResponse\n  EventRequest\n  EventResponse\n  EventStreamRequest\n  EventStreamResponse\n  EventAnnotationConfigService\n  EventService\n    \nTop\narista/event.v1/event.proto \nEvent Event is a telemetry event\n   Field Name Type Description     key EventKey key is the event instance identifier\n   severity EventSeverity severity is the severity of the event\n   title google.protobuf.StringValue title is the title of the event\n   description google.protobuf.StringValue description is the description of the event\n   event_type google.protobuf.StringValue event_type is the type of the event\n   data EventData data is the data of the event\n   components EventComponents components is the components on which the event occurred\n   ack EventAck ack is the acknowledgement status of the event\n   notes EventNotes notes is the notes of the event\n   last_updated_time google.protobuf.Timestamp last_updated_time is the time of the most recent update to the event\n    \nEventAck EventAck contains acknowledgement information of an event\n   Field Name Type Description     ack google.protobuf.BoolValue ack is the acknowledgement state of an event\n   acker google.protobuf.StringValue acker is the user that acknowledged the event\n   ack_time google.protobuf.Timestamp ack_time is the time of acknowledgement\n    \nEventAnnotationConfig EventAnnotationConfig configures an event annotation\n   Field Name Type Description     key EventKey key is the event instance identifier\n   ack google.protobuf.BoolValue ack is the acknowledgement state of an event\n   notes EventNotesConfig notes is the notes on an event\n    \nEventComponent EventComponent describes an entity on which the event occured\n   Field Name Type Description     type ComponentType type is the type of component\n   components EventComponent.ComponentsEntry[\u0026hellip;] components identifies the entity on which the event occured\n    \nEventComponent.ComponentsEntry    Field Name Type Description     key string \n   value string \n    \nEventComponents EventComponents contains entities on which an event occured\n   Field Name Type Description     components EventComponent[\u0026hellip;] components describes the components on which an event occured\n    \nEventData EventData is additional event data\n   Field Name Type Description     data EventData.DataEntry[\u0026hellip;] data is event data specific to the type of this event\n    \nEventData.DataEntry    Field Name Type Description     key string \n   value string \n    \nEventKey EventKey uniquely identifies an event\n   Field Name Type Description     key google.protobuf.StringValue key is the event data identifier\n   timestamp google.protobuf.Timestamp timestamp is the time the event occured\n    \nEventNote Eventnote is the state of a note\n   Field Name Type Description     note google.protobuf.StringValue note is the text of the note\n   note_creator google.protobuf.StringValue note_creator is the creator of the note\n    \nEventNoteConfig EventNoteConfig configures a note\n   Field Name Type Description     note google.protobuf.StringValue note is the text of the note\n    \nEventNotes EventNotes is the notes of an event state\n   Field Name Type Description     notes EventNotes.NotesEntry[\u0026hellip;] notes is keyed by the time desired\n    \nEventNotes.NotesEntry    Field Name Type Description     key int64 \n   value EventNote \n    \nEventNotesConfig EventNotesConfig configures the notes of an event\n   Field Name Type Description     notes EventNotesConfig.NotesEntry[\u0026hellip;] notes is keyed by desired note time in Unix time, in milliseconds\n    \nEventNotesConfig.NotesEntry    Field Name Type Description     key int64 \n   value EventNoteConfig \n    \nComponentType ComponentType describes the type of entity on which the event occured\n   Name Number Description     COMPONENT_TYPE_UNSPECIFIED 0 \n   COMPONENT_TYPE_DEVICE 1 \n   COMPONENT_TYPE_INTERFACE 2 \n   COMPONENT_TYPE_TURBINE 3 \n    \nEventSeverity EventSeverity is the severity level of the event\n   Name Number Description     EVENT_SEVERITY_UNSPECIFIED 0 \n   EVENT_SEVERITY_INFO 1 \n   EVENT_SEVERITY_WARNING 2 \n   EVENT_SEVERITY_ERROR 3 \n   EVENT_SEVERITY_CRITICAL 4 \n    \nTop\narista/event.v1/services.gen.proto \nEventAnnotationConfigDeleteRequest    Field Name Type Description     key EventKey Key indicates which EventAnnotationConfig instance to remove.\nThis field (and all keys, unless otherwise specified) must always be set.\n    \nEventAnnotationConfigDeleteResponse    Field Name Type Description     key EventKey Key echoes back the key of the deleted EventAnnotationConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nEventAnnotationConfigRequest    Field Name Type Description     key EventKey Key uniquely identifies a EventAnnotationConfig instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nEventAnnotationConfigResponse    Field Name Type Description     value EventAnnotationConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nEventAnnotationConfig instance in this response.\n    \nEventAnnotationConfigSetRequest    Field Name Type Description     value EventAnnotationConfig EventAnnotationConfig carries the value to set into the datastore.\nSee the documentation on the EventAnnotationConfig struct for which fields are required.\n    \nEventAnnotationConfigSetResponse    Field Name Type Description     value EventAnnotationConfig Value carries all the values given in the EventAnnotationConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nEventAnnotationConfigStreamRequest    Field Name Type Description     partial_eq_filter EventAnnotationConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nEventAnnotationConfigStreamResponse    Field Name Type Description     value EventAnnotationConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this EventAnnotationConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the EventAnnotationConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nEventRequest    Field Name Type Description     key EventKey Key uniquely identifies a Event instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nEventResponse    Field Name Type Description     value Event Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nEvent instance in this response.\n    \nEventStreamRequest    Field Name Type Description     partial_eq_filter Event[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nEventStreamResponse    Field Name Type Description     value Event Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Event\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Event value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nEventAnnotationConfigService    Method Name Request Type Response Type Description     GetOne EventAnnotationConfigRequest EventAnnotationConfigResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll EventAnnotationConfigStreamRequest EventAnnotationConfigStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe EventAnnotationConfigStreamRequest EventAnnotationConfigStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n   Set EventAnnotationConfigSetRequest EventAnnotationConfigSetResponse Set allows setting values for the entity specified by the key in the request.\nThe key must be provided and all fields set (unless otherwise specified).\n   Delete EventAnnotationConfigDeleteRequest EventAnnotationConfigDeleteResponse Delete will remove the entity specified by the key within the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n    \nEventService    Method Name Request Type Response Type Description     GetOne EventRequest EventResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll EventStreamRequest EventStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe EventStreamRequest EventStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/inventory.v1/","title":"inventory.v1","tags":[],"description":"","content":"  arista/inventory.v1/inventory.proto\n  Device\n  DeviceKey\n  ExtendedAttributes\n  ExtendedAttributes.FeatureEnabledEntry\n  StreamingStatus\n    arista/inventory.v1/services.gen.proto\n  DeviceRequest\n  DeviceResponse\n  DeviceStreamRequest\n  DeviceStreamResponse\n  DeviceService\n    \nTop\narista/inventory.v1/inventory.proto \nDevice Device is the primary model for this service.\n   Field Name Type Description     key DeviceKey The key that uniquely identifies this device.\n   software_version google.protobuf.StringValue SoftwareVersion gives the currently running device software version.\n   model_name google.protobuf.StringValue ModelName describes the hardware model of this device.\n   hardware_revision google.protobuf.StringValue HardwareREvision describes any revisional data to the model name.\n   fqdn google.protobuf.StringValue FQDN gives the fully qualified hostname to reach the device.\n   hostname google.protobuf.StringValue Hostname is the hostname as reported on the device.\n   domain_name google.protobuf.StringValue DomainName provides the domain name the device is registered on.\n   system_mac_address google.protobuf.StringValue SystemMacAddress provides the MAC address of the management port.\n   boot_time google.protobuf.Timestamp BootTime indicates when the device was last booted.\n   streaming_status StreamingStatus StreamingStatus the status of streaming telemetry for this device.\n   extended_attributes ExtendedAttributes ExtendedAttributes wraps any additional, potentially non-standard, features\nor attributes the device reports.\n    \nDeviceKey DeviceKey uniquely identifies a single device.\n   Field Name Type Description     device_id google.protobuf.StringValue \n    \nExtendedAttributes ExtendedAttributes wraps any additional, potentially non-standard, features or attributes the device reports.\n   Field Name Type Description     feature_enabled ExtendedAttributes.FeatureEnabledEntry[\u0026hellip;] FeatureEnabled is a map of feature name to enabled status.\nIf a feature is missing from this map it can be assumed off.\n    \nExtendedAttributes.FeatureEnabledEntry    Field Name Type Description     key string \n   value bool \n    \nStreamingStatus StreamingStatus the status of streaming telemetry for this device.\n   Name Number Description     STREAMING_STATUS_UNSPECIFIED 0 Unspecified is the uninitialized state of this enum.\n   STREAMING_STATUS_INACTIVE 1 Inactive indicates the device is not streaming telemetry.\n   STREAMING_STATUS_ACTIVE 2 Active indicates the device is streaming telemetry.\n    \nTop\narista/inventory.v1/services.gen.proto \nDeviceRequest    Field Name Type Description     key DeviceKey Key uniquely identifies a Device instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nDeviceResponse    Field Name Type Description     value Device Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nDevice instance in this response.\n    \nDeviceStreamRequest    Field Name Type Description     partial_eq_filter Device[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nDeviceStreamResponse    Field Name Type Description     value Device Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Device\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Device value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nDeviceService    Method Name Request Type Response Type Description     GetOne DeviceRequest DeviceResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll DeviceStreamRequest DeviceStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe DeviceStreamRequest DeviceStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/studio.v1/","title":"studio.v1","tags":[],"description":"","content":"  arista/studio.v1/studio.proto\n  AssignedTags\n  AssignedTagsConfig\n  BooleanInputFieldProps\n  CollectionInputFieldProps\n  FloatInputFieldProps\n  GroupInputFieldProps\n  InputField\n  InputFields\n  InputFields.ValuesEntry\n  InputSchema\n  Inputs\n  InputsConfig\n  InputsKey\n  IntegerInputFieldProps\n  Layout\n  ResolverInputFieldProps\n  StringInputFieldProps\n  Studio\n  StudioConfig\n  StudioKey\n  Template\n  InputFieldType\n  ResolverFieldDisplayMode\n  ResolverFieldInputMode\n  TemplateType\n    arista/studio.v1/services.gen.proto\n  AssignedTagsConfigDeleteRequest\n  AssignedTagsConfigDeleteResponse\n  AssignedTagsConfigRequest\n  AssignedTagsConfigResponse\n  AssignedTagsConfigSetRequest\n  AssignedTagsConfigSetResponse\n  AssignedTagsConfigStreamRequest\n  AssignedTagsConfigStreamResponse\n  AssignedTagsRequest\n  AssignedTagsResponse\n  AssignedTagsStreamRequest\n  AssignedTagsStreamResponse\n  InputsConfigDeleteRequest\n  InputsConfigDeleteResponse\n  InputsConfigRequest\n  InputsConfigResponse\n  InputsConfigSetRequest\n  InputsConfigSetResponse\n  InputsConfigStreamRequest\n  InputsConfigStreamResponse\n  InputsRequest\n  InputsResponse\n  InputsStreamRequest\n  InputsStreamResponse\n  StudioConfigDeleteRequest\n  StudioConfigDeleteResponse\n  StudioConfigRequest\n  StudioConfigResponse\n  StudioConfigSetRequest\n  StudioConfigSetResponse\n  StudioConfigStreamRequest\n  StudioConfigStreamResponse\n  StudioRequest\n  StudioResponse\n  StudioStreamRequest\n  StudioStreamResponse\n  AssignedTagsConfigService\n  AssignedTagsService\n  InputsConfigService\n  InputsService\n  StudioConfigService\n  StudioService\n    \nTop\narista/studio.v1/studio.proto \nAssignedTags AssignedTags is the state of studio assignment\n   Field Name Type Description     key StudioKey \n   created_at google.protobuf.Timestamp \n   created_by google.protobuf.StringValue \n   last_modified_at google.protobuf.Timestamp \n   last_modified_by google.protobuf.StringValue \n   query google.protobuf.StringValue \n    \nAssignedTagsConfig AssignedTagsConfig is the configuration to assign a studio to the set of devices matching a tag query\n   Field Name Type Description     key StudioKey \n   remove google.protobuf.BoolValue remove specifies that the resource identified by the key is to be removed from mainline\nOther data fields are not allowed when this field is set to true\n   query google.protobuf.StringValue \n    \nBooleanInputFieldProps    Field Name Type Description     default_value google.protobuf.BoolValue default_value represents the default value of the boolean input field (optional)\noptional\n    \nCollectionInputFieldProps    Field Name Type Description     base_field_id google.protobuf.StringValue base_field_id represent the ID of the collection input field\u0026rsquo;s base field\nrequired\n   key google.protobuf.StringValue key specifies a key in the collection that identifies each element\nIt only supports the group base field type INPUT_FIELD_TYPE_GROUP. The key field specified the ID of the\ngroup member and each element of the collection can be uniquely identified by the key.\nIf the type of the base field is:\n- INPUT_FIELD_TYPE_GROUP: the value of specified by the key field will used as the collection element\u0026rsquo;s key.\nThe key field specifies the ID of the group member, the group member type must be one of the following field types:\nINPUT_FIELD_TYPE_INTEGER, INPUT_FIELD_TYPE_FLOAT, INPUT_FIELD_TYPE_STRING.\noptional\n    \nFloatInputFieldProps    Field Name Type Description     default_value google.protobuf.FloatValue default_value represents the default value of the float input field (optional)\noptional\n   static_options fmp.RepeatedFloat static_options represents the list of valid float values (optional)\noptional\n   dynamic_options fmp.RepeatedString dynamic_options contains a pointer expression that reference an input field with a collection of\nfloat input values which will be used as a list of valid values (optional)\noptional\n    \nGroupInputFieldProps    Field Name Type Description     members fmp.RepeatedString members represents all the fields in the group input field\nrequired\n    \nInputField    Field Name Type Description     id google.protobuf.StringValue id represents the ID of the input field, which should be unique within the input schema resource\nrequired\n   type InputFieldType type represents the type of the input field\nrequired\n   name google.protobuf.StringValue type represents the variable name use to reference the value of the input field\nrequired\n   label google.protobuf.StringValue label represents the label of the input field\nrequired\n   description google.protobuf.StringValue description represents the description of the input field (optional)\noptional\n   required google.protobuf.BoolValue required indicates whether the input field requires a value, defaults to false if unset (optional)\noptional\n   boolean_props BooleanInputFieldProps boolean_props contains properties for input fields of INPUT_FIELD_TYPE_BOOLEAN type (optional)\noptional\n   integer_props IntegerInputFieldProps integer_props contains properties for input fields of INPUT_FIELD_TYPE_INTEGER type (optional)\noptional\n   float_props FloatInputFieldProps float_props contains properties for input fields of INPUT_FIELD_TYPE_FLOAT type (optional)\noptional\n   string_props StringInputFieldProps string_props contains properties for input fields of INPUT_FIELD_TYPE_STRING type (optional)\noptional\n   group_props GroupInputFieldProps group_props contains properties for input fields of INPUT_FIELD_TYPE_GROUP type (optional)\noptional\n   collection_props CollectionInputFieldProps collection_props contains properties for input fields of INPUT_FIELD_TYPE_COLLECTION type (optional)\noptional\n   resolver_props ResolverInputFieldProps resolver_props contains properties for input fields of INPUT_FIELD_TYPE_RESOLVER type (optional)\noptional\n   auto_fill_action_id google.protobuf.StringValue auto_fill_action_id represents the link between the field and the autofill script that provides a value for it (optional)\noptional\n    \nInputFields    Field Name Type Description     values InputFields.ValuesEntry[\u0026hellip;] values contains all input field configuration, mapped by each input field\u0026rsquo;s respective field ID\nrequired\n    \nInputFields.ValuesEntry    Field Name Type Description     key string \n   value InputField \n    \nInputSchema InputSchema specifies the input schema definition of a studio, consisting of a set of input fields, and optionally their layout information\n   Field Name Type Description     fields InputFields \n   layout Layout \n    \nInputs Inputs is the state of inputs to a studio\n   Field Name Type Description     key InputsKey \n   created_at google.protobuf.Timestamp \n   created_by google.protobuf.StringValue \n   last_modified_at google.protobuf.Timestamp \n   last_modified_by google.protobuf.StringValue \n   inputs google.protobuf.StringValue inputs is the entire set of inputs, a single JSON string starting with root.\nThis is the result of applying workspace-specific InputsConfig changes on top of mainline.\n    \nInputsConfig InputsConfig provides values to the input fields of a studio\n   Field Name Type Description     key InputsKey \n   remove google.protobuf.BoolValue remove specifies that the resource identified by the key is to be removed from mainline\nOther data fields are not allowed when this field is set to true\n   inputs google.protobuf.StringValue inputs is the value of the input field as a JSON string. It can be the value for a\nsimple or complex input field\n    \nInputsKey Inputskey is the key of the InputsConfig and Inputs resources\n   Field Name Type Description     studio_id google.protobuf.StringValue studio_id is the unique identifier of the studio\n   workspace_id google.protobuf.StringValue workspace_id is the unique identifier of the workspace\nempty string (\u0026quot;\u0026quot;) stands for the \u0026ldquo;mainline\u0026rdquo;\n   path fmp.RepeatedString path is the sequence of elements that uniquely identify an input field\nempty sequence stands for the \u0026ldquo;root\u0026rdquo;, or the entire set of inputs\n    \nIntegerInputFieldProps    Field Name Type Description     default_value google.protobuf.Int64Value default_value represents the default value of the integer input field (optional)\noptional\n   static_options fmp.RepeatedInt64 static_options represents the list of valid integer values (optional)\noptional\n   dynamic_options fmp.RepeatedString dynamic_options contains a pointer expression that reference an input field with a collection of\ninteger input values which will be used as a list of valid values (optional)\noptional\n   range google.protobuf.StringValue range represents the range constraint imposed on the integer value; eg. \u0026ldquo;-10..10\u0026rdquo;, \u0026ldquo;min..10\u0026rdquo;, \u0026ldquo;-10..max\u0026rdquo; (optional)\noptional\n    \nLayout Layout specifies the display properties input fields\n   Field Name Type Description     value google.protobuf.StringValue json string\n    \nResolverInputFieldProps    Field Name Type Description     base_field_id google.protobuf.StringValue base_field_id represent the ID of the resolver input field\u0026rsquo;s base field\nrequired\n   display_mode ResolverFieldDisplayMode display_mode represents the resolver input field\u0026rsquo;s display mode\nrequired\n   input_mode ResolverFieldInputMode input_mode represents the resolver input field\u0026rsquo;s input mode\nrequired\n   input_tag_label google.protobuf.StringValue input_tag_label represents the tag label to allow in tag inputs (optional)\noptional\n   tag_filter_query google.protobuf.StringValue tag_filter_query specifies the tags that can be used in a resolver\noptional\n    \nStringInputFieldProps    Field Name Type Description     default_value google.protobuf.StringValue default_value represents the default value of the string input field (optional)\noptional\n   static_options fmp.RepeatedString static_options represents the list of valid string values (optional)\noptional\n   dynamic_options fmp.RepeatedString dynamic_options contains a pointer expression that reference an input field with a collection of\nstring input values which will be used as a list of valid values (optional)\noptional\n   length google.protobuf.StringValue length represents the length constraint imposed on the string value; eg. \u0026ldquo;5..10\u0026rdquo;, \u0026ldquo;min..10\u0026rdquo;, \u0026ldquo;5..max\u0026rdquo; (optional)\noptional\n   pattern google.protobuf.StringValue pattern represents the regexp-based pattern constraint imposed on the string value; eg. \u0026ldquo;^[0-9a-fA-F]*$\u0026rdquo; (optional)\noptional\n   format google.protobuf.StringValue format represents the format imposed on string value; supported formats: \u0026ldquo;ip\u0026rdquo;, \u0026ldquo;ipv6\u0026rdquo;, \u0026ldquo;mac\u0026rdquo; (optional)\noptional\n    \nStudio Studio state\n   Field Name Type Description     key StudioKey \n   created_at google.protobuf.Timestamp \n   created_by google.protobuf.StringValue \n   last_modified_at google.protobuf.Timestamp \n   last_modified_by google.protobuf.StringValue \n   display_name google.protobuf.StringValue Below are config fields, with workspace changes applied on top of mainline\nNote that this resource will be present in a workspace only if the studio is modified\n(via the StudioConfig resource)\n   description google.protobuf.StringValue \n   template Template \n   input_schema InputSchema \n   input_validation_results arista.workspace.v1.InputValidationResults \n    \nStudioConfig Studio configuration\n   Field Name Type Description     key StudioKey \n   remove google.protobuf.BoolValue remove specifies that the resource identified by the key is to be removed from mainline\nOther data fields are not allowed when this field is set to true\n   display_name google.protobuf.StringValue Changes to the below data fields in a workspace are applied on top of\nmainline content at the time the workspace was created\n   description google.protobuf.StringValue \n   template Template \n   input_schema InputSchema \n    \nStudioKey Studio key\n   Field Name Type Description     studio_id google.protobuf.StringValue studio_id is the unique identifier of the studio\n   workspace_id google.protobuf.StringValue workspace_id is the unique identifier of the workspace\nempty string (\u0026quot;\u0026quot;) stands for the \u0026ldquo;mainline\u0026rdquo;\n    \nTemplate Template of the studio, with its type\n   Field Name Type Description     type TemplateType \n   body google.protobuf.StringValue \n    \nInputFieldType    Name Number Description     INPUT_FIELD_TYPE_UNSPECIFIED 0 \n   INPUT_FIELD_TYPE_BOOLEAN 1 \n   INPUT_FIELD_TYPE_INTEGER 2 \n   INPUT_FIELD_TYPE_FLOAT 3 \n   INPUT_FIELD_TYPE_STRING 4 \n   INPUT_FIELD_TYPE_GROUP 5 \n   INPUT_FIELD_TYPE_COLLECTION 6 \n   INPUT_FIELD_TYPE_RESOLVER 7 \n    \nResolverFieldDisplayMode    Name Number Description     RESOLVER_FIELD_DISPLAY_MODE_UNSPECIFIED 0 \n   RESOLVER_FIELD_DISPLAY_MODE_ALL 1 \n   RESOLVER_FIELD_DISPLAY_MODE_SPARSE 2 \n    \nResolverFieldInputMode    Name Number Description     RESOLVER_FIELD_INPUT_MODE_UNSPECIFIED 0 \n   RESOLVER_FIELD_INPUT_MODE_SINGLE_DEVICE_TAG 1 \n   RESOLVER_FIELD_INPUT_MODE_SINGLE_INTERFACE_TAG 2 \n   RESOLVER_FIELD_INPUT_MODE_MULTI_DEVICE_TAG 3 \n   RESOLVER_FIELD_INPUT_MODE_MULTI_INTERFACE_TAG 4 \n    \nTemplateType    Name Number Description     TEMPLATE_TYPE_UNSPECIFIED 0 \n   TEMPLATE_TYPE_MAKO 1 \n   TEMPLATE_TYPE_JINJA 2 \n   TEMPLATE_TYPE_GO 3 \n    \nTop\narista/studio.v1/services.gen.proto \nAssignedTagsConfigDeleteRequest    Field Name Type Description     key StudioKey Key indicates which AssignedTagsConfig instance to remove.\nThis field must always be set.\n    \nAssignedTagsConfigDeleteResponse    Field Name Type Description     key StudioKey Key echoes back the key of the deleted AssignedTagsConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nAssignedTagsConfigRequest    Field Name Type Description     key StudioKey Key uniquely identifies a AssignedTagsConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nAssignedTagsConfigResponse    Field Name Type Description     value AssignedTagsConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nAssignedTagsConfig instance in this response.\n    \nAssignedTagsConfigSetRequest    Field Name Type Description     value AssignedTagsConfig AssignedTagsConfig carries the value to set into the datastore.\nSee the documentation on the AssignedTagsConfig struct for which fields are required.\n    \nAssignedTagsConfigSetResponse    Field Name Type Description     value AssignedTagsConfig Value carries all the values given in the AssignedTagsConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nAssignedTagsConfigStreamRequest    Field Name Type Description     partial_eq_filter AssignedTagsConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nAssignedTagsConfigStreamResponse    Field Name Type Description     value AssignedTagsConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this AssignedTagsConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the AssignedTagsConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nAssignedTagsRequest    Field Name Type Description     key StudioKey Key uniquely identifies a AssignedTags instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nAssignedTagsResponse    Field Name Type Description     value AssignedTags Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nAssignedTags instance in this response.\n    \nAssignedTagsStreamRequest    Field Name Type Description     partial_eq_filter AssignedTags[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nAssignedTagsStreamResponse    Field Name Type Description     value AssignedTags Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this AssignedTags\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the AssignedTags value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nInputsConfigDeleteRequest    Field Name Type Description     key InputsKey Key indicates which InputsConfig instance to remove.\nThis field must always be set.\n    \nInputsConfigDeleteResponse    Field Name Type Description     key InputsKey Key echoes back the key of the deleted InputsConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nInputsConfigRequest    Field Name Type Description     key InputsKey Key uniquely identifies a InputsConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nInputsConfigResponse    Field Name Type Description     value InputsConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nInputsConfig instance in this response.\n    \nInputsConfigSetRequest    Field Name Type Description     value InputsConfig InputsConfig carries the value to set into the datastore.\nSee the documentation on the InputsConfig struct for which fields are required.\n    \nInputsConfigSetResponse    Field Name Type Description     value InputsConfig Value carries all the values given in the InputsConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nInputsConfigStreamRequest    Field Name Type Description     partial_eq_filter InputsConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nInputsConfigStreamResponse    Field Name Type Description     value InputsConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this InputsConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the InputsConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nInputsRequest    Field Name Type Description     key InputsKey Key uniquely identifies a Inputs instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nInputsResponse    Field Name Type Description     value Inputs Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nInputs instance in this response.\n    \nInputsStreamRequest    Field Name Type Description     partial_eq_filter Inputs[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nInputsStreamResponse    Field Name Type Description     value Inputs Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Inputs\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Inputs value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nStudioConfigDeleteRequest    Field Name Type Description     key StudioKey Key indicates which StudioConfig instance to remove.\nThis field must always be set.\n    \nStudioConfigDeleteResponse    Field Name Type Description     key StudioKey Key echoes back the key of the deleted StudioConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nStudioConfigRequest    Field Name Type Description     key StudioKey Key uniquely identifies a StudioConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nStudioConfigResponse    Field Name Type Description     value StudioConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nStudioConfig instance in this response.\n    \nStudioConfigSetRequest    Field Name Type Description     value StudioConfig StudioConfig carries the value to set into the datastore.\nSee the documentation on the StudioConfig struct for which fields are required.\n    \nStudioConfigSetResponse    Field Name Type Description     value StudioConfig Value carries all the values given in the StudioConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nStudioConfigStreamRequest    Field Name Type Description     partial_eq_filter StudioConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nStudioConfigStreamResponse    Field Name Type Description     value StudioConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this StudioConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the StudioConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nStudioRequest    Field Name Type Description     key StudioKey Key uniquely identifies a Studio instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nStudioResponse    Field Name Type Description     value Studio Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nStudio instance in this response.\n    \nStudioStreamRequest    Field Name Type Description     partial_eq_filter Studio[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nStudioStreamResponse    Field Name Type Description     value Studio Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Studio\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Studio value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nAssignedTagsConfigService    Method Name Request Type Response Type Description     GetOne AssignedTagsConfigRequest AssignedTagsConfigResponse \n   GetAll AssignedTagsConfigStreamRequest AssignedTagsConfigStreamResponse stream \n   Subscribe AssignedTagsConfigStreamRequest AssignedTagsConfigStreamResponse stream \n   Set AssignedTagsConfigSetRequest AssignedTagsConfigSetResponse \n   Delete AssignedTagsConfigDeleteRequest AssignedTagsConfigDeleteResponse \n    \nAssignedTagsService    Method Name Request Type Response Type Description     GetOne AssignedTagsRequest AssignedTagsResponse \n   GetAll AssignedTagsStreamRequest AssignedTagsStreamResponse stream \n   Subscribe AssignedTagsStreamRequest AssignedTagsStreamResponse stream \n    \nInputsConfigService    Method Name Request Type Response Type Description     GetOne InputsConfigRequest InputsConfigResponse \n   GetAll InputsConfigStreamRequest InputsConfigStreamResponse stream \n   Subscribe InputsConfigStreamRequest InputsConfigStreamResponse stream \n   Set InputsConfigSetRequest InputsConfigSetResponse \n   Delete InputsConfigDeleteRequest InputsConfigDeleteResponse \n    \nInputsService    Method Name Request Type Response Type Description     GetOne InputsRequest InputsResponse \n   GetAll InputsStreamRequest InputsStreamResponse stream \n   Subscribe InputsStreamRequest InputsStreamResponse stream \n    \nStudioConfigService    Method Name Request Type Response Type Description     GetOne StudioConfigRequest StudioConfigResponse \n   GetAll StudioConfigStreamRequest StudioConfigStreamResponse stream \n   Subscribe StudioConfigStreamRequest StudioConfigStreamResponse stream \n   Set StudioConfigSetRequest StudioConfigSetResponse \n   Delete StudioConfigDeleteRequest StudioConfigDeleteResponse \n    \nStudioService    Method Name Request Type Response Type Description     GetOne StudioRequest StudioResponse \n   GetAll StudioStreamRequest StudioStreamResponse stream \n   Subscribe StudioStreamRequest StudioStreamResponse stream \n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/tag.v1/","title":"tag.v1","tags":[],"description":"","content":"  arista/tag.v1/tag.proto\n  DeviceTag\n  DeviceTagAssignmentConfig\n  DeviceTagAssignmentKey\n  DeviceTagConfig\n  InterfaceTag\n  InterfaceTagAssignmentConfig\n  InterfaceTagAssignmentKey\n  InterfaceTagConfig\n  TagKey\n  CreatorType\n    arista/tag.v1/services.gen.proto\n  DeviceTagAssignmentConfigDeleteRequest\n  DeviceTagAssignmentConfigDeleteResponse\n  DeviceTagAssignmentConfigRequest\n  DeviceTagAssignmentConfigResponse\n  DeviceTagAssignmentConfigSetRequest\n  DeviceTagAssignmentConfigSetResponse\n  DeviceTagAssignmentConfigStreamRequest\n  DeviceTagAssignmentConfigStreamResponse\n  DeviceTagConfigDeleteRequest\n  DeviceTagConfigDeleteResponse\n  DeviceTagConfigRequest\n  DeviceTagConfigResponse\n  DeviceTagConfigSetRequest\n  DeviceTagConfigSetResponse\n  DeviceTagConfigStreamRequest\n  DeviceTagConfigStreamResponse\n  DeviceTagRequest\n  DeviceTagResponse\n  DeviceTagStreamRequest\n  DeviceTagStreamResponse\n  InterfaceTagAssignmentConfigDeleteRequest\n  InterfaceTagAssignmentConfigDeleteResponse\n  InterfaceTagAssignmentConfigRequest\n  InterfaceTagAssignmentConfigResponse\n  InterfaceTagAssignmentConfigSetRequest\n  InterfaceTagAssignmentConfigSetResponse\n  InterfaceTagAssignmentConfigStreamRequest\n  InterfaceTagAssignmentConfigStreamResponse\n  InterfaceTagConfigDeleteRequest\n  InterfaceTagConfigDeleteResponse\n  InterfaceTagConfigRequest\n  InterfaceTagConfigResponse\n  InterfaceTagConfigSetRequest\n  InterfaceTagConfigSetResponse\n  InterfaceTagConfigStreamRequest\n  InterfaceTagConfigStreamResponse\n  InterfaceTagRequest\n  InterfaceTagResponse\n  InterfaceTagStreamRequest\n  InterfaceTagStreamResponse\n  DeviceTagAssignmentConfigService\n  DeviceTagConfigService\n  DeviceTagService\n  InterfaceTagAssignmentConfigService\n  InterfaceTagConfigService\n  InterfaceTagService\n    \nTop\narista/tag.v1/tag.proto \nDeviceTag DeviceTag is a label-value pair that may or may not be assigned to a device.\n   Field Name Type Description     key TagKey Key uniquely identifies the device tag.\n   creator_type CreatorType CreatorType is the creator type of the tag.\n    \nDeviceTagAssignmentConfig DeviceTagAssignmentConfig is the assignment of a device tag to a specific device.\n   Field Name Type Description     key DeviceTagAssignmentKey Key uniquely identifies the device tag assignment.\n    \nDeviceTagAssignmentKey DeviceTagAssignmentKey uniquely identifies a device tag assignment.\n   Field Name Type Description     label google.protobuf.StringValue Label is the label of the tag.\n   value google.protobuf.StringValue Value is the value of the tag.\n   device_id google.protobuf.StringValue DeviceId is the ID of the device.\n    \nDeviceTagConfig DeviceTagConfig is a label-value pair that may or may not be assigned to a device.\n   Field Name Type Description     key TagKey Key uniquely identifies the device tag.\n    \nInterfaceTag InterfaceTag is a label-value pair that may or may not be assigned to an interface.\n   Field Name Type Description     key TagKey Key uniquely identifies the interface tag.\n   creator_type CreatorType CreatorType is the creator type of the tag.\n    \nInterfaceTagAssignmentConfig InterfaceTagAssignmentConfig is the assignment of an interface tag to a specific interface.\n   Field Name Type Description     key InterfaceTagAssignmentKey Key uniquely identifies the interface tag assignment.\n    \nInterfaceTagAssignmentKey InterfaceTagAssignmentKey uniquely identifies an interface tag assignment.\n   Field Name Type Description     label google.protobuf.StringValue Label is the label of the tag.\n   value google.protobuf.StringValue Value is the value of the tag.\n   device_id google.protobuf.StringValue DeviceId is the ID of the interface\u0026rsquo;s device.\n   interface_id google.protobuf.StringValue InterfaceId is the ID of the interface.\n    \nInterfaceTagConfig InterfaceTagConfig is a label-value pair that may or may not be assigned to an interface.\n   Field Name Type Description     key TagKey Key uniquely identifies the interface tag.\n    \nTagKey TagKey uniquely identifies a tag for a network element.\n   Field Name Type Description     label google.protobuf.StringValue Label is the label of the tag.\n   value google.protobuf.StringValue Value is the value of the tag.\n    \nCreatorType CreatorType specifies an entity that creates something.\n   Name Number Description     CREATOR_TYPE_UNSPECIFIED 0 \n   CREATOR_TYPE_SYSTEM 1 CREATOR_TYPE_SYSTEM is the type for something created by the system.\n   CREATOR_TYPE_USER 2 CREATOR_TYPE_USER is the type for something created by a user.\n    \nTop\narista/tag.v1/services.gen.proto \nDeviceTagAssignmentConfigDeleteRequest    Field Name Type Description     key DeviceTagAssignmentKey Key indicates which DeviceTagAssignmentConfig instance to remove.\nThis field (and all keys, unless otherwise specified) must always be set.\n    \nDeviceTagAssignmentConfigDeleteResponse    Field Name Type Description     key DeviceTagAssignmentKey Key echoes back the key of the deleted DeviceTagAssignmentConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nDeviceTagAssignmentConfigRequest    Field Name Type Description     key DeviceTagAssignmentKey Key uniquely identifies a DeviceTagAssignmentConfig instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nDeviceTagAssignmentConfigResponse    Field Name Type Description     value DeviceTagAssignmentConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nDeviceTagAssignmentConfig instance in this response.\n    \nDeviceTagAssignmentConfigSetRequest    Field Name Type Description     value DeviceTagAssignmentConfig DeviceTagAssignmentConfig carries the value to set into the datastore.\nSee the documentation on the DeviceTagAssignmentConfig struct for which fields are required.\n    \nDeviceTagAssignmentConfigSetResponse    Field Name Type Description     value DeviceTagAssignmentConfig Value carries all the values given in the DeviceTagAssignmentConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nDeviceTagAssignmentConfigStreamRequest    Field Name Type Description     partial_eq_filter DeviceTagAssignmentConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nDeviceTagAssignmentConfigStreamResponse    Field Name Type Description     value DeviceTagAssignmentConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this DeviceTagAssignmentConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the DeviceTagAssignmentConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nDeviceTagConfigDeleteRequest    Field Name Type Description     key TagKey Key indicates which DeviceTagConfig instance to remove.\nThis field (and all keys, unless otherwise specified) must always be set.\n    \nDeviceTagConfigDeleteResponse    Field Name Type Description     key TagKey Key echoes back the key of the deleted DeviceTagConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nDeviceTagConfigRequest    Field Name Type Description     key TagKey Key uniquely identifies a DeviceTagConfig instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nDeviceTagConfigResponse    Field Name Type Description     value DeviceTagConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nDeviceTagConfig instance in this response.\n    \nDeviceTagConfigSetRequest    Field Name Type Description     value DeviceTagConfig DeviceTagConfig carries the value to set into the datastore.\nSee the documentation on the DeviceTagConfig struct for which fields are required.\n    \nDeviceTagConfigSetResponse    Field Name Type Description     value DeviceTagConfig Value carries all the values given in the DeviceTagConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nDeviceTagConfigStreamRequest    Field Name Type Description     partial_eq_filter DeviceTagConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nDeviceTagConfigStreamResponse    Field Name Type Description     value DeviceTagConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this DeviceTagConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the DeviceTagConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nDeviceTagRequest    Field Name Type Description     key TagKey Key uniquely identifies a DeviceTag instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nDeviceTagResponse    Field Name Type Description     value DeviceTag Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nDeviceTag instance in this response.\n    \nDeviceTagStreamRequest    Field Name Type Description     partial_eq_filter DeviceTag[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nDeviceTagStreamResponse    Field Name Type Description     value DeviceTag Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this DeviceTag\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the DeviceTag value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nInterfaceTagAssignmentConfigDeleteRequest    Field Name Type Description     key InterfaceTagAssignmentKey Key indicates which InterfaceTagAssignmentConfig instance to remove.\nThis field (and all keys, unless otherwise specified) must always be set.\n    \nInterfaceTagAssignmentConfigDeleteResponse    Field Name Type Description     key InterfaceTagAssignmentKey Key echoes back the key of the deleted InterfaceTagAssignmentConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nInterfaceTagAssignmentConfigRequest    Field Name Type Description     key InterfaceTagAssignmentKey Key uniquely identifies a InterfaceTagAssignmentConfig instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nInterfaceTagAssignmentConfigResponse    Field Name Type Description     value InterfaceTagAssignmentConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nInterfaceTagAssignmentConfig instance in this response.\n    \nInterfaceTagAssignmentConfigSetRequest    Field Name Type Description     value InterfaceTagAssignmentConfig InterfaceTagAssignmentConfig carries the value to set into the datastore.\nSee the documentation on the InterfaceTagAssignmentConfig struct for which fields are required.\n    \nInterfaceTagAssignmentConfigSetResponse    Field Name Type Description     value InterfaceTagAssignmentConfig Value carries all the values given in the InterfaceTagAssignmentConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nInterfaceTagAssignmentConfigStreamRequest    Field Name Type Description     partial_eq_filter InterfaceTagAssignmentConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nInterfaceTagAssignmentConfigStreamResponse    Field Name Type Description     value InterfaceTagAssignmentConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this InterfaceTagAssignmentConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the InterfaceTagAssignmentConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nInterfaceTagConfigDeleteRequest    Field Name Type Description     key TagKey Key indicates which InterfaceTagConfig instance to remove.\nThis field (and all keys, unless otherwise specified) must always be set.\n    \nInterfaceTagConfigDeleteResponse    Field Name Type Description     key TagKey Key echoes back the key of the deleted InterfaceTagConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nInterfaceTagConfigRequest    Field Name Type Description     key TagKey Key uniquely identifies a InterfaceTagConfig instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nInterfaceTagConfigResponse    Field Name Type Description     value InterfaceTagConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nInterfaceTagConfig instance in this response.\n    \nInterfaceTagConfigSetRequest    Field Name Type Description     value InterfaceTagConfig InterfaceTagConfig carries the value to set into the datastore.\nSee the documentation on the InterfaceTagConfig struct for which fields are required.\n    \nInterfaceTagConfigSetResponse    Field Name Type Description     value InterfaceTagConfig Value carries all the values given in the InterfaceTagConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nInterfaceTagConfigStreamRequest    Field Name Type Description     partial_eq_filter InterfaceTagConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nInterfaceTagConfigStreamResponse    Field Name Type Description     value InterfaceTagConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this InterfaceTagConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the InterfaceTagConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nInterfaceTagRequest    Field Name Type Description     key TagKey Key uniquely identifies a InterfaceTag instance to retrieve.\nThis value (and all fields, unless otherwise specified) must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at twhich it makes the request.\n    \nInterfaceTagResponse    Field Name Type Description     value InterfaceTag Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nInterfaceTag instance in this response.\n    \nInterfaceTagStreamRequest    Field Name Type Description     partial_eq_filter InterfaceTag[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nInterfaceTagStreamResponse    Field Name Type Description     value InterfaceTag Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this InterfaceTag\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the InterfaceTag value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nDeviceTagAssignmentConfigService    Method Name Request Type Response Type Description     GetOne DeviceTagAssignmentConfigRequest DeviceTagAssignmentConfigResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll DeviceTagAssignmentConfigStreamRequest DeviceTagAssignmentConfigStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe DeviceTagAssignmentConfigStreamRequest DeviceTagAssignmentConfigStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n   Set DeviceTagAssignmentConfigSetRequest DeviceTagAssignmentConfigSetResponse Set allows setting values for the entity specified by the key in the request.\nThe key must be provided and all fields set (unless otherwise specified).\n   Delete DeviceTagAssignmentConfigDeleteRequest DeviceTagAssignmentConfigDeleteResponse Delete will remove the entity specified by the key within the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n    \nDeviceTagConfigService    Method Name Request Type Response Type Description     GetOne DeviceTagConfigRequest DeviceTagConfigResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll DeviceTagConfigStreamRequest DeviceTagConfigStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe DeviceTagConfigStreamRequest DeviceTagConfigStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n   Set DeviceTagConfigSetRequest DeviceTagConfigSetResponse Set allows setting values for the entity specified by the key in the request.\nThe key must be provided and all fields set (unless otherwise specified).\n   Delete DeviceTagConfigDeleteRequest DeviceTagConfigDeleteResponse Delete will remove the entity specified by the key within the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n    \nDeviceTagService    Method Name Request Type Response Type Description     GetOne DeviceTagRequest DeviceTagResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll DeviceTagStreamRequest DeviceTagStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe DeviceTagStreamRequest DeviceTagStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n    \nInterfaceTagAssignmentConfigService    Method Name Request Type Response Type Description     GetOne InterfaceTagAssignmentConfigRequest InterfaceTagAssignmentConfigResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll InterfaceTagAssignmentConfigStreamRequest InterfaceTagAssignmentConfigStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe InterfaceTagAssignmentConfigStreamRequest InterfaceTagAssignmentConfigStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n   Set InterfaceTagAssignmentConfigSetRequest InterfaceTagAssignmentConfigSetResponse Set allows setting values for the entity specified by the key in the request.\nThe key must be provided and all fields set (unless otherwise specified).\n   Delete InterfaceTagAssignmentConfigDeleteRequest InterfaceTagAssignmentConfigDeleteResponse Delete will remove the entity specified by the key within the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n    \nInterfaceTagConfigService    Method Name Request Type Response Type Description     GetOne InterfaceTagConfigRequest InterfaceTagConfigResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll InterfaceTagConfigStreamRequest InterfaceTagConfigStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe InterfaceTagConfigStreamRequest InterfaceTagConfigStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n   Set InterfaceTagConfigSetRequest InterfaceTagConfigSetResponse Set allows setting values for the entity specified by the key in the request.\nThe key must be provided and all fields set (unless otherwise specified).\n   Delete InterfaceTagConfigDeleteRequest InterfaceTagConfigDeleteResponse Delete will remove the entity specified by the key within the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n    \nInterfaceTagService    Method Name Request Type Response Type Description     GetOne InterfaceTagRequest InterfaceTagResponse GetOne returns a unary model as specified by the key in the request.\nThe key must be provided and all fields populated (unless otherwise specified).\n   GetAll InterfaceTagStreamRequest InterfaceTagStreamResponse stream GetAll returns all entities for this model, with optional filtering.\n   Subscribe InterfaceTagStreamRequest InterfaceTagStreamResponse stream Subscribe first returns all initial state known to the system,\nthen will send deltas as entities are changed.\n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/tag.v2/","title":"tag.v2","tags":[],"description":"","content":"  arista/tag.v2/tag.proto\n  Tag\n  TagAssignment\n  TagAssignmentConfig\n  TagAssignmentKey\n  TagConfig\n  TagKey\n  CreatorType\n  ElementType\n    arista/tag.v2/services.gen.proto\n  TagAssignmentConfigDeleteRequest\n  TagAssignmentConfigDeleteResponse\n  TagAssignmentConfigRequest\n  TagAssignmentConfigResponse\n  TagAssignmentConfigSetRequest\n  TagAssignmentConfigSetResponse\n  TagAssignmentConfigStreamRequest\n  TagAssignmentConfigStreamResponse\n  TagAssignmentRequest\n  TagAssignmentResponse\n  TagAssignmentStreamRequest\n  TagAssignmentStreamResponse\n  TagConfigDeleteRequest\n  TagConfigDeleteResponse\n  TagConfigRequest\n  TagConfigResponse\n  TagConfigSetRequest\n  TagConfigSetResponse\n  TagConfigStreamRequest\n  TagConfigStreamResponse\n  TagRequest\n  TagResponse\n  TagStreamRequest\n  TagStreamResponse\n  TagAssignmentConfigService\n  TagAssignmentService\n  TagConfigService\n  TagService\n    \nTop\narista/tag.v2/tag.proto \nTag Tag holds a merge-preview or the existing merged state (if the workspace ID is \u0026ldquo;\u0026quot;) of a tag.\n   Field Name Type Description     key TagKey key identifies a tag.\n   creator_type CreatorType creator_type is the creator type of the tag.\n    \nTagAssignment TagAssignment holds a merge-preview or the existing merged state (if the workspace ID is \u0026ldquo;\u0026quot;) of an assignment between a tag and a network element.\n   Field Name Type Description     key TagAssignmentKey key identifies an assignment.\n    \nTagAssignmentConfig TagAssignmentConfig holds a configuration for an assignment between a tag and a network element.\n   Field Name Type Description     key TagAssignmentKey key identifies an assignment. The special workspace ID \u0026ldquo;\u0026quot;\nfor merged assignments should not be set here.\n   remove google.protobuf.BoolValue remove indicates whether to remove (true) or add (false,\nunset) the assignment identified by the key if the\nencompassing workspace merges.\n    \nTagAssignmentKey TagAssignmentKey uniquely identifies an assignment between a tag and a network element.\n   Field Name Type Description     workspace_id google.protobuf.StringValue workspace_id is the ID of a workspace. The special ID \u0026ldquo;\u0026quot;\nidentifies the location where merged assignments reside.\n   element_type ElementType element_type is the element type of a tag. What should\nbe set per element type:\nELEMENT_TYPE_DEVICE: device_id\nELEMENT_TYPE_INTERFACE: device_id, interface_id\n   label google.protobuf.StringValue label is the label of a tag.\n   value google.protobuf.StringValue value is the value of a tag.\n   device_id google.protobuf.StringValue device_id identifies a device.\n   interface_id google.protobuf.StringValue interface_id identifies an interface on a device.\n    \nTagConfig TagConfig holds a configuration for a user tag.\n   Field Name Type Description     key TagKey key identifies a tag. The special workspace ID \u0026quot;\u0026rdquo; for\nmerged tags should not be set here.\n   remove google.protobuf.BoolValue remove indicates whether to remove (true) or add (false,\nunset) the tag identified by the key if the encompassing\nworkspace merges.\n    \nTagKey TagKey uniquely identifies a tag.\n   Field Name Type Description     workspace_id google.protobuf.StringValue workspace_id is the ID of a workspace. The special ID \u0026ldquo;\u0026quot;\nidentifies the location where merged tags reside.\n   element_type ElementType element_type is the category of network element to which\nthis tag can be assigned.\n   label google.protobuf.StringValue label is an arbitrary label.\n   value google.protobuf.StringValue value is an arbitrary value.\n    \nCreatorType CreatorType enumerates the types of entities that can create a tag.\n   Name Number Description     CREATOR_TYPE_UNSPECIFIED 0 \n   CREATOR_TYPE_SYSTEM 1 CREATOR_TYPE_SYSTEM is used for system tags.\n   CREATOR_TYPE_USER 2 CREATOR_TYPE_USER is used for user tags.\n    \nElementType ElementType enumerates the types of network elements that can be associated with tags.\n   Name Number Description     ELEMENT_TYPE_UNSPECIFIED 0 \n   ELEMENT_TYPE_DEVICE 1 ELEMENT_TYPE_DEVICE is used for device tags.\n   ELEMENT_TYPE_INTERFACE 2 ELEMENT_TYPE_INTERFACE is used for interface tags.\n    \nTop\narista/tag.v2/services.gen.proto \nTagAssignmentConfigDeleteRequest    Field Name Type Description     key TagAssignmentKey Key indicates which TagAssignmentConfig instance to remove.\nThis field must always be set.\n    \nTagAssignmentConfigDeleteResponse    Field Name Type Description     key TagAssignmentKey Key echoes back the key of the deleted TagAssignmentConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nTagAssignmentConfigRequest    Field Name Type Description     key TagAssignmentKey Key uniquely identifies a TagAssignmentConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nTagAssignmentConfigResponse    Field Name Type Description     value TagAssignmentConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nTagAssignmentConfig instance in this response.\n    \nTagAssignmentConfigSetRequest    Field Name Type Description     value TagAssignmentConfig TagAssignmentConfig carries the value to set into the datastore.\nSee the documentation on the TagAssignmentConfig struct for which fields are required.\n    \nTagAssignmentConfigSetResponse    Field Name Type Description     value TagAssignmentConfig Value carries all the values given in the TagAssignmentConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nTagAssignmentConfigStreamRequest    Field Name Type Description     partial_eq_filter TagAssignmentConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nTagAssignmentConfigStreamResponse    Field Name Type Description     value TagAssignmentConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this TagAssignmentConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the TagAssignmentConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nTagAssignmentRequest    Field Name Type Description     key TagAssignmentKey Key uniquely identifies a TagAssignment instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nTagAssignmentResponse    Field Name Type Description     value TagAssignment Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nTagAssignment instance in this response.\n    \nTagAssignmentStreamRequest    Field Name Type Description     partial_eq_filter TagAssignment[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nTagAssignmentStreamResponse    Field Name Type Description     value TagAssignment Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this TagAssignment\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the TagAssignment value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nTagConfigDeleteRequest    Field Name Type Description     key TagKey Key indicates which TagConfig instance to remove.\nThis field must always be set.\n    \nTagConfigDeleteResponse    Field Name Type Description     key TagKey Key echoes back the key of the deleted TagConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nTagConfigRequest    Field Name Type Description     key TagKey Key uniquely identifies a TagConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nTagConfigResponse    Field Name Type Description     value TagConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nTagConfig instance in this response.\n    \nTagConfigSetRequest    Field Name Type Description     value TagConfig TagConfig carries the value to set into the datastore.\nSee the documentation on the TagConfig struct for which fields are required.\n    \nTagConfigSetResponse    Field Name Type Description     value TagConfig Value carries all the values given in the TagConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nTagConfigStreamRequest    Field Name Type Description     partial_eq_filter TagConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nTagConfigStreamResponse    Field Name Type Description     value TagConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this TagConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the TagConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nTagRequest    Field Name Type Description     key TagKey Key uniquely identifies a Tag instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nTagResponse    Field Name Type Description     value Tag Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nTag instance in this response.\n    \nTagStreamRequest    Field Name Type Description     partial_eq_filter Tag[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nTagStreamResponse    Field Name Type Description     value Tag Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Tag\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Tag value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nTagAssignmentConfigService    Method Name Request Type Response Type Description     GetOne TagAssignmentConfigRequest TagAssignmentConfigResponse \n   GetAll TagAssignmentConfigStreamRequest TagAssignmentConfigStreamResponse stream \n   Subscribe TagAssignmentConfigStreamRequest TagAssignmentConfigStreamResponse stream \n   Set TagAssignmentConfigSetRequest TagAssignmentConfigSetResponse \n   Delete TagAssignmentConfigDeleteRequest TagAssignmentConfigDeleteResponse \n    \nTagAssignmentService    Method Name Request Type Response Type Description     GetOne TagAssignmentRequest TagAssignmentResponse \n   GetAll TagAssignmentStreamRequest TagAssignmentStreamResponse stream \n   Subscribe TagAssignmentStreamRequest TagAssignmentStreamResponse stream \n    \nTagConfigService    Method Name Request Type Response Type Description     GetOne TagConfigRequest TagConfigResponse \n   GetAll TagConfigStreamRequest TagConfigStreamResponse stream \n   Subscribe TagConfigStreamRequest TagConfigStreamResponse stream \n   Set TagConfigSetRequest TagConfigSetResponse \n   Delete TagConfigDeleteRequest TagConfigDeleteResponse \n    \nTagService    Method Name Request Type Response Type Description     GetOne TagRequest TagResponse \n   GetAll TagStreamRequest TagStreamResponse stream \n   Subscribe TagStreamRequest TagStreamResponse stream \n    "},{"uri":"https://aristanetworks.github.io/cloudvision-apis/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"https://aristanetworks.github.io/cloudvision-apis/models/workspace.v1/","title":"workspace.v1","tags":[],"description":"","content":"  arista/workspace.v1/workspace.proto\n  BuildResult\n  BuildResults\n  BuildResults.ValuesEntry\n  ConfigValidationResult\n  ConfigletBuildResult\n  ConfigletBuildResults\n  ConfigletBuildResults.ValuesEntry\n  InputError\n  InputErrors\n  InputValidationResult\n  InputValidationResults\n  InputValidationResults.ValuesEntry\n  RequestParams\n  Response\n  Responses\n  Responses.ValuesEntry\n  TemplateError\n  TemplateErrors\n  Workspace\n  WorkspaceBuild\n  WorkspaceBuildKey\n  WorkspaceConfig\n  WorkspaceKey\n  BuildStage\n  BuildState\n  Request\n  ResponseStatus\n  WorkspaceState\n    arista/workspace.v1/services.gen.proto\n  WorkspaceBuildRequest\n  WorkspaceBuildResponse\n  WorkspaceBuildStreamRequest\n  WorkspaceBuildStreamResponse\n  WorkspaceConfigDeleteRequest\n  WorkspaceConfigDeleteResponse\n  WorkspaceConfigRequest\n  WorkspaceConfigResponse\n  WorkspaceConfigSetRequest\n  WorkspaceConfigSetResponse\n  WorkspaceConfigStreamRequest\n  WorkspaceConfigStreamResponse\n  WorkspaceRequest\n  WorkspaceResponse\n  WorkspaceStreamRequest\n  WorkspaceStreamResponse\n  WorkspaceBuildService\n  WorkspaceConfigService\n  WorkspaceService\n    \nTop\narista/workspace.v1/workspace.proto \nBuildResult BuildResult is the per-device build output\n   Field Name Type Description     state BuildState \n   stage BuildStage \n   input_validation_results InputValidationResults \n   configlet_build_results ConfigletBuildResults \n   config_validation_result ConfigValidationResult \n    \nBuildResults BuildResults is the build output for all devices, indexed by device ID\n   Field Name Type Description     values BuildResults.ValuesEntry[\u0026hellip;] \n    \nBuildResults.ValuesEntry    Field Name Type Description     key string \n   value BuildResult \n    \nConfigValidationResult ConfigValidationResult is the result of validating config with an EOS device\n   Field Name Type Description     summary arista.configstatus.v1.ConfigSummary \n   errors arista.configstatus.v1.ConfigErrors \n   warnings arista.configstatus.v1.ConfigErrors \n    \nConfigletBuildResult ConfigletBuildResult is the output of configlet (template) build\n   Field Name Type Description     template_errors TemplateErrors \n   generated_config google.protobuf.StringValue \n    \nConfigletBuildResults ConfigletBuildResults is the output of configlet build, one per studio\n   Field Name Type Description     values ConfigletBuildResults.ValuesEntry[\u0026hellip;] \n    \nConfigletBuildResults.ValuesEntry    Field Name Type Description     key string \n   value ConfigletBuildResult \n    \nInputError InputError represents an error in an input field, with either schema or value\n   Field Name Type Description     field_id google.protobuf.StringValue ID of the field\n   path fmp.RepeatedString Path leading up to the field\n   members fmp.RepeatedString Members of the field\n   message google.protobuf.StringValue The error message\n    \nInputErrors InputErrors is the nullable list of InputError\n   Field Name Type Description     values InputError[\u0026hellip;] \n    \nInputValidationResult InputValidationResult is the result of input validation of a studio\n   Field Name Type Description     input_schema_errors InputErrors \n   input_value_errors InputErrors \n   other_errors fmp.RepeatedString \n    \nInputValidationResults InputValidationResults is the result of input validation, one per studio\n   Field Name Type Description     values InputValidationResults.ValuesEntry[\u0026hellip;] \n    \nInputValidationResults.ValuesEntry    Field Name Type Description     key string \n   value InputValidationResult \n    \nRequestParams RequestParams is the parameters associated with a WorkspaceRequest\n   Field Name Type Description     request_id google.protobuf.StringValue \n    \nResponse Response is the response to the last Request, typically errors in processing\n   Field Name Type Description     status ResponseStatus \n   message google.protobuf.StringValue \n    \nResponses Responses is the map of all request ID to response that are processed so far\n   Field Name Type Description     values Responses.ValuesEntry[\u0026hellip;] \n    \nResponses.ValuesEntry    Field Name Type Description     key string \n   value Response \n    \nTemplateError TemplateError represents a single error generated by a template evaluation\n   Field Name Type Description     line_num google.protobuf.UInt32Value Line on which the error occurred\n   exception google.protobuf.StringValue The exception type\n   detail google.protobuf.StringValue Backtrace, etc.\n    \nTemplateErrors TemplateErrors is the nullable list of TemplateError\n   Field Name Type Description     values TemplateError[\u0026hellip;] \n    \nWorkspace Workspace is the status of a workspace\n   Field Name Type Description     key WorkspaceKey \n   created_at google.protobuf.Timestamp \n   created_by google.protobuf.StringValue \n   last_modified_at google.protobuf.Timestamp \n   last_modified_by google.protobuf.StringValue \n   state WorkspaceState \n   last_build_id google.protobuf.StringValue \n   responses Responses \n   cc_ids fmp.RepeatedString Change Controls created by submitting this workspace\n    \nWorkspaceBuild WorkspaceBuild is the result, or output of a workspace build This includes results for all devices across all studios in the workspace\n   Field Name Type Description     key WorkspaceBuildKey \n   state BuildState \n   build_results BuildResults \n    \nWorkspaceBuildKey WorkspaceBuildKey is the key to get the build result for a workspace\n   Field Name Type Description     workspace_id google.protobuf.StringValue workspace_id is a required field which represents workspace ID\n   build_id google.protobuf.StringValue build_id is a required field which represents build ID\n    \nWorkspaceConfig WorkspaceConfig represents the configurable parameters of a workspace\n   Field Name Type Description     key WorkspaceKey \n   display_name google.protobuf.StringValue \n   description google.protobuf.StringValue \n   request Request \n   request_params RequestParams \n    \nWorkspaceKey WorkspaceKey is the key to get a workspace\u0026rsquo;s status\n   Field Name Type Description     workspace_id google.protobuf.StringValue \n    \nBuildStage BuildStage is the stage of a workspace build\n   Name Number Description     BUILD_STAGE_UNSPECIFIED 0 \n   BUILD_STAGE_INPUT_VALIDATION 1 \n   BUILD_STAGE_CONFIGLET_BUILD 2 \n   BUILD_STAGE_CONFIG_VALIDATION 3 \n    \nBuildState    Name Number Description     BUILD_STATE_UNSPECIFIED 0 \n   BUILD_STATE_IN_PROGRESS 1 \n   BUILD_STATE_CANCELED 2 \n   BUILD_STATE_SUCCESS 3 \n   BUILD_STATE_FAIL 4 \n    \nRequest Operations on a workspace that can be requested by a client. These are workspace-specific operations. The standard operations Add, Delete, etc. are performed via the standard (\u0026ldquo;core\u0026rdquo;) APIs. This is an asynchronous request that returns immediately if the request is valid. The result of the operation will be available in WorkspaceStatus when it is generated.\n   Name Number Description     REQUEST_UNSPECIFIED 0 \n   REQUEST_START_BUILD 1 Start a new build\n   REQUEST_CANCEL_BUILD 2 Cancel any pending build\n   REQUEST_SUBMIT 3 Submit the workspace (merge into mainline)\n   REQUEST_ABANDON 4 Abandon the workspace. Not delete\n   REQUEST_ROLLBACK 5 Rollback an already submitted workspace\n    \nResponseStatus    Name Number Description     RESPONSE_STATUS_UNSPECIFIED 0 \n   RESPONSE_STATUS_SUCCESS 1 \n   RESPONSE_STATUS_FAIL 2 \n    \nWorkspaceState    Name Number Description     WORKSPACE_STATE_UNSPECIFIED 0 \n   WORKSPACE_STATE_PENDING 1 \n   WORKSPACE_STATE_SUBMITTED 2 \n   WORKSPACE_STATE_ABANDONED 3 \n   WORKSPACE_STATE_CONFLICTS 4 \n   WORKSPACE_STATE_ROLLED_BACK 5 \n    \nTop\narista/workspace.v1/services.gen.proto \nWorkspaceBuildRequest    Field Name Type Description     key WorkspaceBuildKey Key uniquely identifies a WorkspaceBuild instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nWorkspaceBuildResponse    Field Name Type Description     value WorkspaceBuild Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nWorkspaceBuild instance in this response.\n    \nWorkspaceBuildStreamRequest    Field Name Type Description     partial_eq_filter WorkspaceBuild[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nWorkspaceBuildStreamResponse    Field Name Type Description     value WorkspaceBuild Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this WorkspaceBuild\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the WorkspaceBuild value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nWorkspaceConfigDeleteRequest    Field Name Type Description     key WorkspaceKey Key indicates which WorkspaceConfig instance to remove.\nThis field must always be set.\n    \nWorkspaceConfigDeleteResponse    Field Name Type Description     key WorkspaceKey Key echoes back the key of the deleted WorkspaceConfig instance.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==DeletedAt will not include this instance.\n    \nWorkspaceConfigRequest    Field Name Type Description     key WorkspaceKey Key uniquely identifies a WorkspaceConfig instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nWorkspaceConfigResponse    Field Name Type Description     value WorkspaceConfig Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nWorkspaceConfig instance in this response.\n    \nWorkspaceConfigSetRequest    Field Name Type Description     value WorkspaceConfig WorkspaceConfig carries the value to set into the datastore.\nSee the documentation on the WorkspaceConfig struct for which fields are required.\n    \nWorkspaceConfigSetResponse    Field Name Type Description     value WorkspaceConfig Value carries all the values given in the WorkspaceConfigSetRequest as well\nas any server-generated values.\n   time google.protobuf.Timestamp Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:\n- it is after the time the request was received\n- a time-ranged query with StartTime==CreatedAt will include this instance.\n    \nWorkspaceConfigStreamRequest    Field Name Type Description     partial_eq_filter WorkspaceConfig[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nWorkspaceConfigStreamResponse    Field Name Type Description     value WorkspaceConfig Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this WorkspaceConfig\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the WorkspaceConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nWorkspaceRequest    Field Name Type Description     key WorkspaceKey Key uniquely identifies a Workspace instance to retrieve.\nThis value must be populated.\n   time google.protobuf.Timestamp Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.\n    \nWorkspaceResponse    Field Name Type Description     value Workspace Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values.\n   time google.protobuf.Timestamp Time carries the (UTC) timestamp of the last-modification of the\nWorkspace instance in this response.\n    \nWorkspaceStreamRequest    Field Name Type Description     partial_eq_filter Workspace[\u0026hellip;] PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific.\n   time arista.time.TimeBounds TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\nThis field is not allowed in the Subscribe RPC.\n    \nWorkspaceStreamResponse    Field Name Type Description     value Workspace Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification.\n   time google.protobuf.Timestamp Time holds the timestamp of this Workspace\u0026rsquo;s last modification.\n   type arista.subscriptions.Operation Operation indicates how the Workspace value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again.\n    \nWorkspaceBuildService    Method Name Request Type Response Type Description     GetOne WorkspaceBuildRequest WorkspaceBuildResponse \n   GetAll WorkspaceBuildStreamRequest WorkspaceBuildStreamResponse stream \n   Subscribe WorkspaceBuildStreamRequest WorkspaceBuildStreamResponse stream \n    \nWorkspaceConfigService    Method Name Request Type Response Type Description     GetOne WorkspaceConfigRequest WorkspaceConfigResponse \n   GetAll WorkspaceConfigStreamRequest WorkspaceConfigStreamResponse stream \n   Subscribe WorkspaceConfigStreamRequest WorkspaceConfigStreamResponse stream \n   Set WorkspaceConfigSetRequest WorkspaceConfigSetResponse \n   Delete WorkspaceConfigDeleteRequest WorkspaceConfigDeleteResponse \n    \nWorkspaceService    Method Name Request Type Response Type Description     GetOne WorkspaceRequest WorkspaceResponse \n   GetAll WorkspaceStreamRequest WorkspaceStreamResponse stream \n   Subscribe WorkspaceStreamRequest WorkspaceStreamResponse stream \n    "}]