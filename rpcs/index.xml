<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Uniform RPCs on Arista Networks FMP APIs</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/</link><description>Recent content in Uniform RPCs on Arista Networks FMP APIs</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://aristanetworks.github.io/cloudvision-apis/rpcs/index.xml" rel="self" type="application/rss+xml"/><item><title>Error Handling</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/errors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/errors/</guid><description>&lt;p>Errors returned by the API follow the &lt;a href="https://github.com/grpc/grpc/blob/master/doc/statuscodes.md">gRPC status code&lt;/a> guidelines. This provides many niceties:&lt;/p>
&lt;ol>
&lt;li>Language-native idioms (exceptions, return codes, etc.)&lt;/li>
&lt;li>Easily mappable to HTTP error codes (used for HTTP access to RPCs)&lt;/li>
&lt;li>Uses metadata rather than a global schema for more detailed errors&lt;/li>
&lt;/ol>
&lt;h3 id="example-go">Example: Go&lt;/h3>
&lt;h4 id="unary-rpcs">Unary RPCs&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">resp&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">example&lt;/span>.&lt;span style="color:#a6e22e">GetOne&lt;/span>(&lt;span style="color:#a6e22e">ExampleConfigRequest&lt;/span>{&lt;span style="color:#a6e22e">Key&lt;/span>: &lt;span style="color:#a6e22e">key&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to get %+v: %s\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">key&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="streaming-rpcs">Streaming RPCs&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">stream&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">example&lt;/span>.&lt;span style="color:#a6e22e">GetAll&lt;/span>(&lt;span style="color:#a6e22e">ExampleConfigStreamRequest&lt;/span>{&lt;span style="color:#f92672">...&lt;/span>})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatalf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;failed to initialize GetAll stream: %s&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">value&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">stream&lt;/span>.&lt;span style="color:#a6e22e">Recv&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">EOF&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// all done
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// stream was broken due to error
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Fatalf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;stream was interrupted: %s&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Printf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;%+v\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">value&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="example-python">Example: Python&lt;/h3>
&lt;h4 id="unary-rpcs-1">Unary RPCs&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> response &lt;span style="color:#f92672">=&lt;/span> example_stub&lt;span style="color:#f92672">.&lt;/span>Set(ExampleConfigSetRequest(&lt;span style="color:#f92672">...&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span> grpc&lt;span style="color:#f92672">.&lt;/span>RpcError &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;Set failed: &lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74">: &lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(e&lt;span style="color:#f92672">.&lt;/span>code(), e&lt;span style="color:#f92672">.&lt;/span>details()))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> e
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="streaming-rpcs-1">Streaming RPCs&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> resource &lt;span style="color:#f92672">in&lt;/span> example_stub&lt;span style="color:#f92672">.&lt;/span>GetAll(ExampleConfigStreamRequest(&lt;span style="color:#f92672">...&lt;/span>)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># process resource&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span> grpc&lt;span style="color:#f92672">.&lt;/span>RpcError &lt;span style="color:#66d9ef">as&lt;/span> e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;GetAll failed: &lt;/span>&lt;span style="color:#e6db74">{0}&lt;/span>&lt;span style="color:#e6db74">: &lt;/span>&lt;span style="color:#e6db74">{1}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(e&lt;span style="color:#f92672">.&lt;/span>code(), e&lt;span style="color:#f92672">.&lt;/span>details()))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> e
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Filtering</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/filtering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/filtering/</guid><description>&lt;p>Filtering is provided through a default and an (optional) additional model-specific mechanism. By default, all models support &amp;ldquo;partial equality filtering&amp;rdquo;. Models that provide a custom filtering method will document this filter-message in its model documentation.&lt;/p>
&lt;h3 id="partial-equality-filters">Partial-Equality Filters&lt;/h3>
&lt;p>Unless intentionally disabled (and sufficiently documented), services provide a default filtering mechanism. The input type is the same as the model you are filtering, and if you wish to filter on a given field you set that field to non-nil.&lt;/p></description></item><item><title>GetOne</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/getone/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/getone/</guid><description>&lt;p>&lt;code>GetOne&lt;/code> returns a single instance of a resource.&lt;/p>

&lt;div class="notices note" >&lt;p>The &lt;code>Key&lt;/code> field is required to be fully-specified because &lt;code>GetOne&lt;/code> needs to identify exactly-one
resource to fetch.&lt;/p>
&lt;/div>

&lt;h4 id="rpc-definition">RPC Definition&lt;/h4>
&lt;p>The protobuf definition of &lt;code>GetOne&lt;/code> is defined as such (for &lt;code>ExampleConfig&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">rpc&lt;/span> GetOne (ExampleConfigRequest) &lt;span style="color:#66d9ef">returns&lt;/span> (ExampleConfigResponse);&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="request-type">Request Type&lt;/h4>
&lt;p>The generated request for a model (&lt;code>ExampleConfig&lt;/code>, here) looks like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">message&lt;/span> &lt;span style="color:#a6e22e">ExampleConfigRequest&lt;/span> {&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> &lt;span style="color:#75715e">// Key uniquely identifies a ExampleConfig instance to retrieve.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// This value must be populated (non-null) and all fields set.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ExampleKey key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> &lt;span style="color:#75715e">// Time indicates the time for which you are interested in the data.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// If no time is given, the server will use the time at which it makes the request.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// This time is used as an upper-bound. The returned value may have been set at
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// an earlier time, however, it was the value as of the supplied time.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> google.protobuf.Timestamp time &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>;&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>}&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="response-type">Response Type&lt;/h4>
&lt;p>The generated response for a model (&lt;code>ExampleConfig&lt;/code>, here) looks like so:&lt;/p></description></item><item><title>GetSome</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/getsome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/getsome/</guid><description>&lt;p>&lt;code>GetSome&lt;/code> returns multiple instances of a resource.&lt;/p>

&lt;div class="notices note" >&lt;p>GetSome is supported on all keyed resources.&lt;br>
However, in certain releases, this may have been missing. See Support section below for details.&lt;/p>
&lt;/div>


&lt;div class="notices note" >&lt;p>The &lt;code>Keys&lt;/code> field is required to be fully-specified because &lt;code>GetSome&lt;/code> needs to identify resources to fetch.&lt;/p>
&lt;/div>

&lt;h4 id="rpc-definition">RPC Definition&lt;/h4>
&lt;p>The protobuf definition of &lt;code>GetSome&lt;/code> is defined as such (for &lt;code>ExampleConfig&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">rpc&lt;/span> GetSome (ExampleConfigSomeRequest) &lt;span style="color:#66d9ef">returns&lt;/span> (stream ExampleConfigSomeResponse);&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="request-type">Request Type&lt;/h4>
&lt;p>The generated request for a model (&lt;code>ExampleConfig&lt;/code>, here) looks like so:&lt;/p></description></item><item><title>GetAll</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/getall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/getall/</guid><description>&lt;p>&lt;code>GetAll&lt;/code> fetches (and optionally filters) all resource instances.&lt;/p>
&lt;p>For the filtering options available, see the &lt;a href="https://aristanetworks.github.io/cloudvision-apis/cloudvision-apis/rpcs/filtering">Filtering&lt;/a> section.
These filtering options are the same for &lt;a href="https://aristanetworks.github.io/cloudvision-apis/cloudvision-apis/rpcs/subscribe">Subscribe&lt;/a>.&lt;/p>
&lt;p>This RPC is effectively a full-table-scan so the time to complete depends on the amount of data
the resource reflects. However, being a streaming API, this RPC will return the first message as
soon as it is available without any buffering.&lt;/p>
&lt;h4 id="rpc-definition">RPC Definition&lt;/h4>
&lt;p>The protobuf definition of &lt;code>GetAll&lt;/code> is defined as such (for &lt;code>ExampleConfig&lt;/code>):&lt;/p></description></item><item><title>Subscribe</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/subscribe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/subscribe/</guid><description>&lt;p>&lt;code>Subscribe&lt;/code> first returns the initial state (fully-specified messages) and then any received updates.&lt;/p>
&lt;p>The first messages received are effectively the result of a &lt;a href="https://aristanetworks.github.io/cloudvision-apis/cloudvision-apis/rpcs/getall">GetAll&lt;/a>).
Once existing state has been sent to the client, any changes to resource entities are streamed back to the client. The
&lt;em>update&lt;/em> messages will represent what was updated and can either be a diff/partial or a fully-specified model.&lt;/p>

&lt;div class="notices note" >&lt;p>Any &lt;a href="https://aristanetworks.github.io/cloudvision-apis/cloudvision-apis/rpcs/filtering">filters&lt;/a> apply both to the initial state and updates.&lt;/p></description></item><item><title>Set</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/set/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/set/</guid><description>&lt;p>&lt;code>Set&lt;/code> updates a resource. Updates can be whole or partial (see: nullable fields) using only fields populated in the request.&lt;/p>

&lt;div class="notices note" >&lt;p>The &lt;code>Value&lt;/code> field is required to be fully-specified because &lt;code>Set&lt;/code> needs to identify exactly-one
resource to update.&lt;/p>
&lt;/div>


&lt;div class="notices note" >&lt;p>The endpoint returns the time the &lt;code>Set&lt;/code> becomes effective internally and the service&amp;rsquo;s known-state of the resource.&lt;/p>
&lt;/div>

&lt;p>A &lt;code>*SetResponse&lt;/code> will contain an &amp;ldquo;echo&amp;rdquo; of the resource. This echo will be the original update-request at a minimum, and may include more data.This allows services to do fast, write-only, updates to internal storage. If the service needs to query existing state first then more data can be provided to the client. If you need a full model after a &lt;code>Set&lt;/code> operation, you can issue a &lt;code>GetOne&lt;/code> with the returned &lt;code>time&lt;/code>.&lt;/p></description></item><item><title>SetSome</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/setsome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/setsome/</guid><description>&lt;p>&lt;code>SetSome&lt;/code> updates multiple instances of a keyed resource. Updates can be whole or partial (see: nullable fields) using only fields populated in the request.&lt;/p>

&lt;div class="notices note" >&lt;p>SetSome is supported on all keyed resources.&lt;br>
However, in certain releases, this may have been missing. See Support section below for details.&lt;/p>
&lt;/div>


&lt;div class="notices note" >&lt;p>The &lt;code>Values&lt;/code> field is required to be fully-specified because &lt;code>SetSome&lt;/code> needs to identify
resources to update.&lt;/p>
&lt;/div>

&lt;p>A &lt;code>*SetSomeResponse&lt;/code> will &amp;ldquo;echo&amp;rdquo; back the key of a resource that failed to set. It will also contain an error description on why the resource failed to set.&lt;/p></description></item><item><title>Delete</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/delete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/delete/</guid><description>&lt;p>&lt;code>Delete&lt;/code> deletes a resource and returns the time the delete became effective.&lt;/p>

&lt;div class="notices note" >&lt;p>The &lt;code>Key&lt;/code> field is required to be fully-specified because &lt;code>Delete&lt;/code> needs to identify exactly-one
resource to delete.&lt;/p>
&lt;/div>

&lt;h4 id="rpc-definition">RPC Definition&lt;/h4>
&lt;p>The protobuf definition of &lt;code>GetOne&lt;/code> is defined as such (for &lt;code>ExampleConfig&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">rpc&lt;/span> Delete (ExampleConfigDeleteRequest) &lt;span style="color:#66d9ef">returns&lt;/span> (ExampleConfigDeleteResponse);&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="request-type">Request Type&lt;/h4>
&lt;p>The generated request for a model (&lt;code>ExampleConfig&lt;/code>, here) looks like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-protobuf" data-lang="protobuf">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">message&lt;/span> &lt;span style="color:#a6e22e">ExampleConfigDeleteRequest&lt;/span> {&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span> &lt;span style="color:#75715e">// Key indicates which ExampleConfig instance to remove.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// This field must always be set.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ExampleKey key &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">&lt;/span>};&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="response-type">Response Type&lt;/h4>
&lt;p>The generated response for a model (&lt;code>ExampleConfig&lt;/code>, here) looks like so:&lt;/p></description></item><item><title>DeleteSome</title><link>https://aristanetworks.github.io/cloudvision-apis/rpcs/deletesome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aristanetworks.github.io/cloudvision-apis/rpcs/deletesome/</guid><description>&lt;p>&lt;code>DeleteSome&lt;/code> deletes a resource and streams back the resources that failed to be deleted and a description for the failure.&lt;/p>

&lt;div class="notices note" >&lt;p>DeleteSome is supported on all keyed resources.&lt;br>
However, in certain releases, this may have been missing. See Support section below for details.&lt;/p>
&lt;/div>


&lt;div class="notices note" >&lt;p>The &lt;code>Keys&lt;/code> field is required to be fully-specified because &lt;code>DeleteSome&lt;/code> needs to identify resources to delete.&lt;/p>
&lt;/div>

&lt;h4 id="rpc-definition">RPC Definition&lt;/h4>
&lt;p>The protobuf definition of &lt;code>DeleteSome&lt;/code> is defined as such (for &lt;code>ExampleConfig&lt;/code>):&lt;/p></description></item></channel></rss>