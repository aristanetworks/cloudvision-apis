// Copyright (c) 2023 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.
// Subject to Arista Networks, Inc.'s EULA.
// FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

syntax = "proto3";

package arista.alert.v1;

option go_package = "arista/resources/arista/alert.v1;alert";

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

import "fmp/extensions.proto";
import "fmp/wrappers.proto";


// AlertConfig is the configuration for sending alerts
message AlertConfig {
	option (fmp.unkeyed_model) = "rw";
	option (fmp.no_default_filter) = true;

	// settings is the global default settings for various endpoints used in broadcast groups.
	// Can be overwritten in individual endpoint settings
	Settings settings = 1;
	// rules define how we route alerts to broadcast groups
	Rules rules = 2;
	// broadcast_groups are groups of endpoints that alerts are sent to
	BroadcastGroups broadcast_groups = 3;
}


// Alert is the current status of the alert system
message Alert {
	option (fmp.unkeyed_model) = "ro";
	option (fmp.no_default_filter) = true;

	// configuration_errors contain any configuration errors reported by the backend
	ConfigErrors configuration_errors = 1;
	// endpoint_errors contain any failed attempts to send alerts
	EndpointErrors endpoint_errors = 2;
	// last_modified_at is the time at which the configuration was last modified
	google.protobuf.Timestamp  last_modified_at = 3;
	// last_modified_by is the user who last modified the configuration
	google.protobuf.StringValue last_modified_by = 4;
}


// ConfigErrors is a list of configuration-related errors
message ConfigErrors {
	// values is a list of errors
	repeated ConfigError values = 1;
}

// ConfigError is an error caused by an invalid config being rejected by the backend
message ConfigError {
	// path is the 'path' to the invalid config element,
	// eg: path.userPathName.email_configs[1].to =
	// the 'to' field of the second email config of the 'userPathName' broadcast_group
	google.protobuf.StringValue path = 1;
	// error_type is the type of error, this allows custom handling of different error types
	ConfigErrorType error_type = 2;
	// error is a user-friendly error message
	google.protobuf.StringValue error = 3;
}

// ConfigErrorType describes the set of possible config error types
enum ConfigErrorType {
	// CONFIG_ERROR_TYPE_UNSPECIFIED is the unspecified enum value
	CONFIG_ERROR_TYPE_UNSPECIFIED = 0;
	// CONFIG_ERROR_TYPE_INVALID_FORMAT is caused by invalid format for value (eg: url)
	CONFIG_ERROR_TYPE_INVALID_FORMAT = 2;
	// CONFIG_ERROR_TYPE_INVALID_SYNTAX is caused by invalid syntax for value (eg: regex)
	CONFIG_ERROR_TYPE_INVALID_SYNTAX = 3;
	// CONFIG_ERROR_TYPE_TEMPLATE_INVALID is caused by failure to parse a template
	CONFIG_ERROR_TYPE_TEMPLATE_INVALID = 4;
	// CONFIG_ERROR_TYPE_ILLEGAL_VALUE is caused by a value outside of its bounds
	CONFIG_ERROR_TYPE_ILLEGAL_VALUE = 5;
	// CONFIG_ERROR_TYPE_MISSING_REQUIRED is caused by a missing required attribute
	CONFIG_ERROR_TYPE_MISSING_REQUIRED = 6;
	// CONFIG_ERROR_TYPE_INVALID_TYPE is caused by the wrong type found in backing store
	CONFIG_ERROR_TYPE_INVALID_TYPE = 7;
}


// EndpointErrors is a set of errors related to sending of alerts
message EndpointErrors {
	// values is the list of errors
	repeated EndpointError values = 1;
}

// EndpointError is an error caused by a failure to send alert(s) for any reason
message EndpointError {
	// endpoint_type indicates the type of endpoint which failed,
	// or unknown if not endpoint-specific (eg: slack, opsgenie)
	google.protobuf.StringValue endpoint_type = 1;
	// broadcast_group_name is the name of the broadcast group which was being used,
	// empty string if not group specific
	google.protobuf.StringValue broadcast_group_name = 2;
	// config_index is the index of the config on the broadcast group or -1 if not applicable
	// eg: if there are two email config in one broadcast group, then the indices for each are 0 and 1
	// note that these are done per type, so only counting email/slack/...
	google.protobuf.Int32Value config_index = 3;
	// error_type is the type of error, this allows custom handling of different error types
	EndpointErrorType error_type = 4;
	// error is a user-friendly error message
	google.protobuf.StringValue error = 5;
}

// EndpointErrorType describe the set of possible endpoint types
enum EndpointErrorType {
	// ENDPOINT_ERROR_TYPE_UNSPECIFIED is the unspecified enum value
	ENDPOINT_ERROR_TYPE_UNSPECIFIED = 0;
	// ENDPOINT_ERROR_TYPE_HTTP_POST_ERROR an error in sending HTTP request or reading a HTTP
	// response
	ENDPOINT_ERROR_TYPE_HTTP_POST_ERROR = 1;
	// ENDPOINT_ERROR_TYPE_JSON_MARSHAL_ERROR is caused by errors while encoding json
	ENDPOINT_ERROR_TYPE_JSON_MARSHAL_ERROR = 2;
	// ENDPOINT_ERROR_TYPE_INVALID_CONFIG_ERROR is an error caused by invalid config (missing,
	// bad format, etc)
	ENDPOINT_ERROR_TYPE_INVALID_CONFIG_ERROR = 3;
	// ENDPOINT_ERROR_TYPE_TEMPLATE_ERROR is caused by errors while executing templates
	ENDPOINT_ERROR_TYPE_TEMPLATE_ERROR = 4;
	// ENDPOINT_ERROR_TYPE_BAD_RESPONSE_ERROR is caused by receiving a negative response from an
	// endpoint indicating that the alert was not sent
	ENDPOINT_ERROR_TYPE_BAD_RESPONSE_ERROR = 5;
	// ENDPOINT_ERROR_TYPE_SMTP_ERROR is caused by errors with SMTP
	ENDPOINT_ERROR_TYPE_SMTP_ERROR = 6;
	// ENDPOINT_ERROR_TYPE_CONNECTION_ERROR is caused by errors with a connection
	ENDPOINT_ERROR_TYPE_CONNECTION_ERROR = 7;
	// ENDPOINT_ERROR_TYPE_TIMEOUT_ERROR is caused by errors with a connection
	ENDPOINT_ERROR_TYPE_TIMEOUT_ERROR = 8;
	// ENDPOINT_ERROR_TYPE_RATE_LIMIT_ERROR is caused by an Alerter rate limit being exceeded
	ENDPOINT_ERROR_TYPE_RATE_LIMIT_ERROR = 9;
	// ENDPOINT_ERROR_TYPE_ALERT_CAP_ERROR is caused by the number of alerts sent to a sender
	// exceeding the built-in limit
	ENDPOINT_ERROR_TYPE_ALERT_CAP_ERROR = 10;
}

// Settings portion of config, a list of default global settings used by broadcast groups
message Settings {
	// email is the global default settings for email
	EmailSettings email = 1;
	// http is the global default settings for http
	HttpSettings http = 2;
	// slack is the global default settings for slack
	SlackSettings slack = 3;
	// victorops is the global default settings for victorops
	VictoropsSettings victorops = 4;
	// pagerduty is the global default settings for pagerduty
	PagerdutySettings pagerduty = 5;
	// opsgenie is the global default settings for opsgenie
	OpsgenieSettings opsgenie = 6;
	// gchat is the global default settings for google chat
	GoogleChatSettings gchat = 7;
	// msteams is the global default settings for ms teams
	MsTeamsSettings msteams = 8;
	// inhibition defines the inhibition rules for alerts, allowing events of certain types to be
	// suppressed while another event type is active
	InhibitionSettings inhibition = 9;
	// base_url is the root address of your CloudVision app. Used to generate links in notifications.
	google.protobuf.StringValue base_url = 10;
	// timezone is used for formatting event times in notifications. E.g. 'UTC', 'US/Pacific'
	google.protobuf.StringValue timezone = 11;
	// syslog is the global default settings for syslog
	SyslogSettings syslog = 12;
	// snmp is the global default settings for snmp
	SNMPSettings snmp = 13;
	// sendgrid is the global default settings for sendgrid
	SendgridSettings sendgrid = 14;
	// cue_syslog is the global default settings for cue syslog
	CueSyslogSettings cue_syslog = 15;
	// cue_snmp is the global default settings for cue snmp
	CueSNMPSettings cue_snmp = 16;
	// cue_sendgrid is the global default settings for cue sendgrid
	CueSendgridSettings cue_sendgrid = 17;
	// hide_tags is used to by the alerting system to omit tags and other "superfluous"
	// values from the notifications that are sent out by the system
	google.protobuf.BoolValue hide_tags = 18;
	// zoom is the global default settings for zoom
	ZoomSettings zoom = 19;
}


// EmailSettings contain the settings for the sending of emails
message EmailSettings {
	// from is the email address to send from
	google.protobuf.StringValue from = 1;
	// smarthost is the hostname and port of the SMTP server
	google.protobuf.StringValue smarthost = 2;
	// auth_username the username to use when sending emails
	google.protobuf.StringValue auth_username = 3;
	// auth_password the password to use when sending emails
	google.protobuf.StringValue auth_password = 4;
	// require_tls always use TLS connections when sending emails
	google.protobuf.BoolValue require_tls = 5;
	// single_alert_per_email configures the Alerter such that each alert generates a separate email
	// notification, the email will only have a single notification, the format will also be different
	google.protobuf.BoolValue single_alert_per_email = 6;
}


// HttpSettings are the settings to be used when sending various message over a http connection
message HttpSettings {
	// username is the username to use when connecting to the http proxy
	google.protobuf.StringValue username = 1;
	// password is the password to use when connecting to the http proxy
	google.protobuf.StringValue password = 2;
	// proxy_url is the url for the http proxy
	google.protobuf.StringValue proxy_url = 3;
	// custom_headers is custom http headers to be used along with the default headers
	HttpHeaders custom_headers = 4;
}

// HttpHeaders is a set of http headers
message HttpHeaders {
	// values is a map of http header names to values
	map<string, HeaderValues> values = 1;
}

// HeaderValues is a set of values for this header
message HeaderValues {
	// values is the header values
	repeated string values = 1;
}


// SlackSettings contain the settings for sending alerts to slack
message SlackSettings {
	// url is the url of the slack webhook to use
	google.protobuf.StringValue url = 1;
}


// VictoropsSettings contain the settings for sending alerts to victorops
message VictoropsSettings {
	// key is the API key to use when talking to the VictorOps API
	google.protobuf.StringValue key = 1;
	// url is the victorops url to use (without integration or routing key
	// default: https://alert.victorops.com/integrations/generic/20131114/alert/
	google.protobuf.StringValue url = 2;
}


// PagerdutySettings contain the settings for sending alerts to pagerduty
message PagerdutySettings {
	// url is the url to use when sending alerts to pagerduty
	google.protobuf.StringValue url = 1;
}


// OpsgenieSettings contain the settings for sending alerts to opsgenie
message OpsgenieSettings {
	// key is the API key to use when talking to the OpsGenie API
	google.protobuf.StringValue key = 1;
	// url is the url to use when sending alerts to opsgenie
	google.protobuf.StringValue url = 2;
}


// GoogleChatSettings contain the settings for sending alerts to google chat
message GoogleChatSettings {
	// url is the url of the webhook to send alerts to
	google.protobuf.StringValue url = 1;
}


// MsTeamsSettings contain the settings for sending alerts to MS Teams
message MsTeamsSettings {
	// url is the url of the webhook to send alerts to
	google.protobuf.StringValue url = 1;
}


// SyslogSettings contain the settings for sending alerts with syslog
message SyslogSettings {
	// network is the network protocol to use, default is "udp",
	// options also include: tcp,tcp4,tcp6,udp4,udp6
	google.protobuf.StringValue network = 1;
	// address is the network address to send syslog messages to
	google.protobuf.StringValue address = 2;
	// facility is the syslog facility 0-23 inc. This is the syslog facility as defined in RFC-3164
	google.protobuf.Int32Value facility = 3;
	// priorities describes how CVP severity maps to syslog priority
	// priority is a number between 0-7 inc. as defined in RFC-3164
	Priorities priorities = 4;
	// tag is the syslog TAG as described in RFC-3164, it is the prefix to all syslog messages
	google.protobuf.StringValue tag = 5;
	// per_device allows message to optionally be sent per device,
	// if an event concerns two devices the behaviour is changed based on this option:
	//   true: two messages are sent, one for each device
	//   false: a single message is sent
	google.protobuf.BoolValue per_device = 6;
	// use_tls determines if the connection to the server should be secured with TLS
	google.protobuf.BoolValue use_tls = 7;
}


// Priorities is a mapping of CV event severities to syslog severities
message Priorities{
	// critical priority, default = 2 (Critical)
	google.protobuf.Int32Value critical = 1;
	// error priority, default = 3 (Error)
	google.protobuf.Int32Value error = 2;
	// warn priority, default = 4 (Warning)
	google.protobuf.Int32Value warn = 3;
	// info priority, default = 6 (Informational)
	google.protobuf.Int32Value info = 4;
}

// CueData contains additional cue-specific data
message CueData {
	// values can contain some additional data which is required by the cue specific provider
	map<string, string> values = 1;
}

// CueSyslogMessageFormat is the message format for cue syslog messages
enum CueSyslogMessageFormat{
	// CUE_SYSLOG_MESSAGE_FORMAT_UNSPECIFIED is the unspecified enum value
	CUE_SYSLOG_MESSAGE_FORMAT_UNSPECIFIED = 0;
	// CUE_SYSLOG_MESSAGE_FORMAT_PLAIN format uses the text format for constructing the syslog message
	CUE_SYSLOG_MESSAGE_FORMAT_PLAIN = 1;
	// CUE_SYSLOG_MESSAGE_FORMAT_IDMEF uses IDMEF message format as described here:
	// https://datatracker.ietf.org/doc/html/rfc4765
	CUE_SYSLOG_MESSAGE_FORMAT_IDMEF = 2;
}


// CueSyslogSettings contain the settings for sending alerts with syslog for cue
message CueSyslogSettings {
	// network is the network protocol to use, default is "udp",
	// options also include: tcp,tcp4,tcp6,udp4,udp6
	google.protobuf.StringValue network = 1;
	// address is the ip address to send syslog messages to
	google.protobuf.StringValue address = 2;
	// port is server's port to connect to
	google.protobuf.Int32Value port = 3;
	// message_format defines the message format to use
	CueSyslogMessageFormat message_format = 4;
	// append_bom_header if true a BOM( Byte Order Mark ) will be appended to the outgoing message
	// BOM will tell the server that is receiving the messages, that the format is UTF8.
	google.protobuf.BoolValue append_bom_header = 5;
	// data is additional data that maybe required for constructing the message or sending it
	CueData data = 6;
}


// SNMPSettings contain the settings for sending alerts with SNMP
message SNMPSettings {
	// target is an ipv4 address to send messages to
	google.protobuf.StringValue target = 1;
	// port is the network port to target
	google.protobuf.Int32Value port = 2;
	// transport is the transport protocol to use ("udp" or "tcp"); if unset "udp" will be used
	google.protobuf.StringValue transport = 3;
	// version is the SNMP version, v1, v2c and v3 are supported and can be set
	// with 1, 2 and 3 respectively
	google.protobuf.Int32Value version = 4;
	// auth is optional authentication settings
	SNMPAuth auth = 5;
}


// SNMPAuth contain authentication information for SNMP
message SNMPAuth {
	// community is the community string used for authentication in SNMPv1 and v2c
	// required if version < 3
	google.protobuf.StringValue community = 1;

	// username the username for SNMPv3 auth
	google.protobuf.StringValue username = 2;
	// security_level the security level for SNMPv3
	SNMPSecurityLevel security_level = 3;

	// authentication_protocol is the protocol to use for authentication in SNMPv3
	// required for AUTH_NO_PRIV/AUTH_PRIV security levels
	SNMPAuthProtocol authentication_protocol = 4;
	// authentication_passphrase is the passphrase to use for authentication in SNMPv3
	// required for AUTH_NO_PRIV/AUTH_PRIV security levels
	google.protobuf.StringValue authentication_passphrase = 5;

	// privacy_protocol is the protocol to use for privacy in SNMPv3
	// required for AUTH_PRIV security level
	SNMPPrivProtocol privacy_protocol = 6;
	// privacy_passphrase is the passphrase to use for privacy in SNMPv3
	// required for AUTH_PRIV security level
	google.protobuf.StringValue privacy_passphrase = 7;
}

// SNMPSecurityLevel indicates what level of security should be used
enum SNMPSecurityLevel {
	// SNMP_SECURITY_LEVEL_UNSPECIFIED is the unspecified enum value
	SNMP_SECURITY_LEVEL_UNSPECIFIED = 0;
	// SNMP_SECURITY_LEVEL_NO_AUTH_NO_PRIV use no security
	SNMP_SECURITY_LEVEL_NO_AUTH_NO_PRIV = 1;
	// SNMP_SECURITY_LEVEL_AUTH_NO_PRIV use authentication without privacy
	SNMP_SECURITY_LEVEL_AUTH_NO_PRIV = 2;
	// SNMP_SECURITY_LEVEL_AUTH_PRIV use both authentication and privacy
	SNMP_SECURITY_LEVEL_AUTH_PRIV = 3;
}

// SNMPAuthProtocol represents the authentication protocol to be used
enum SNMPAuthProtocol {
	// SNMP_AUTH_PROTOCOL_UNSPECIFIED is the unspecified enum value
	SNMP_AUTH_PROTOCOL_UNSPECIFIED = 0;
	// SNMP_AUTH_PROTOCOL_MD5 use the md5 protocol
	SNMP_AUTH_PROTOCOL_MD5 = 1;
	// SNMP_AUTH_PROTOCOL_SHA use the sha protocol
	SNMP_AUTH_PROTOCOL_SHA = 2;
	// SNMP_AUTH_PROTOCOL_SHA_224 use the sha224 protocol
	SNMP_AUTH_PROTOCOL_SHA_224 = 3;
	// SNMP_AUTH_PROTOCOL_SHA_256 use the sha256 protocol
	SNMP_AUTH_PROTOCOL_SHA_256 = 4;
	// SNMP_AUTH_PROTOCOL_SHA_384 use the sha384 protocol
	SNMP_AUTH_PROTOCOL_SHA_384 = 5;
	// SNMP_AUTH_PROTOCOL_SHA_512 use the sha512 protocol
	SNMP_AUTH_PROTOCOL_SHA_512 = 6;
}

// SNMPPrivProtocol represents the privacy protocol to be used
enum SNMPPrivProtocol {
	// SNMP_PRIV_PROTOCOL_UNSPECIFIED is the unspecified enum value
	SNMP_PRIV_PROTOCOL_UNSPECIFIED = 0;
	// SNMP_PRIV_PROTOCOL_DES use the des protocol
	SNMP_PRIV_PROTOCOL_DES = 1;
	// SNMP_PRIV_PROTOCOL_AES use the aes protocol
	SNMP_PRIV_PROTOCOL_AES = 2;
	// SNMP_PRIV_PROTOCOL_AES_192 use the aes192 protocol
	SNMP_PRIV_PROTOCOL_AES_192 = 3;
	// SNMP_PRIV_PROTOCOL_AES_256 use the aes256 protocol
	SNMP_PRIV_PROTOCOL_AES_256 = 4;
	// SNMP_PRIV_PROTOCOL_AES_192C use the aes192c protocol
	SNMP_PRIV_PROTOCOL_AES_192C = 5;
	// SNMP_PRIV_PROTOCOL_AES_256C use the aes256c protocol
	SNMP_PRIV_PROTOCOL_AES_256C = 6;
}

// CueSNMPAuth is the authentication
message CueSNMPAuth {
	// community is the community string used for authentication in SNMPv1 and v2c
	// required if version < 3
	google.protobuf.StringValue community = 1;

	// username the username for SNMPv3 auth
	google.protobuf.StringValue username = 2;
	// security_level the security level for SNMPv3
	SNMPSecurityLevel security_level = 3;

	// authentication_protocol is the protocol to use for authentication in SNMPv3
	// required for AUTH_NO_PRIV/AUTH_PRIV security levels
	CueSNMPAuthProtocol authentication_protocol = 4;
	// authentication_passphrase is the passphrase to use for authentication in SNMPv3
	// required for AUTH_NO_PRIV/AUTH_PRIV security levels
	google.protobuf.StringValue authentication_passphrase = 5;

	// privacy_protocol is the protocol to use for privacy in SNMPv3
	// required for AUTH_PRIV security level
	CueSNMPPrivProtocol privacy_protocol = 6;
	// privacy_passphrase is the passphrase to use for privacy in SNMPv3
	// required for AUTH_PRIV security level
	google.protobuf.StringValue privacy_passphrase = 7;
}


// CueSNMPAuthProtocol represents the authentication protocol to be used
enum CueSNMPAuthProtocol {
	// CUE_SNMP_AUTH_PROTOCOL_UNSPECIFIED is the unspecified enum value
	CUE_SNMP_AUTH_PROTOCOL_UNSPECIFIED = 0;
	// CUE_SNMP_AUTH_PROTOCOL_MD5 use the md5 protocol
	CUE_SNMP_AUTH_PROTOCOL_MD5 = 1;
	// CUE_SNMP_AUTH_PROTOCOL_SHA use the sha protocol
	CUE_SNMP_AUTH_PROTOCOL_SHA = 2;
}

// CueSNMPPrivProtocol represents the privacy protocol to be used
enum CueSNMPPrivProtocol {
	// CUE_SNMP_PRIV_PROTOCOL_UNSPECIFIED is the unspecified enum value
	CUE_SNMP_PRIV_PROTOCOL_UNSPECIFIED = 0;
	// CUE_SNMP_PRIV_PROTOCOL_DES use the des protocol
	CUE_SNMP_PRIV_PROTOCOL_DES = 1;
	// CUE_SNMP_PRIV_PROTOCOL_AES use the aes protocol
	CUE_SNMP_PRIV_PROTOCOL_AES = 2;
}


// CueSNMPSettings contain the settings for sending cue alerts with SNMP
message CueSNMPSettings {
	// target is an ipv4 address to send messages to
	google.protobuf.StringValue target = 1;
	// port is the network port to target
	google.protobuf.Int32Value port = 2;
	// transport is the transport protocol to use ("udp" or "tcp"); if unset "udp" will be used
	google.protobuf.StringValue transport = 3;
	// version is the SNMP version, v2c and v3 are supported and can be set with 2 and 3 respectively
	google.protobuf.Int32Value version = 4;
	// auth is the optional authentication settings
	CueSNMPAuth auth = 5;
	// data is additional data that maybe required for constructing the message or sending it
	CueData data = 6;
}


// SendgridSettings contain the settings for sending emails via sendgrid
message SendgridSettings {
	// api_key is the api key to use
	google.protobuf.StringValue api_key = 1;
	// from is the email address to send from
	google.protobuf.StringValue from = 2;
}


// CueSendgridSettings contain the settings for sending cue alerts to sendgrid
message CueSendgridSettings {
	// api_key is the key used to connect to the sendgrid APIs
	google.protobuf.StringValue api_key = 1;
	// from is the sender's address in the email sent
	google.protobuf.StringValue from = 2;
}


// ZoomSettings contain the settings for sending alerts to zoom
message ZoomSettings {
	// url is the zoom incoming webhook URL to send messages to
	google.protobuf.StringValue url = 1;
	// verification_token is the verification token to authenticate with
	google.protobuf.StringValue verification_token = 2;
}


// InhibitionSettings allows certain event types to be suppressed while other event types are active
message InhibitionSettings {
	// values is a map where the keys are event type which when active will suppress any events with
	// event types in the related EventList
	map<string, EventList> values = 1;
}


// EventList is a list of event types
message EventList {
	// event_types contain the event types
	fmp.RepeatedString event_types = 1;
}


// Rules is a list of rules which dictates which events generate alerts for which broadcast groups
message Rules {
	// values contains the rules
	repeated Rule values = 1;
}


// Rule is a rule to send to a certain broadcast group
message Rule {
	// sends_to is the name of the broadcast group top send matching alerts to
	google.protobuf.StringValue sends_to = 1;
	// match_criteria is the criteria that an alert must match to be sent to the broadcast group
	Matches match_criteria = 2;
	// continue_checks if true, causes alerts matching this rule's criteria to continue
	// checking against other rules, allowing for additional matches. If false,
	// alerts matching this rule will not proceed with checking
	google.protobuf.BoolValue continue_checks = 3;
	// comment is a comment to include that will be displayed in the alert
	google.protobuf.StringValue comment = 4;
}

// Matches is a set of restrictions that must be satisfied for a rule to be matched
// Empty fields are ignored for matching purposes. Condition contents are
// OR'd and then AND'd with the other criteria
message Matches {
	// severities is a list of severities to filter on,
	// if an event does not have one of these severities, it will not match
	// Valid values are INFO, WARNING, ERROR and CRITICAL
	fmp.RepeatedString severities = 1;
	// devices is a list of device IDs to filter on,
	// if an event does not belong to one of these devices, it will not match
	fmp.RepeatedString devices = 2;
	// event_types is a list of event types to filter on,
	// if an event does not have one of these event types, it will not match
	fmp.RepeatedString event_types = 3;
	// device_tags is a string tag query that is used to match on the event's device tags
	google.protobuf.StringValue device_tags = 4;
	// intf_tags is a string tag query that is used to match on the event's interface tags
	google.protobuf.StringValue intf_tags = 5;
	// rule_ids is a list of rule IDs to filter on,
	// if an event does not have one of these rule IDs, it will not match
	fmp.RepeatedString rule_ids = 6;
}


// BroadcastGroups is a collection of named broadcast groups
message BroadcastGroups {
	// values is a map of user defined ids to broadcast groups. No restrictions to naming applies
	map<string, BroadcastGroup> values = 1;
}

// BroadcastGroup is a series of endpoints that alerts are sent to if routed there by a rule
// No restriction on the number of types of endpoints that can be defined
message BroadcastGroup {
	// email is a set of email endpoints to send alerts to as part of this group
	EmailEndpoints email = 1;
	// webhook is a set of webhook endpoints to send alerts to as part of this group
	WebhookEndpoints webhook = 2;
	// slack is a set of slack endpoints to send alerts to as part of this group
	SlackEndpoints slack = 3;
	// opsgenie is a set of opsgenie endpoints to send alerts to as part of this group
	OpsgenieEndpoints opsgenie = 4;
	// pushover is a set of pushover endpoints to send alerts to as part of this group
	PushoverEndpoints pushover = 5;
	// pagerduty is a set of pagerduty endpoints to send alerts to as part of this group
	PagerdutyEndpoints pagerduty = 6;
	// victorops is a set of victorops endpoints to send alerts to as part of this group
	VictorOpsEndpoints victorops = 7;
	// gchat is a set of google chat endpoints to send alerts to as part of this group
	GoogleChatEndpoints gchat = 8;
	// msteams is a set of MS teams endpoints to send alerts to as part of this group
	MsTeamsEndpoints msteams = 9;
	// sendgrid is a set of sendgrid endpoints to send alerts to as part of this group
	SendgridEndpoints sendgrid = 10;
	// syslog is a set of syslog endpoints to send alerts to as part of this group
	SyslogEndpoints syslog = 11;
	// snmp is a set of snmp endpoints to send alerts to as part of this group
	SNMPEndpoints snmp = 12;
	// cue_syslog is a set of cue syslog endpoints to send alerts to as part of this group
	CueSyslogEndpoints cue_syslog = 13;
	// cue_snmp is a set of cue snmp endpoints to send alerts to as part of this group
	CueSnmpEndpoints cue_snmp = 14;
	// cue_sendgrid is a set of cue sendgrid endpoints to send alerts to as part of this group
	CueSendgridEndpoints cue_sendgrid = 15;
	// zoom is a set of zoom endpoints to send alerts to as part of this group
	ZoomEndpoints zoom = 16;
}


// EmailEndpoints is a set of email endpoints
message EmailEndpoints{
	// values are the elements of the set
	repeated EmailEndpoint values = 1;
}


// WebhookEndpoints is a set of webhook endpoints
message WebhookEndpoints {
	// values are the elements of the set
	repeated WebhookEndpoint values = 1;
}


// SlackEndpoints is a set of slack endpoints
message SlackEndpoints {
	// values are the elements of the set
	repeated SlackEndpoint values = 1;
}


// OpsgenieEndpoints is a set of opsgenie endpoints
message OpsgenieEndpoints {
	// values are the elements of the set
	repeated OpsgenieEndpoint values = 1;
}


// PushoverEndpoints is a set of pushover endpoints
message PushoverEndpoints {
	// values are the elements of the set
	repeated PushoverEndpoint values = 1;
}


// PagerdutyEndpoints is a set of pagerduty endpoints
message PagerdutyEndpoints {
	// values are the elements of the set
	repeated PagerdutyEndpoint values = 1;
}


// VictorOpsEndpoints is a set of victorOps endpoints
message VictorOpsEndpoints {
	// values are the elements of the set
	repeated VictorOpsEndpoint values = 1;
}


// GoogleChatEndpoints is a set of googleChat endpoints
message GoogleChatEndpoints {
	// values are the elements of the set
	repeated GoogleChatEndpoint values = 1;
}


// MsTeamsEndpoints is a set of ms teams endpoints
message MsTeamsEndpoints {
	// values are the elements of the set
	repeated MsTeamsEndpoint values = 1;
}


// SendgridEndpoints is a set of sendgrid endpoints
message SendgridEndpoints {
	// values are the elements of the set
	repeated SendgridEndpoint values = 1;
}


// CueSendgridEndpoints is a set of cue sendgrid endpoints
message CueSendgridEndpoints {
	// values are the elements of the set
	repeated CueSendgridEndpoint values = 1;
}


// SyslogEndpoints is a set of syslog endpoints
message SyslogEndpoints {
	// values are the elements of the set
	repeated SyslogEndpoint values = 1;
}


// CueSyslogEndpoints is a set of cue syslog endpoints
message CueSyslogEndpoints {
	// values are the elements of the set
	repeated CueSyslogEndpoint values =1;
}


// SNMPEndpoints is a set of SNMP endpoints
message SNMPEndpoints {
	// values are the elements of the set
	repeated SNMPEndpoint values = 1;
}


// CueSnmpEndpoints is a set of cue SNMP endpoints
message CueSnmpEndpoints {
	// values are the elements of the set
	repeated CueSNMPEndpoint values = 1;
}


// ZoomEndpoints is a set of zoom endpoints
message ZoomEndpoints {
	// values are the elements of the set
	repeated ZoomEndpoint values = 1;
}


// EmailEndpoint contains the required information for an alert to be sent to an email endpoint
message EmailEndpoint{
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// to address to send email to
	google.protobuf.StringValue to = 2;
	// Email does not have a http override
	// Email does not have a settings override
}


// WebhookEndpoint contains the required information for an alert to be sent to a webhook endpoint
message WebhookEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// url is the url
	google.protobuf.StringValue url = 2;
	// http_override is the override of the global http settings
	HttpSettings http_override = 3;
	// simple_output is a boolean flag to control the JSON structure of the webhook body.
	// When false the output mimics the old alertmanager format.
	// When true the output is a simple array of json objects which each represent an event.
	google.protobuf.BoolValue simple_output = 4;
	// single_alert is a boolean flag that will cause an individual webhook message to be sent per
	// alert when true.
	google.protobuf.BoolValue single_alert = 5;
	// Webhook does not have a settings override
}


// SlackEndpoint contains the required information for an alert to be sent to a slack endpoint
message SlackEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// http_override is the override of the global http settings
	HttpSettings http_override = 2;
	// settings_override is the override for the slack global endpoint settings
	SlackSettings settings_override = 3;
}


// OpsgenieEndpoint contains the required information for an alert to be sent to an opsgenie endpoint
message OpsgenieEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// http_override is the override of the global http settings
	HttpSettings http_override = 2;
	// settings_override is the override for the opsgenie global endpoint settings
	OpsgenieSettings settings_override = 3;
}


// PushoverEndpoint contains the required information for an alert to be sent to a pushover endpoint
message PushoverEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// token is the user's registered application's API token, see https://pushover.net/apps
	google.protobuf.StringValue token = 2;
	// user_key is the user's user key
	google.protobuf.StringValue user_key = 3;
	// http_override is the override of the global http settings
	HttpSettings http_override = 4;
	// Pushover does not have a settings override
}


// PagerdutyEndpoint contains the required information for an alert to be sent to a pagerduty endpoint
message PagerdutyEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// routing_key is the routing key for sending pagerduty alerts
	google.protobuf.StringValue routing_key = 2;
	// http_override is the override of the global http settings
	HttpSettings http_override = 3;
	// settings_override is the override for the pagerduty global endpoint settings
	PagerdutySettings settings_override = 4;
}


// VictorOpsEndpoint contains the required information for an alert to be sent to a victorOps endpoint
message VictorOpsEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// routing_key is the PagerDuty integration key
	google.protobuf.StringValue routing_key = 2;
	// http_override is the override of the global http settings
	HttpSettings http_override = 3;
	// settings_override is the override for the victorops global endpoint settings
	VictoropsSettings settings_override = 4;
}


// GoogleChatEndpoint contains the required information for an alert to be sent to a google chat endpoint
message GoogleChatEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// http_override is the override of the global http settings
	HttpSettings http_override = 2;
	// settings_override is the override for the google chat global endpoint settings
	GoogleChatSettings settings_override = 3;
}


// MsTeamsEndpoint contains the required information for an alert to be sent to an ms teams endpoint
message MsTeamsEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// http_override is the override of the global http settings
	HttpSettings http_override = 2;
	// settings_override is the override for the microsoft teams global endpoint settings
	MsTeamsSettings settings_override = 3;
}


// SendgridEndpoint contains the required information for an alert to be sent to a sendgrid endpoint
message SendgridEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// to address to send email to
	google.protobuf.StringValue to = 2;
	// http_override is the override of the global http settings
	HttpSettings http_override = 3;
}


// CueSendgridEndpoint contains the required information for an alert to be sent to a cue sendgrid endpoint
message CueSendgridEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// to address to send email to
	google.protobuf.StringValue to = 2;
	// http_override is the override of the global http settings
	// This overrides the value used in Settings message in the global alert config
	HttpSettings http_override = 3;
}


// SyslogEndpoint contains the required information for an alert to be sent to a syslog endpoint
message SyslogEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// settings_override is the override for the microsoft teams global endpoint settings
	SyslogSettings settings_override = 2;
}


// CueSyslogEndpoint contains the required information for an alert to be sent to a cue syslog endpoint
message CueSyslogEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// settings_override is the override for the cue syslog global endpoint settings
	CueSyslogSettings settings_override = 2;
}


// SNMPEndpoint contains the required information for an alert to be sent to an SNMP endpoint
message SNMPEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// settings_override is the override for the microsoft teams global endpoint settings
	SNMPSettings settings_override = 2;
}


// CueSNMPEndpoint contains the required information for an alert to be sent to a cue SNMP endpoint
message CueSNMPEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// settings_override is the override for the cue snmp global endpoint settings
	CueSNMPSettings settings_override = 2;
}


// ZoomEndpoint contains the required information for an alert to be sent to a zoom endpoint
message ZoomEndpoint {
	// send_resolved send alerts when events are resolved along with when they are triggered
	google.protobuf.BoolValue send_resolved = 1;
	// http_override is the override of the global http settings
	HttpSettings http_override = 2;
	// settings_override is the override for the zoom global endpoint settings
	ZoomSettings settings_override = 3;
}

// TemplateType describes the types of Templates that are usable
enum TemplateType {
	// TEMPLATE_TYPE_UNSPECIFIED is the unspecified enum value
	TEMPLATE_TYPE_UNSPECIFIED = 0;
	// TEMPLATE_TYPE_EMAIL_HTML is the key of the html template for sent emails
	TEMPLATE_TYPE_EMAIL_HTML = 1;
	// TEMPLATE_TYPE_EMAIL_TEXT is the key of the text template for sent emails
	TEMPLATE_TYPE_EMAIL_TEXT = 2;
	// TEMPLATE_TYPE_SLACK_MESSAGE is the key of the message template for sent slack messages
	TEMPLATE_TYPE_SLACK_MESSAGE = 3;
	// TEMPLATE_TYPE_PUSHOVER_MESSAGE is the key of the message template for sent pushover messages
	TEMPLATE_TYPE_PUSHOVER_MESSAGE = 4;
	// TEMPLATE_TYPE_PAGERDUTY_SUMMARY is the key of the summary template for sent pagerduty messages
	TEMPLATE_TYPE_PAGERDUTY_SUMMARY = 5;
	// TEMPLATE_TYPE_VICTOROPS_DISPLAY_NAME is the key of the display name template for sent victorops
	// messages
	TEMPLATE_TYPE_VICTOROPS_DISPLAY_NAME = 6;
	// TEMPLATE_TYPE_VICTOROPS_STATE_MESSAGE is the key of the state message template for sent
	// victorops messages
	TEMPLATE_TYPE_VICTOROPS_STATE_MESSAGE = 7;
	// TEMPLATE_TYPE_GOOGLE_CHAT_MESSAGE is the key of the message template for sent Google chat
	// messages
	TEMPLATE_TYPE_GOOGLE_CHAT_MESSAGE = 8;
	// TEMPLATE_TYPE_MICROSOFT_TEAMS_MESSAGE is the key of the message template for sent Microsoft
	// teams messages
	TEMPLATE_TYPE_MICROSOFT_TEAMS_MESSAGE = 9;
	// TEMPLATE_TYPE_EMAIL_SUBJECT is the key of the subject line template of a sent email
	TEMPLATE_TYPE_EMAIL_SUBJECT = 10;
	// TEMPLATE_TYPE_SYSLOG_MESSAGE is the key of the message template for a syslog message part
	TEMPLATE_TYPE_SYSLOG_MESSAGE = 11;
	// TEMPLATE_TYPE_OPSGENIE_MESSAGE is the key of the message template for a opsgenie alert
	TEMPLATE_TYPE_OPSGENIE_MESSAGE = 12;
	// TEMPLATE_TYPE_ZOOM_MESSAGE is the key of the message template for sent Zoom messages
	TEMPLATE_TYPE_ZOOM_MESSAGE = 13;
}

// TemplateKey is used to identify templates for event notifications
message TemplateKey {
	option (fmp.model_key) = true;
	// template_type is the enum value to match with the template
	TemplateType template_type = 1;
}


// TemplateConfig represents a template configuration
message TemplateConfig {
	option (fmp.model) = "rw";
	option (fmp.no_default_filter) = true;

	// key identifies which template the configuration is for
	TemplateKey key = 1;
	// template is the string template value to be used
	// Templates need to be compatible with their respective parsers
	// Message templates are read and parsed by https://golang.org/pkg/text/template/
	// Html templates are read and parsed by https://golang.org/pkg/html/template/
	// Templates must output valid JSON for certain templates
	// Templates must not fail for any valid input
	google.protobuf.StringValue template = 2;
}
