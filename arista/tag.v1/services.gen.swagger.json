{
  "swagger": "2.0",
  "info": {
    "title": "arista.tag.v1 Resources",
    "version": "CV_RESOURCE_VER_DEV",
    "license": {
      "name": "Apache License 2.0",
      "url": "https://github.com/aristanetworks/cloudvision-apis/blob/trunk/COPYING"
    }
  },
  "tags": [
    {
      "name": "DeviceTagService"
    },
    {
      "name": "DeviceTagAssignmentConfigService"
    },
    {
      "name": "DeviceTagConfigService"
    },
    {
      "name": "InterfaceTagService"
    },
    {
      "name": "InterfaceTagAssignmentConfigService"
    },
    {
      "name": "InterfaceTagConfigService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/resources/tag/v1/DeviceTag": {
      "get": {
        "operationId": "DeviceTagService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTag/all": {
      "get": {
        "operationId": "DeviceTagService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagService"
        ]
      },
      "post": {
        "operationId": "DeviceTagService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagStreamRequest"
            }
          }
        ],
        "tags": [
          "DeviceTagService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTag/watch": {
      "get": {
        "operationId": "DeviceTagService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagService"
        ]
      },
      "post": {
        "operationId": "DeviceTagService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagStreamRequest"
            }
          }
        ],
        "tags": [
          "DeviceTagService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTagAssignmentConfig": {
      "get": {
        "operationId": "DeviceTagAssignmentConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.deviceId",
            "description": "DeviceId is the ID of the device.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      },
      "delete": {
        "operationId": "DeviceTagAssignmentConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.deviceId",
            "description": "DeviceId is the ID of the device.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      },
      "post": {
        "operationId": "DeviceTagAssignmentConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "DeviceTagAssignmentConfig carries the value to set into the datastore.\nSee the documentation on the DeviceTagAssignmentConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfig"
            }
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTagAssignmentConfig/all": {
      "get": {
        "operationId": "DeviceTagAssignmentConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      },
      "delete": {
        "operationId": "DeviceTagAssignmentConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagAssignmentConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      },
      "post": {
        "operationId": "DeviceTagAssignmentConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTagAssignmentConfig/watch": {
      "get": {
        "operationId": "DeviceTagAssignmentConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      },
      "post": {
        "operationId": "DeviceTagAssignmentConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "DeviceTagAssignmentConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTagConfig": {
      "get": {
        "operationId": "DeviceTagConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      },
      "delete": {
        "operationId": "DeviceTagConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      },
      "post": {
        "operationId": "DeviceTagConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "DeviceTagConfig carries the value to set into the datastore.\nSee the documentation on the DeviceTagConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagConfig"
            }
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTagConfig/all": {
      "get": {
        "operationId": "DeviceTagConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      },
      "delete": {
        "operationId": "DeviceTagConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "DeviceTagConfigService"
        ]
      },
      "post": {
        "operationId": "DeviceTagConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/DeviceTagConfig/watch": {
      "get": {
        "operationId": "DeviceTagConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      },
      "post": {
        "operationId": "DeviceTagConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.DeviceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.DeviceTagConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "DeviceTagConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTag": {
      "get": {
        "operationId": "InterfaceTagService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTag/all": {
      "get": {
        "operationId": "InterfaceTagService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagStreamRequest"
            }
          }
        ],
        "tags": [
          "InterfaceTagService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTag/watch": {
      "get": {
        "operationId": "InterfaceTagService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagStreamRequest"
            }
          }
        ],
        "tags": [
          "InterfaceTagService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTagAssignmentConfig": {
      "get": {
        "operationId": "InterfaceTagAssignmentConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.deviceId",
            "description": "DeviceId is the ID of the interface's device.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.interfaceId",
            "description": "InterfaceId is the ID of the interface.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      },
      "delete": {
        "operationId": "InterfaceTagAssignmentConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.deviceId",
            "description": "DeviceId is the ID of the interface's device.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.interfaceId",
            "description": "InterfaceId is the ID of the interface.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagAssignmentConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "InterfaceTagAssignmentConfig carries the value to set into the datastore.\nSee the documentation on the InterfaceTagAssignmentConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfig"
            }
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTagAssignmentConfig/all": {
      "get": {
        "operationId": "InterfaceTagAssignmentConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      },
      "delete": {
        "operationId": "InterfaceTagAssignmentConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagAssignmentConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagAssignmentConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTagAssignmentConfig/watch": {
      "get": {
        "operationId": "InterfaceTagAssignmentConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagAssignmentConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "InterfaceTagAssignmentConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTagConfig": {
      "get": {
        "operationId": "InterfaceTagConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      },
      "delete": {
        "operationId": "InterfaceTagConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.label",
            "description": "Label is the label of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "key.value",
            "description": "Value is the value of the tag.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "InterfaceTagConfig carries the value to set into the datastore.\nSee the documentation on the InterfaceTagConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfig"
            }
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTagConfig/all": {
      "get": {
        "operationId": "InterfaceTagConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      },
      "delete": {
        "operationId": "InterfaceTagConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "InterfaceTagConfigService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      }
    },
    "/api/resources/tag/v1/InterfaceTagConfig/watch": {
      "get": {
        "operationId": "InterfaceTagConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      },
      "post": {
        "operationId": "InterfaceTagConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.tag.v1.InterfaceTagConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "InterfaceTagConfigService"
        ]
      }
    }
  },
  "definitions": {
    "arista.subscriptions.Operation": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INITIAL",
        "INITIAL_SYNC_COMPLETE",
        "UPDATED",
        "DELETED"
      ],
      "default": "UNSPECIFIED",
      "description": " - INITIAL: INITIAL indicates the associated notification is that of the\ncurrent state and a fully-specified Resource is provided.\n - INITIAL_SYNC_COMPLETE: INITIAL_SYNC_COMPLETE indicates all existing-state has been\nstreamed to the client. This status will be sent in an\notherwise-empty message and no subsequent INITIAL messages\nshould be expected.\n - UPDATED: UPDATED indicates the associated notification carries\nmodification to the last-streamed state. This indicates\nthe contained Resource may be a partial diff, though, it\nmay contain a fully-specified Resource.\n - DELETED: DETLETED indicates the associated notification carries\na deletion. The Resource's key will always be set in this case,\nbut no other fields should be expected."
    },
    "arista.tag.v1.CreatorType": {
      "type": "string",
      "enum": [
        "CREATOR_TYPE_UNSPECIFIED",
        "CREATOR_TYPE_SYSTEM",
        "CREATOR_TYPE_USER"
      ],
      "default": "CREATOR_TYPE_UNSPECIFIED",
      "description": "CreatorType specifies an entity that creates something.\n\n - CREATOR_TYPE_SYSTEM: CREATOR_TYPE_SYSTEM is the type for something created by the system.\n - CREATOR_TYPE_USER: CREATOR_TYPE_USER is the type for something created by a user."
    },
    "arista.tag.v1.DeviceTag": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "Key uniquely identifies the device tag."
        },
        "creatorType": {
          "$ref": "#/definitions/arista.tag.v1.CreatorType",
          "description": "CreatorType is the creator type of the tag."
        }
      },
      "description": "DeviceTag is a label-value pair that may or may not\nbe assigned to a device."
    },
    "arista.tag.v1.DeviceTagAssignmentConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentKey",
          "description": "Key uniquely identifies the device tag assignment."
        }
      },
      "description": "DeviceTagAssignmentConfig is the assignment of a device tag to a\nspecific device."
    },
    "arista.tag.v1.DeviceTagAssignmentConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentKey",
          "description": "This is the key of the DeviceTagAssignmentConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.tag.v1.DeviceTagAssignmentConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentKey",
          "description": "Key echoes back the key of the deleted DeviceTagAssignmentConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.DeviceTagAssignmentConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nDeviceTagAssignmentConfig instance in this response."
        }
      }
    },
    "arista.tag.v1.DeviceTagAssignmentConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfig",
          "description": "Value carries all the values given in the DeviceTagAssignmentConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.DeviceTagAssignmentConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.tag.v1.DeviceTagAssignmentConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagAssignmentConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this DeviceTagAssignmentConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the DeviceTagAssignmentConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.tag.v1.DeviceTagAssignmentKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label is the label of the tag."
        },
        "value": {
          "type": "string",
          "description": "Value is the value of the tag."
        },
        "deviceId": {
          "type": "string",
          "description": "DeviceId is the ID of the device."
        }
      },
      "description": "DeviceTagAssignmentKey uniquely identifies a device tag\nassignment.",
      "required": [
        "label",
        "value",
        "deviceId"
      ]
    },
    "arista.tag.v1.DeviceTagConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "Key uniquely identifies the device tag."
        }
      },
      "description": "DeviceTagConfig is a label-value pair that may or may not\nbe assigned to a device."
    },
    "arista.tag.v1.DeviceTagConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "This is the key of the DeviceTagConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.tag.v1.DeviceTagConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "Key echoes back the key of the deleted DeviceTagConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.DeviceTagConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nDeviceTagConfig instance in this response."
        }
      }
    },
    "arista.tag.v1.DeviceTagConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagConfig",
          "description": "Value carries all the values given in the DeviceTagConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.DeviceTagConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arista.tag.v1.DeviceTagConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.tag.v1.DeviceTagConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTagConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this DeviceTagConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the DeviceTagConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.tag.v1.DeviceTagResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTag",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nDeviceTag instance in this response."
        }
      }
    },
    "arista.tag.v1.DeviceTagStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arista.tag.v1.DeviceTag"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.tag.v1.DeviceTagStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.DeviceTag",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this DeviceTag's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the DeviceTag value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.tag.v1.InterfaceTag": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "Key uniquely identifies the interface tag."
        },
        "creatorType": {
          "$ref": "#/definitions/arista.tag.v1.CreatorType",
          "description": "CreatorType is the creator type of the tag."
        }
      },
      "description": "InterfaceTag is a label-value pair that may or may\nnot be assigned to an interface."
    },
    "arista.tag.v1.InterfaceTagAssignmentConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentKey",
          "description": "Key uniquely identifies the interface tag assignment."
        }
      },
      "description": "InterfaceTagAssignmentConfig is the assignment of an interface tag\nto a specific interface."
    },
    "arista.tag.v1.InterfaceTagAssignmentConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentKey",
          "description": "This is the key of the InterfaceTagAssignmentConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.tag.v1.InterfaceTagAssignmentConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentKey",
          "description": "Key echoes back the key of the deleted InterfaceTagAssignmentConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.InterfaceTagAssignmentConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nInterfaceTagAssignmentConfig instance in this response."
        }
      }
    },
    "arista.tag.v1.InterfaceTagAssignmentConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfig",
          "description": "Value carries all the values given in the InterfaceTagAssignmentConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.InterfaceTagAssignmentConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.tag.v1.InterfaceTagAssignmentConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagAssignmentConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this InterfaceTagAssignmentConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the InterfaceTagAssignmentConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.tag.v1.InterfaceTagAssignmentKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label is the label of the tag."
        },
        "value": {
          "type": "string",
          "description": "Value is the value of the tag."
        },
        "deviceId": {
          "type": "string",
          "description": "DeviceId is the ID of the interface's device."
        },
        "interfaceId": {
          "type": "string",
          "description": "InterfaceId is the ID of the interface."
        }
      },
      "description": "InterfaceTagAssignmentKey uniquely identifies an interface\ntag assignment.",
      "required": [
        "label",
        "value",
        "deviceId",
        "interfaceId"
      ]
    },
    "arista.tag.v1.InterfaceTagConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "Key uniquely identifies the interface tag."
        }
      },
      "description": "InterfaceTagConfig is a label-value pair that may or may\nnot be assigned to an interface."
    },
    "arista.tag.v1.InterfaceTagConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "This is the key of the InterfaceTagConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.tag.v1.InterfaceTagConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.tag.v1.TagKey",
          "description": "Key echoes back the key of the deleted InterfaceTagConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.InterfaceTagConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nInterfaceTagConfig instance in this response."
        }
      }
    },
    "arista.tag.v1.InterfaceTagConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfig",
          "description": "Value carries all the values given in the InterfaceTagConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.tag.v1.InterfaceTagConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.tag.v1.InterfaceTagConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTagConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this InterfaceTagConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the InterfaceTagConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.tag.v1.InterfaceTagResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTag",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nInterfaceTag instance in this response."
        }
      }
    },
    "arista.tag.v1.InterfaceTagStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/arista.tag.v1.InterfaceTag"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.tag.v1.InterfaceTagStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.tag.v1.InterfaceTag",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this InterfaceTag's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the InterfaceTag value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.tag.v1.TagKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label is the label of the tag."
        },
        "value": {
          "type": "string",
          "description": "Value is the value of the tag."
        }
      },
      "description": "TagKey uniquely identifies a tag for a network element.",
      "required": [
        "label",
        "value"
      ]
    },
    "arista.time.TimeBounds": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "fmp.DeleteError": {
      "type": "string",
      "enum": [
        "DELETE_ERROR_UNSPECIFIED",
        "DELETE_ERROR_UNAUTHORIZED",
        "DELETE_ERROR_INTERNAL",
        "DELETE_ERROR_UNDELETABLE_KEY"
      ],
      "default": "DELETE_ERROR_UNSPECIFIED",
      "description": "DeleteError defines the set of delete error types.\n\n - DELETE_ERROR_UNSPECIFIED: DELETE_ERROR_UNSPECIFIED indicates that the delete error\nis not specified.\n - DELETE_ERROR_UNAUTHORIZED: DELETE_ERROR_UNAUTHORIZED indicates that the user is not authorized\nto perform the specified delete.\n - DELETE_ERROR_INTERNAL: DELETE_ERROR_INTERNAL indicates that the server encountered an\nunrecoverable error on the specified delete.\n - DELETE_ERROR_UNDELETABLE_KEY: DELETE_ERROR_UNDELETABLE_KEY indicates that the specified error is\nnot allowed by the service."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiToken": {
      "type": "apiKey",
      "name": "access_token",
      "in": "header"
    }
  },
  "security": [
    {
      "apiToken": []
    }
  ],
  "externalDocs": {
    "description": "More on CloudVision Resource APIs",
    "url": "https://aristanetworks.github.io/cloudvision-apis"
  }
}
