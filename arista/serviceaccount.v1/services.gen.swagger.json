{
  "swagger": "2.0",
  "info": {
    "title": "arista.serviceaccount.v1 Resources",
    "version": "CV_RESOURCE_VER_DEV",
    "license": {
      "name": "Apache License 2.0",
      "url": "https://github.com/aristanetworks/cloudvision-apis/blob/trunk/COPYING"
    }
  },
  "tags": [
    {
      "name": "AccountService"
    },
    {
      "name": "AccountConfigService"
    },
    {
      "name": "TokenService"
    },
    {
      "name": "TokenConfigService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/resources/serviceaccount/v1/Account": {
      "get": {
        "operationId": "AccountService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.name",
            "description": "name is the unique identifier of the service account.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Account/all": {
      "get": {
        "operationId": "AccountService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "operationId": "AccountService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Account/getsome": {
      "post": {
        "operationId": "AccountService_GetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountSomeRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Account/metadata": {
      "get": {
        "operationId": "AccountService_GetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "operationId": "AccountService_GetMeta2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Account/watch": {
      "get": {
        "operationId": "AccountService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "operationId": "AccountService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Account/watchmetadata": {
      "get": {
        "operationId": "AccountService_SubscribeMeta",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountService"
        ]
      },
      "post": {
        "operationId": "AccountService_SubscribeMeta2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig": {
      "get": {
        "operationId": "AccountConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.name",
            "description": "name is the unique identifier of the service account.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      },
      "delete": {
        "operationId": "AccountConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.name",
            "description": "name is the unique identifier of the service account.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      },
      "post": {
        "operationId": "AccountConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "AccountConfig carries the value to set into the datastore.\nSee the documentation on the AccountConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/all": {
      "get": {
        "operationId": "AccountConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      },
      "delete": {
        "operationId": "AccountConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "AccountConfigService"
        ]
      },
      "post": {
        "operationId": "AccountConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/deletesome": {
      "post": {
        "operationId": "AccountConfigService_DeleteSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigDeleteSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigDeleteSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigDeleteSomeRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/getsome": {
      "post": {
        "operationId": "AccountConfigService_GetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigSomeRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/metadata": {
      "get": {
        "operationId": "AccountConfigService_GetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      },
      "post": {
        "operationId": "AccountConfigService_GetMeta2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/some": {
      "post": {
        "operationId": "AccountConfigService_SetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigSetSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigSetSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigSetSomeRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/watch": {
      "get": {
        "operationId": "AccountConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      },
      "post": {
        "operationId": "AccountConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.AccountConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/AccountConfig/watchmetadata": {
      "get": {
        "operationId": "AccountConfigService_SubscribeMeta",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      },
      "post": {
        "operationId": "AccountConfigService_SubscribeMeta2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "AccountConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Token": {
      "get": {
        "operationId": "TokenService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.id",
            "description": "id is the unique identifier of the service account token.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Token/all": {
      "get": {
        "operationId": "TokenService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenService"
        ]
      },
      "post": {
        "operationId": "TokenService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Token/getsome": {
      "post": {
        "operationId": "TokenService_GetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenSomeRequest"
            }
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Token/metadata": {
      "get": {
        "operationId": "TokenService_GetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenService"
        ]
      },
      "post": {
        "operationId": "TokenService_GetMeta2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Token/watch": {
      "get": {
        "operationId": "TokenService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenService"
        ]
      },
      "post": {
        "operationId": "TokenService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/Token/watchmetadata": {
      "get": {
        "operationId": "TokenService_SubscribeMeta",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenService"
        ]
      },
      "post": {
        "operationId": "TokenService_SubscribeMeta2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig": {
      "get": {
        "operationId": "TokenConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.id",
            "description": "id is the unique identifier of the service account token.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      },
      "delete": {
        "operationId": "TokenConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.id",
            "description": "id is the unique identifier of the service account token.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      },
      "post": {
        "operationId": "TokenConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "TokenConfig carries the value to set into the datastore.\nSee the documentation on the TokenConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/all": {
      "get": {
        "operationId": "TokenConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      },
      "delete": {
        "operationId": "TokenConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "TokenConfigService"
        ]
      },
      "post": {
        "operationId": "TokenConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/deletesome": {
      "post": {
        "operationId": "TokenConfigService_DeleteSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigDeleteSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigDeleteSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigDeleteSomeRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/getsome": {
      "post": {
        "operationId": "TokenConfigService_GetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigSomeRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/metadata": {
      "get": {
        "operationId": "TokenConfigService_GetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      },
      "post": {
        "operationId": "TokenConfigService_GetMeta2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/some": {
      "post": {
        "operationId": "TokenConfigService_SetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigSetSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigSetSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigSetSomeRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/watch": {
      "get": {
        "operationId": "TokenConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      },
      "post": {
        "operationId": "TokenConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.TokenConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    },
    "/api/resources/serviceaccount/v1/TokenConfig/watchmetadata": {
      "get": {
        "operationId": "TokenConfigService_SubscribeMeta",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      },
      "post": {
        "operationId": "TokenConfigService_SubscribeMeta2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.serviceaccount.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.serviceaccount.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "TokenConfigService"
        ]
      }
    }
  },
  "definitions": {
    "arista.serviceaccount.v1.Account": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey",
          "description": "key uniquely identifies the service account."
        },
        "status": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountStatus",
          "description": "status determines whether the service account is enabled or disabled."
        },
        "description": {
          "type": "string",
          "description": "description is a comment describing the service account."
        },
        "groups": {
          "$ref": "#/definitions/fmp.RepeatedString",
          "description": "groups is a list of roles that the service account inherits permissions from."
        },
        "createdBy": {
          "type": "string",
          "description": "created_by is the name of the entity that created the service account."
        },
        "lastAccess": {
          "type": "string",
          "format": "date-time",
          "description": "last_access is the time when the service account was last fetched."
        }
      },
      "description": "Account describes a service account."
    },
    "arista.serviceaccount.v1.AccountConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey",
          "description": "key contains the name of the service account."
        },
        "status": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountStatus",
          "description": "status determines if the service account is enabled or disabled. New service accounts are\nenabled by default."
        },
        "description": {
          "type": "string",
          "description": "description is a comment describing the service account."
        },
        "groups": {
          "$ref": "#/definitions/fmp.RepeatedString",
          "description": "groups is a list of roles that the service account inherits permissions from."
        }
      },
      "description": "AccountConfig holds the configuration for a service account."
    },
    "arista.serviceaccount.v1.AccountConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error.\nA DeleteAllResponse is only sent when there is an error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey",
          "description": "This is the key of the AccountConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey",
          "description": "Key echoes back the key of the deleted AccountConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigDeleteSomeRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey"
          },
          "title": "key contains a list of AccountConfig keys to delete"
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigDeleteSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey"
        },
        "error": {
          "type": "string"
        }
      },
      "description": "AccountConfigDeleteSomeResponse is only sent when there is an error."
    },
    "arista.serviceaccount.v1.AccountConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nAccountConfig instance in this response."
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig",
          "description": "Value carries all the values given in the AccountConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigSetSomeRequest": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig"
          },
          "description": "value contains a list of AccountConfig values to write.\nIt is possible to provide more values than can fit within either:\n    - the maxiumum send size of the client\n    - the maximum receive size of the server\nIf this error occurs you must reduce the number of values sent.\nSee gRPC \"maximum message size\" documentation for more information."
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigSetSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigSomeRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request."
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigSomeResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "error": {
          "type": "string",
          "description": "Error is an optional field.\nIt should be filled when there is an error in the GetSome process."
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nFor GetAll, the fields start and end can be used as follows:\n\n  * end: Returns the state of each AccountConfig at end.\n    * Each AccountConfig response is fully-specified (all fields set).\n  * start: Returns the state of each AccountConfig at start, followed by updates until now.\n    * Each AccountConfig response at start is fully-specified, but updates may be partial.\n  * start and end: Returns the state of each AccountConfig at start, followed by updates\n    until end.\n    * Each AccountConfig response at start is fully-specified, but updates until end may\n      be partial.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.serviceaccount.v1.AccountConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.AccountConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this AccountConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the AccountConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.serviceaccount.v1.AccountKey": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "name is the unique identifier of the service account."
        }
      },
      "description": "AccountKey contains the name of the service account.",
      "required": [
        "name"
      ]
    },
    "arista.serviceaccount.v1.AccountResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.Account",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nAccount instance in this response."
        }
      }
    },
    "arista.serviceaccount.v1.AccountSomeRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.AccountKey"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request."
        }
      }
    },
    "arista.serviceaccount.v1.AccountSomeResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.Account",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "error": {
          "type": "string",
          "description": "Error is an optional field.\nIt should be filled when there is an error in the GetSome process."
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "arista.serviceaccount.v1.AccountStatus": {
      "type": "string",
      "enum": [
        "ACCOUNT_STATUS_UNSPECIFIED",
        "ACCOUNT_STATUS_ENABLED",
        "ACCOUNT_STATUS_DISABLED"
      ],
      "default": "ACCOUNT_STATUS_UNSPECIFIED",
      "description": "AccountStatus determines whether an service account is enabled or disabled.\n\n - ACCOUNT_STATUS_UNSPECIFIED: ACCOUNT_STATUS_UNSPECIFIED indicates the service account status is unspecified.\n - ACCOUNT_STATUS_ENABLED: ACCOUNT_STATUS_ENABLED indicates the service account is enabled.\n - ACCOUNT_STATUS_DISABLED: ACCOUNT_STATUS_DISABLED indicates the service account is disabled."
    },
    "arista.serviceaccount.v1.AccountStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.Account"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nFor GetAll, the fields start and end can be used as follows:\n\n  * end: Returns the state of each Account at end.\n    * Each Account response is fully-specified (all fields set).\n  * start: Returns the state of each Account at start, followed by updates until now.\n    * Each Account response at start is fully-specified, but updates may be partial.\n  * start and end: Returns the state of each Account at start, followed by updates\n    until end.\n    * Each Account response at start is fully-specified, but updates until end may\n      be partial.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.serviceaccount.v1.AccountStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.Account",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this Account's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the Account value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.serviceaccount.v1.MetaResponse": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of the last item included in the metadata calculation."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Count is the number of items present under the conditions of the request."
        }
      }
    },
    "arista.serviceaccount.v1.Token": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey",
          "description": "key uniquely identifies the service account token."
        },
        "user": {
          "type": "string",
          "description": "user is the name of the service account that the token is generated for."
        },
        "description": {
          "type": "string",
          "description": "description is a short name or comment used to identify the service account token."
        },
        "validUntil": {
          "type": "string",
          "format": "date-time",
          "description": "valid_until is the time that the service account token will be valid until."
        },
        "createdBy": {
          "type": "string",
          "description": "created_by is the name of the entity that created the service account token."
        },
        "lastUsed": {
          "type": "string",
          "format": "date-time",
          "description": "last_used is the time when the service account token was last used to authenticate."
        }
      },
      "description": "Token describes a service account token."
    },
    "arista.serviceaccount.v1.TokenConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey",
          "description": "key uniquely identifies the service account token."
        },
        "user": {
          "type": "string",
          "description": "user is the name of the service account that the token is generated for."
        },
        "description": {
          "type": "string",
          "description": "description is a short name or comment used to identify the service account token."
        },
        "validFor": {
          "type": "string",
          "description": "valid_for determines the duration that the service account token will be valid for."
        },
        "token": {
          "type": "string",
          "description": "token is the JWT token generated for a service account token.\nIt is only populated in Set response."
        }
      },
      "description": "TokenConfig holds the configuration for a service account token. The token is a signed JWT which\ncan be used as a credential for REST and WRPC endpoints."
    },
    "arista.serviceaccount.v1.TokenConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error.\nA DeleteAllResponse is only sent when there is an error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey",
          "description": "This is the key of the TokenConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey",
          "description": "Key echoes back the key of the deleted TokenConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigDeleteSomeRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey"
          },
          "title": "key contains a list of TokenConfig keys to delete"
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigDeleteSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey"
        },
        "error": {
          "type": "string"
        }
      },
      "description": "TokenConfigDeleteSomeResponse is only sent when there is an error."
    },
    "arista.serviceaccount.v1.TokenConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nTokenConfig instance in this response."
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig",
          "description": "Value carries all the values given in the TokenConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigSetSomeRequest": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig"
          },
          "description": "value contains a list of TokenConfig values to write.\nIt is possible to provide more values than can fit within either:\n    - the maxiumum send size of the client\n    - the maximum receive size of the server\nIf this error occurs you must reduce the number of values sent.\nSee gRPC \"maximum message size\" documentation for more information."
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigSetSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigSomeRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request."
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigSomeResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "error": {
          "type": "string",
          "description": "Error is an optional field.\nIt should be filled when there is an error in the GetSome process."
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nFor GetAll, the fields start and end can be used as follows:\n\n  * end: Returns the state of each TokenConfig at end.\n    * Each TokenConfig response is fully-specified (all fields set).\n  * start: Returns the state of each TokenConfig at start, followed by updates until now.\n    * Each TokenConfig response at start is fully-specified, but updates may be partial.\n  * start and end: Returns the state of each TokenConfig at start, followed by updates\n    until end.\n    * Each TokenConfig response at start is fully-specified, but updates until end may\n      be partial.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.serviceaccount.v1.TokenConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.TokenConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this TokenConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the TokenConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.serviceaccount.v1.TokenKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "id is the unique identifier of the service account token."
        }
      },
      "description": "TokenKey contains service account token ID.",
      "required": [
        "id"
      ]
    },
    "arista.serviceaccount.v1.TokenResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.Token",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nToken instance in this response."
        }
      }
    },
    "arista.serviceaccount.v1.TokenSomeRequest": {
      "type": "object",
      "properties": {
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.TokenKey"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request."
        }
      }
    },
    "arista.serviceaccount.v1.TokenSomeResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.Token",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "error": {
          "type": "string",
          "description": "Error is an optional field.\nIt should be filled when there is an error in the GetSome process."
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "arista.serviceaccount.v1.TokenStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.serviceaccount.v1.Token"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nFor GetAll, the fields start and end can be used as follows:\n\n  * end: Returns the state of each Token at end.\n    * Each Token response is fully-specified (all fields set).\n  * start: Returns the state of each Token at start, followed by updates until now.\n    * Each Token response at start is fully-specified, but updates may be partial.\n  * start and end: Returns the state of each Token at start, followed by updates\n    until end.\n    * Each Token response at start is fully-specified, but updates until end may\n      be partial.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.serviceaccount.v1.TokenStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.serviceaccount.v1.Token",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this Token's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the Token value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.subscriptions.Operation": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INITIAL",
        "INITIAL_SYNC_COMPLETE",
        "UPDATED",
        "DELETED"
      ],
      "default": "UNSPECIFIED",
      "description": " - INITIAL: INITIAL indicates the associated notification is that of the\ncurrent state and a fully-specified Resource is provided.\n - INITIAL_SYNC_COMPLETE: INITIAL_SYNC_COMPLETE indicates all existing-state has been\nstreamed to the client. This status will be sent in an\notherwise-empty message and no subsequent INITIAL messages\nshould be expected.\n - UPDATED: UPDATED indicates the associated notification carries\nmodification to the last-streamed state. This indicates\nthe contained Resource may be a partial diff, though, it\nmay contain a fully-specified Resource.\n - DELETED: DETLETED indicates the associated notification carries\na deletion. The Resource's key will always be set in this case,\nbut no other fields should be expected."
    },
    "arista.time.TimeBounds": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "fmp.DeleteError": {
      "type": "string",
      "enum": [
        "DELETE_ERROR_UNSPECIFIED",
        "DELETE_ERROR_UNAUTHORIZED",
        "DELETE_ERROR_INTERNAL",
        "DELETE_ERROR_UNDELETABLE_KEY"
      ],
      "default": "DELETE_ERROR_UNSPECIFIED",
      "description": "DeleteError defines the set of delete error types.\n\n - DELETE_ERROR_UNSPECIFIED: DELETE_ERROR_UNSPECIFIED indicates that the delete error\nis not specified.\n - DELETE_ERROR_UNAUTHORIZED: DELETE_ERROR_UNAUTHORIZED indicates that the user is not authorized\nto perform the specified delete.\n - DELETE_ERROR_INTERNAL: DELETE_ERROR_INTERNAL indicates that the server encountered an\nunrecoverable error on the specified delete.\n - DELETE_ERROR_UNDELETABLE_KEY: DELETE_ERROR_UNDELETABLE_KEY indicates that the specified error is\nnot allowed by the service."
    },
    "fmp.RepeatedString": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The repeated string values."
        }
      },
      "description": "Wrapper message for `repeated string`."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiToken": {
      "type": "apiKey",
      "name": "access_token",
      "in": "header"
    }
  },
  "security": [
    {
      "apiToken": []
    }
  ],
  "externalDocs": {
    "description": "More on CloudVision Resource APIs",
    "url": "https://aristanetworks.github.io/cloudvision-apis"
  }
}
