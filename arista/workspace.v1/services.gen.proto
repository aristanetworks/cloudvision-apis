// Copyright (c) 2020 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.
// Subject to Arista Networks, Inc.'s EULA.
// FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

//
// Code generated by boomtown. DO NOT EDIT.
//

syntax = "proto3";

package arista.workspace.v1;
option go_package = "arista/resources/arista/workspace.v1;workspace";

import "arista/workspace.v1/workspace.proto";
import "arista/time/time.proto";
import "arista/subscriptions/subscriptions.proto";
import "google/protobuf/timestamp.proto";

message WorkspaceRequest {
	// Key uniquely identifies a Workspace instance to retrieve.
	// This value must be populated.
	WorkspaceKey key = 1;

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	google.protobuf.Timestamp time = 2;
};

message WorkspaceResponse {
	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	Workspace value = 1;

	// Time carries the (UTC) timestamp of the last-modification of the
	// Workspace instance in this response.
	google.protobuf.Timestamp time = 2;
};

message WorkspaceStreamRequest {
	// PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
	// This requires all provided fields to be equal to the response.
	//
	// While transparent to users, this field also allows services to optimize internal
	// subscriptions if filter(s) are sufficiently specific.
	repeated Workspace partial_eq_filter = 1;

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// This field is not allowed in the Subscribe RPC.
	arista.time.TimeBounds time = 3;
};

message WorkspaceStreamResponse {
	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	Workspace value = 1;

	// Time holds the timestamp of this Workspace's last modification.
	google.protobuf.Timestamp time = 2;

	// Operation indicates how the Workspace value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	arista.subscriptions.Operation type = 3;
};

service WorkspaceService {
	rpc GetOne (WorkspaceRequest) returns (WorkspaceResponse);
	rpc GetAll (WorkspaceStreamRequest) returns (stream WorkspaceStreamResponse);
	rpc Subscribe (WorkspaceStreamRequest) returns (stream WorkspaceStreamResponse);
}

message WorkspaceBuildRequest {
	// Key uniquely identifies a WorkspaceBuild instance to retrieve.
	// This value must be populated.
	WorkspaceBuildKey key = 1;

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	google.protobuf.Timestamp time = 2;
};

message WorkspaceBuildResponse {
	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	WorkspaceBuild value = 1;

	// Time carries the (UTC) timestamp of the last-modification of the
	// WorkspaceBuild instance in this response.
	google.protobuf.Timestamp time = 2;
};

message WorkspaceBuildStreamRequest {
	// PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
	// This requires all provided fields to be equal to the response.
	//
	// While transparent to users, this field also allows services to optimize internal
	// subscriptions if filter(s) are sufficiently specific.
	repeated WorkspaceBuild partial_eq_filter = 1;

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// This field is not allowed in the Subscribe RPC.
	arista.time.TimeBounds time = 3;
};

message WorkspaceBuildStreamResponse {
	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	WorkspaceBuild value = 1;

	// Time holds the timestamp of this WorkspaceBuild's last modification.
	google.protobuf.Timestamp time = 2;

	// Operation indicates how the WorkspaceBuild value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	arista.subscriptions.Operation type = 3;
};

service WorkspaceBuildService {
	rpc GetOne (WorkspaceBuildRequest) returns (WorkspaceBuildResponse);
	rpc GetAll (WorkspaceBuildStreamRequest) returns (stream WorkspaceBuildStreamResponse);
	rpc Subscribe (WorkspaceBuildStreamRequest) returns (stream WorkspaceBuildStreamResponse);
}

message WorkspaceConfigRequest {
	// Key uniquely identifies a WorkspaceConfig instance to retrieve.
	// This value must be populated.
	WorkspaceKey key = 1;

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	google.protobuf.Timestamp time = 2;
};

message WorkspaceConfigResponse {
	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	WorkspaceConfig value = 1;

	// Time carries the (UTC) timestamp of the last-modification of the
	// WorkspaceConfig instance in this response.
	google.protobuf.Timestamp time = 2;
};

message WorkspaceConfigStreamRequest {
	// PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
	// This requires all provided fields to be equal to the response.
	//
	// While transparent to users, this field also allows services to optimize internal
	// subscriptions if filter(s) are sufficiently specific.
	repeated WorkspaceConfig partial_eq_filter = 1;

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// This field is not allowed in the Subscribe RPC.
	arista.time.TimeBounds time = 3;
};

message WorkspaceConfigStreamResponse {
	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	WorkspaceConfig value = 1;

	// Time holds the timestamp of this WorkspaceConfig's last modification.
	google.protobuf.Timestamp time = 2;

	// Operation indicates how the WorkspaceConfig value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	arista.subscriptions.Operation type = 3;
};

message WorkspaceConfigSetRequest {
	// WorkspaceConfig carries the value to set into the datastore.
	// See the documentation on the WorkspaceConfig struct for which fields are required.
	WorkspaceConfig value = 1;
};

message WorkspaceConfigSetResponse {
	// Value carries all the values given in the WorkspaceConfigSetRequest as well
	// as any server-generated values.
	WorkspaceConfig value = 1;

	// Time indicates the (UTC) timestamp at which the system recognizes the
	// creation. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==CreatedAt will include this instance.
	//
	google.protobuf.Timestamp time = 2;
};

message WorkspaceConfigDeleteRequest {
	// Key indicates which WorkspaceConfig instance to remove.
	// This field must always be set.
	WorkspaceKey key = 1;
};

message WorkspaceConfigDeleteResponse {
	// Key echoes back the key of the deleted WorkspaceConfig instance.
	WorkspaceKey key = 1;

	// Time indicates the (UTC) timestamp at which the system recognizes the
	// deletion. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==DeletedAt will not include this instance.
	//
	google.protobuf.Timestamp time = 2;
};

service WorkspaceConfigService {
	rpc GetOne (WorkspaceConfigRequest) returns (WorkspaceConfigResponse);
	rpc GetAll (WorkspaceConfigStreamRequest) returns (stream WorkspaceConfigStreamResponse);
	rpc Subscribe (WorkspaceConfigStreamRequest) returns (stream WorkspaceConfigStreamResponse);
	rpc Set (WorkspaceConfigSetRequest) returns (WorkspaceConfigSetResponse);
	rpc Delete (WorkspaceConfigDeleteRequest) returns (WorkspaceConfigDeleteResponse);
}
