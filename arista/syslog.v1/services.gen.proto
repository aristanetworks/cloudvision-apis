// Copyright (c) 2021 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.
// Subject to Arista Networks, Inc.'s EULA.
// FOR INTERNAL USE ONLY. NOT FOR DISTRIBUTION.

//
// Code generated by boomtown. DO NOT EDIT.
//

syntax = "proto3";

package arista.syslog.v1;
option go_package = "arista/resources/arista/syslog.v1;syslog";

import "arista/syslog.v1/syslog.proto";
import "arista/time/time.proto";
import "arista/subscriptions/subscriptions.proto";
import "google/protobuf/timestamp.proto";

message ExportRequest {
	// Key uniquely identifies a Export instance to retrieve.
	// This value must be populated.
	ExportKey key = 1;

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	google.protobuf.Timestamp time = 2;
};

message ExportResponse {
	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	Export value = 1;

	// Time carries the (UTC) timestamp of the last-modification of the
	// Export instance in this response.
	google.protobuf.Timestamp time = 2;
};

message ExportStreamRequest {
	// PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
	// This requires all provided fields to be equal to the response.
	//
	// While transparent to users, this field also allows services to optimize internal
	// subscriptions if filter(s) are sufficiently specific.
	repeated Export partial_eq_filter = 1;

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// This field is not allowed in the Subscribe RPC.
	arista.time.TimeBounds time = 3;
};

message ExportStreamResponse {
	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	Export value = 1;

	// Time holds the timestamp of this Export's last modification.
	google.protobuf.Timestamp time = 2;

	// Operation indicates how the Export value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	arista.subscriptions.Operation type = 3;
};

service ExportService {
	rpc GetOne (ExportRequest) returns (ExportResponse);
	rpc GetAll (ExportStreamRequest) returns (stream ExportStreamResponse);
	rpc Subscribe (ExportStreamRequest) returns (stream ExportStreamResponse);
}

message ExportConfigRequest {
	// Key uniquely identifies a ExportConfig instance to retrieve.
	// This value must be populated.
	ExportKey key = 1;

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	google.protobuf.Timestamp time = 2;
};

message ExportConfigResponse {
	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	ExportConfig value = 1;

	// Time carries the (UTC) timestamp of the last-modification of the
	// ExportConfig instance in this response.
	google.protobuf.Timestamp time = 2;
};

message ExportConfigStreamRequest {
	// PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
	// This requires all provided fields to be equal to the response.
	//
	// While transparent to users, this field also allows services to optimize internal
	// subscriptions if filter(s) are sufficiently specific.
	repeated ExportConfig partial_eq_filter = 1;

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// This field is not allowed in the Subscribe RPC.
	arista.time.TimeBounds time = 3;
};

message ExportConfigStreamResponse {
	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	ExportConfig value = 1;

	// Time holds the timestamp of this ExportConfig's last modification.
	google.protobuf.Timestamp time = 2;

	// Operation indicates how the ExportConfig value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	arista.subscriptions.Operation type = 3;
};

message ExportConfigSetRequest {
	// ExportConfig carries the value to set into the datastore.
	// See the documentation on the ExportConfig struct for which fields are required.
	ExportConfig value = 1;
};

message ExportConfigSetResponse {
	// Value carries all the values given in the ExportConfigSetRequest as well
	// as any server-generated values.
	ExportConfig value = 1;

	// Time indicates the (UTC) timestamp at which the system recognizes the
	// creation. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==CreatedAt will include this instance.
	//
	google.protobuf.Timestamp time = 2;
};

message ExportConfigDeleteRequest {
	// Key indicates which ExportConfig instance to remove.
	// This field must always be set.
	ExportKey key = 1;
};

message ExportConfigDeleteResponse {
	// Key echoes back the key of the deleted ExportConfig instance.
	ExportKey key = 1;

	// Time indicates the (UTC) timestamp at which the system recognizes the
	// deletion. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==DeletedAt will not include this instance.
	//
	google.protobuf.Timestamp time = 2;
};

service ExportConfigService {
	rpc GetOne (ExportConfigRequest) returns (ExportConfigResponse);
	rpc GetAll (ExportConfigStreamRequest) returns (stream ExportConfigStreamResponse);
	rpc Subscribe (ExportConfigStreamRequest) returns (stream ExportConfigStreamResponse);
	rpc Set (ExportConfigSetRequest) returns (ExportConfigSetResponse);
	rpc Delete (ExportConfigDeleteRequest) returns (ExportConfigDeleteResponse);
}

message ExportFormatConfigRequest {

	// Time indicates the time for which you are interested in the data.
	// If no time is given, the server will use the time at which it makes the request.
	google.protobuf.Timestamp time = 2;
};

message ExportFormatConfigResponse {
	// Value is the value requested.
	// This structure will be fully-populated as it exists in the datastore. If
	// optional fields were not given at creation, these fields will be empty or
	// set to default values.
	ExportFormatConfig value = 1;

	// Time carries the (UTC) timestamp of the last-modification of the
	// ExportFormatConfig instance in this response.
	google.protobuf.Timestamp time = 2;
};

message ExportFormatConfigStreamRequest {
	// PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.
	// This requires all provided fields to be equal to the response.
	//
	// While transparent to users, this field also allows services to optimize internal
	// subscriptions if filter(s) are sufficiently specific.
	repeated ExportFormatConfig partial_eq_filter = 1;

	// TimeRange allows limiting response data to within a specified time window.
	// If this field is populated, at least one of the two time fields are required.
	//
	// This field is not allowed in the Subscribe RPC.
	arista.time.TimeBounds time = 3;
};

message ExportFormatConfigStreamResponse {
	// Value is a value deemed relevant to the initiating request.
	// This structure will always have its key-field populated. Which other fields are
	// populated, and why, depends on the value of Operation and what triggered this notification.
	ExportFormatConfig value = 1;

	// Time holds the timestamp of this ExportFormatConfig's last modification.
	google.protobuf.Timestamp time = 2;

	// Operation indicates how the ExportFormatConfig value in this response should be considered.
	// Under non-subscribe requests, this value should always be INITIAL. In a subscription,
	// once all initial data is streamed and the client begins to receive modification updates,
	// you should not see INITIAL again.
	arista.subscriptions.Operation type = 3;
};

message ExportFormatConfigSetRequest {
	// ExportFormatConfig carries the value to set into the datastore.
	// See the documentation on the ExportFormatConfig struct for which fields are required.
	ExportFormatConfig value = 1;
};

message ExportFormatConfigSetResponse {
	// Value carries all the values given in the ExportFormatConfigSetRequest as well
	// as any server-generated values.
	ExportFormatConfig value = 1;

	// Time indicates the (UTC) timestamp at which the system recognizes the
	// creation. The only guarantees made about this timestamp are:
	//
	//    - it is after the time the request was received
	//    - a time-ranged query with StartTime==CreatedAt will include this instance.
	//
	google.protobuf.Timestamp time = 2;
};

service ExportFormatConfigService {
	rpc GetOne (ExportFormatConfigRequest) returns (ExportFormatConfigResponse);
	
	rpc Subscribe (ExportFormatConfigStreamRequest) returns (stream ExportFormatConfigStreamResponse);
	rpc Set (ExportFormatConfigSetRequest) returns (ExportFormatConfigSetResponse);
	
}
