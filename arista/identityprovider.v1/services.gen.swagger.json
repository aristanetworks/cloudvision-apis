{
  "swagger": "2.0",
  "info": {
    "title": "arista.identityprovider.v1 Resources",
    "version": "CV_RESOURCE_VER_DEV",
    "license": {
      "name": "Apache License 2.0",
      "url": "https://github.com/aristanetworks/cloudvision-apis/blob/trunk/COPYING"
    }
  },
  "tags": [
    {
      "name": "OAuthConfigService"
    },
    {
      "name": "SAMLConfigService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/resources/identityprovider/v1/OAuthConfig": {
      "get": {
        "operationId": "OAuthConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.providerId",
            "description": "provider_id is the ID of the OAuth provider.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      },
      "delete": {
        "operationId": "OAuthConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.providerId",
            "description": "provider_id is the ID of the OAuth provider.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      },
      "post": {
        "operationId": "OAuthConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "OAuthConfig carries the value to set into the datastore.\nSee the documentation on the OAuthConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig"
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/all": {
      "get": {
        "operationId": "OAuthConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      },
      "delete": {
        "operationId": "OAuthConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "OAuthConfigService"
        ]
      },
      "post": {
        "operationId": "OAuthConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/deletesome": {
      "post": {
        "operationId": "OAuthConfigService_DeleteSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigDeleteSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigDeleteSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "keys",
            "description": "key contains a list of OAuthConfig keys to delete",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey"
              }
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/getsome": {
      "post": {
        "operationId": "OAuthConfigService_GetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "keys",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey"
              }
            }
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/metadata": {
      "get": {
        "operationId": "OAuthConfigService_GetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      },
      "post": {
        "operationId": "OAuthConfigService_GetMeta2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/some": {
      "post": {
        "operationId": "OAuthConfigService_SetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigSetSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigSetSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "values",
            "description": "value contains a list of OAuthConfig values to write.\nIt is possible to provide more values than can fit within either:\n    - the maxiumum send size of the client\n    - the maximum receive size of the server\nIf this error occurs you must reduce the number of values sent.\nSee gRPC \"maximum message size\" documentation for more information.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig"
              }
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/watch": {
      "get": {
        "operationId": "OAuthConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      },
      "post": {
        "operationId": "OAuthConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.OAuthConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/OAuthConfig/watchmetadata": {
      "get": {
        "operationId": "OAuthConfigService_SubscribeMeta",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      },
      "post": {
        "operationId": "OAuthConfigService_SubscribeMeta2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "OAuthConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig": {
      "get": {
        "operationId": "SAMLConfigService_GetOne",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.providerId",
            "description": "provider_id is the ID of the SAML provider.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      },
      "delete": {
        "operationId": "SAMLConfigService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "key.providerId",
            "description": "provider_id is the ID of the SAML provider.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      },
      "post": {
        "operationId": "SAMLConfigService_Set",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "description": "SAMLConfig carries the value to set into the datastore.\nSee the documentation on the SAMLConfig struct for which fields are required.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig"
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/all": {
      "get": {
        "operationId": "SAMLConfigService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      },
      "delete": {
        "operationId": "SAMLConfigService_DeleteAll",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigDeleteAllResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigDeleteAllResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "SAMLConfigService"
        ]
      },
      "post": {
        "operationId": "SAMLConfigService_GetAll2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/deletesome": {
      "post": {
        "operationId": "SAMLConfigService_DeleteSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigDeleteSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigDeleteSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "keys",
            "description": "key contains a list of SAMLConfig keys to delete",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey"
              }
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/getsome": {
      "post": {
        "operationId": "SAMLConfigService_GetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "keys",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey"
              }
            }
          },
          {
            "name": "time",
            "description": "Time indicates the time for which you are interested in the data.\nIf no time is given, the server will use the time at which it makes the request.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/metadata": {
      "get": {
        "operationId": "SAMLConfigService_GetMeta",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      },
      "post": {
        "operationId": "SAMLConfigService_GetMeta2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/some": {
      "post": {
        "operationId": "SAMLConfigService_SetSome",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigSetSomeResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigSetSomeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "values",
            "description": "value contains a list of SAMLConfig values to write.\nIt is possible to provide more values than can fit within either:\n    - the maxiumum send size of the client\n    - the maximum receive size of the server\nIf this error occurs you must reduce the number of values sent.\nSee gRPC \"maximum message size\" documentation for more information.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig"
              }
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/watch": {
      "get": {
        "operationId": "SAMLConfigService_Subscribe",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      },
      "post": {
        "operationId": "SAMLConfigService_Subscribe2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.SAMLConfigStreamResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    },
    "/api/resources/identityprovider/v1/SAMLConfig/watchmetadata": {
      "get": {
        "operationId": "SAMLConfigService_SubscribeMeta",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "time.start",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "time.end",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      },
      "post": {
        "operationId": "SAMLConfigService_SubscribeMeta2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/arista.identityprovider.v1.MetaResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of arista.identityprovider.v1.MetaResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfigStreamRequest"
            }
          }
        ],
        "tags": [
          "SAMLConfigService"
        ]
      }
    }
  },
  "definitions": {
    "arista.identityprovider.v1.MetaResponse": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of the last item included in the metadata calculation."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        },
        "count": {
          "type": "integer",
          "format": "int64",
          "description": "Count is the number of items present under the conditions of the request."
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey",
          "description": "key is the ID of the OAuth provider."
        },
        "endpoint": {
          "type": "string",
          "description": "endpoint is the URL that identifies an OAuth authorization server.\nThis endpoint is used to interact with the provider. It must be a\nURI [RFC3986] with a scheme component that must be https, a host component,\nand optionally, port and path components, but no query or fragment components."
        },
        "clientId": {
          "type": "string",
          "description": "client_id is the ID that the OAuth authorization server issues to the\nregistered client."
        },
        "clientSecret": {
          "type": "string",
          "description": "client_secret is the secret that the OAuth authorization server issues\nto the registered client."
        },
        "algorithms": {
          "$ref": "#/definitions/fmp.RepeatedString",
          "description": "algorithms is the set of signing algorithms. This is an optional field.\nIf specified, only this set of algorithms may be used to sign the JWT.\nOtherwise, this defaults to the set of algorithms that the provider supports."
        },
        "linkToSharedProvider": {
          "type": "boolean",
          "description": "link_to_shared_provider indicates whether or not use the provider as a shared\nprovider. This is an optional field and set to false by default."
        },
        "jwksUri": {
          "type": "string",
          "description": "jwks_uri is where signing keys are downloaded. This is an optional field.\nOnly needed if the default construction from endpoint would be incorrect."
        },
        "permittedEmailDomains": {
          "$ref": "#/definitions/fmp.RepeatedString",
          "description": "permitted_email_domains are domains of emails that users are allowed to use.\nThis is an optional field. If not set, all domains are accepted by default."
        },
        "rolesScopeName": {
          "type": "string",
          "description": "roles_scope_name is the name for a scope tied to a claim that holds\nCloudVision roles in ID Token. CloudVision uses scope values to specify\nwhat access privileges are being requested for id token. CloudVision\nappends this value to `scope` query parameter in the authorization request URL.\nThis is an optional field. If not set, CloudVision determines that\nmapping roles from the provider is disabled. If it's set, roles_claim_name\nalso needs to be set."
        },
        "bearerTokenIntrospectionEndpoint": {
          "type": "string",
          "description": "bearer_token_introspection_endpoint is the provider instrospection endpoint used in\nBearer Token based login support for CloudVision. This endpoint will be used to verify\nthe bearer token received when an external application is logging in. This is an\noptional field. CloudVision will only support this feature for a single provider per\norg, hence only one provider is allowed to have this field set. If not set for any\nproviders, CloudVision determines that Bearer Token based login support is disabled."
        },
        "rolesClaimName": {
          "type": "string",
          "description": "roles_claim_name is the name for a claim that holds CloudVision roles in ID Token.\nCloudVision uses this value to look up roles in the ID Token.\nThis is an optional field. If not set, CloudVision determines that\nmapping roles from the provider is disabled. If it's set, roles_scope_name\nalso needs to be set."
        }
      },
      "description": "OAuthConfig holds the configuration for an OAuth provider."
    },
    "arista.identityprovider.v1.OAuthConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey",
          "description": "This is the key of the OAuthConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey",
          "description": "Key echoes back the key of the deleted OAuthConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigDeleteSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey"
        },
        "error": {
          "type": "string"
        }
      },
      "description": "OAuthConfigDeleteSomeResponse is only sent when there is an error."
    },
    "arista.identityprovider.v1.OAuthConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nOAuthConfig instance in this response."
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig",
          "description": "Value carries all the values given in the OAuthConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigSetSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthKey"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigSomeResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "error": {
          "type": "string",
          "description": "Error is an optional field.\nIt should be filled when there is an error in the GetSome process."
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nFor GetAll, the fields start and end can be used as follows:\n\n  * end: Returns the state of each OAuthConfig at end.\n    * Each OAuthConfig response is fully-specified (all fields set).\n  * start: Returns the state of each OAuthConfig at start, followed by updates until now.\n    * Each OAuthConfig response at start is fully-specified, but updates may be partial.\n  * start and end: Returns the state of each OAuthConfig at start, followed by updates\n    until end.\n    * Each OAuthConfig response at start is fully-specified, but updates until end may\n      be partial.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.identityprovider.v1.OAuthConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.OAuthConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this OAuthConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the OAuthConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.identityprovider.v1.OAuthKey": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "provider_id is the ID of the OAuth provider."
        }
      },
      "description": "OAuthKey contains OAuth provider ID.",
      "required": [
        "providerId"
      ]
    },
    "arista.identityprovider.v1.ProtocolBinding": {
      "type": "string",
      "enum": [
        "PROTOCOL_BINDING_UNSPECIFIED",
        "PROTOCOL_BINDING_HTTP_POST",
        "PROTOCOL_BINDING_HTTP_REDIRECT"
      ],
      "default": "PROTOCOL_BINDING_UNSPECIFIED",
      "description": "ProtocolBinding indicates SAML protocol binding to be used.\n\n - PROTOCOL_BINDING_UNSPECIFIED: PROTOCOL_BINDING_UNSPECIFIED indicates that a protocol binding is unspecified.\n - PROTOCOL_BINDING_HTTP_POST: PROTOCOL_BINDING_HTTP_POST indicates HTTP-POST SAML protocol binding.\n - PROTOCOL_BINDING_HTTP_REDIRECT: PROTOCOL_BINDING_HTTP_REDIRECT indicates HTTP-Redirect SAML protocol binding."
    },
    "arista.identityprovider.v1.SAMLConfig": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey",
          "description": "key is the ID of the SAML provider."
        },
        "idpIssuer": {
          "type": "string",
          "description": "idp_issuer identifies the SAML provider. There is no restriction on its format\nother than a string to carry the issuer's name."
        },
        "idpMetadataUrl": {
          "type": "string",
          "description": "idp_metadata_url is the URL that CloudVision uses to fetch the\nSAML provider metadata."
        },
        "authreqBinding": {
          "$ref": "#/definitions/arista.identityprovider.v1.ProtocolBinding",
          "description": "authreq_binding specifies the ProtocolBinding used to send SAML authentication\nrequest to the SAML provider."
        },
        "emailAttrname": {
          "type": "string",
          "description": "email_attrname specifies the Attribute name for email ID in Assertion of SAMLResponse\nfrom the SAML provider."
        },
        "linkToSharedProvider": {
          "type": "boolean",
          "description": "link_to_shared_provider indicates whether or not use the provider as a shared\nprovider. This is an optional field and set to false by default."
        },
        "permittedEmailDomains": {
          "$ref": "#/definitions/fmp.RepeatedString",
          "description": "permitted_email_domains are domains of emails that users are allowed to use.\nThis is an optional field. If not set, all domains are accepted by default."
        },
        "forceSamlAuthn": {
          "type": "boolean",
          "description": "force_saml_authn indicates wether or not enable force authentication in SAML login.\nThis is an optional field. If not set, it defaults to false."
        },
        "rolesAttrname": {
          "type": "string",
          "description": "roles_attrname specifies the Attribute name for CloudVision roles in the Assertion\nof SAMLResponse. This is an optional field. If not set, CloudVision determines that\nmapping roles from the provider is disabled."
        },
        "orgAttrname": {
          "type": "string",
          "description": "org_attrname specifies the Attribute name for CloudVision organization/tenant in\nthe Assertion of SAMLResponse. This is an optional field. CloudVision supports use\nof certain shared SAML Identity Providers for authenticating users across multiple\nCloudVision organizations/tenants. In case a given organization uses a shared provider,\nthen, CloudVision needs this attribute to determine if the organization that\nthe shared SAML Identity Provider is sending the assertion for is the same as the\none the user requested to be logged into. For an existing user on CloudVision,\nthe user's email is used to determine which organization the user belongs to do\nthe same verification but in case a dynamic user creation is needed and the given\nuser doesn't exist on CloudVision currently then the matching organization attribute\nfrom the shared Identity Privder becomes necessary. Dynamic user creation is\ndisabled for a given organization using shared Identity Provider if this attribute\nis not specified."
        },
        "usernameAttrname": {
          "type": "string",
          "description": "username_attrname specifies Attribute name for CloudVision users' username in the\nAssertion of SAMLResponse. This is an optional field as long as mapping roles from\nprovider is not enabled. Once enabled, this field becomes mandatory."
        }
      },
      "description": "SAMLConfig holds the configuration for a SAML provider."
    },
    "arista.identityprovider.v1.SAMLConfigDeleteAllResponse": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fmp.DeleteError",
          "description": "This describes the class of delete error."
        },
        "error": {
          "type": "string",
          "description": "This indicates the error message from the delete failure."
        },
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey",
          "description": "This is the key of the SAMLConfig instance that failed to be deleted."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time indicates the (UTC) timestamp when the key was being deleted."
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigDeleteResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey",
          "description": "Key echoes back the key of the deleted SAMLConfig instance."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==DeletedAt will not include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ndeletion. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigDeleteSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey"
        },
        "error": {
          "type": "string"
        }
      },
      "description": "SAMLConfigDeleteSomeResponse is only sent when there is an error."
    },
    "arista.identityprovider.v1.SAMLConfigResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time carries the (UTC) timestamp of the last-modification of the\nSAMLConfig instance in this response."
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigSetResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig",
          "description": "Value carries all the values given in the SAMLConfigSetRequest as well\nas any server-generated values."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "- it is after the time the request was received\n   - a time-ranged query with StartTime==CreatedAt will include this instance.",
          "title": "Time indicates the (UTC) timestamp at which the system recognizes the\ncreation. The only guarantees made about this timestamp are:"
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigSetSomeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLKey"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigSomeResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig",
          "description": "Value is the value requested.\nThis structure will be fully-populated as it exists in the datastore. If\noptional fields were not given at creation, these fields will be empty or\nset to default values."
        },
        "error": {
          "type": "string",
          "description": "Error is an optional field.\nIt should be filled when there is an error in the GetSome process."
        },
        "time": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigStreamRequest": {
      "type": "object",
      "properties": {
        "partialEqFilter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig"
          },
          "description": "PartialEqFilter provides a way to server-side filter a GetAll/Subscribe.\nThis requires all provided fields to be equal to the response.\n\nWhile transparent to users, this field also allows services to optimize internal\nsubscriptions if filter(s) are sufficiently specific."
        },
        "time": {
          "$ref": "#/definitions/arista.time.TimeBounds",
          "description": "TimeRange allows limiting response data to within a specified time window.\nIf this field is populated, at least one of the two time fields are required.\n\nFor GetAll, the fields start and end can be used as follows:\n\n  * end: Returns the state of each SAMLConfig at end.\n    * Each SAMLConfig response is fully-specified (all fields set).\n  * start: Returns the state of each SAMLConfig at start, followed by updates until now.\n    * Each SAMLConfig response at start is fully-specified, but updates may be partial.\n  * start and end: Returns the state of each SAMLConfig at start, followed by updates\n    until end.\n    * Each SAMLConfig response at start is fully-specified, but updates until end may\n      be partial.\n\nThis field is not allowed in the Subscribe RPC."
        }
      }
    },
    "arista.identityprovider.v1.SAMLConfigStreamResponse": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/arista.identityprovider.v1.SAMLConfig",
          "description": "Value is a value deemed relevant to the initiating request.\nThis structure will always have its key-field populated. Which other fields are\npopulated, and why, depends on the value of Operation and what triggered this notification."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time holds the timestamp of this SAMLConfig's last modification."
        },
        "type": {
          "$ref": "#/definitions/arista.subscriptions.Operation",
          "description": "Operation indicates how the SAMLConfig value in this response should be considered.\nUnder non-subscribe requests, this value should always be INITIAL. In a subscription,\nonce all initial data is streamed and the client begins to receive modification updates,\nyou should not see INITIAL again."
        }
      }
    },
    "arista.identityprovider.v1.SAMLKey": {
      "type": "object",
      "properties": {
        "providerId": {
          "type": "string",
          "description": "provider_id is the ID of the SAML provider."
        }
      },
      "description": "SAMLKey contains SAML Provider ID.",
      "required": [
        "providerId"
      ]
    },
    "arista.subscriptions.Operation": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "INITIAL",
        "INITIAL_SYNC_COMPLETE",
        "UPDATED",
        "DELETED"
      ],
      "default": "UNSPECIFIED",
      "description": " - INITIAL: INITIAL indicates the associated notification is that of the\ncurrent state and a fully-specified Resource is provided.\n - INITIAL_SYNC_COMPLETE: INITIAL_SYNC_COMPLETE indicates all existing-state has been\nstreamed to the client. This status will be sent in an\notherwise-empty message and no subsequent INITIAL messages\nshould be expected.\n - UPDATED: UPDATED indicates the associated notification carries\nmodification to the last-streamed state. This indicates\nthe contained Resource may be a partial diff, though, it\nmay contain a fully-specified Resource.\n - DELETED: DETLETED indicates the associated notification carries\na deletion. The Resource's key will always be set in this case,\nbut no other fields should be expected."
    },
    "arista.time.TimeBounds": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "fmp.DeleteError": {
      "type": "string",
      "enum": [
        "DELETE_ERROR_UNSPECIFIED",
        "DELETE_ERROR_UNAUTHORIZED",
        "DELETE_ERROR_INTERNAL",
        "DELETE_ERROR_UNDELETABLE_KEY"
      ],
      "default": "DELETE_ERROR_UNSPECIFIED",
      "description": "DeleteError defines the set of delete error types.\n\n - DELETE_ERROR_UNSPECIFIED: DELETE_ERROR_UNSPECIFIED indicates that the delete error\nis not specified.\n - DELETE_ERROR_UNAUTHORIZED: DELETE_ERROR_UNAUTHORIZED indicates that the user is not authorized\nto perform the specified delete.\n - DELETE_ERROR_INTERNAL: DELETE_ERROR_INTERNAL indicates that the server encountered an\nunrecoverable error on the specified delete.\n - DELETE_ERROR_UNDELETABLE_KEY: DELETE_ERROR_UNDELETABLE_KEY indicates that the specified error is\nnot allowed by the service."
    },
    "fmp.RepeatedString": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The repeated string values."
        }
      },
      "description": "Wrapper message for `repeated string`."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiToken": {
      "type": "apiKey",
      "name": "access_token",
      "in": "header"
    }
  },
  "security": [
    {
      "apiToken": []
    }
  ],
  "externalDocs": {
    "description": "More on CloudVision Resource APIs",
    "url": "https://aristanetworks.github.io/cloudvision-apis"
  }
}
